//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18051
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.18051 版自动生成。
// 
#pragma warning disable 1591

namespace Shove.I3kmSMS_GatewayService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="sms_gatewaySoap", Namespace="http://tempuri.org/")]
    public partial class sms_gateway : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SMSReceiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSMS_2OperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryBalanceOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public sms_gateway() {
            this.Url = global::Shove.Properties.Settings.Default.Shove_I3kmSMS_GatewayService_sms_gateway;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SMSReceiveCompletedEventHandler SMSReceiveCompleted;
        
        /// <remarks/>
        public event SendSMS_2CompletedEventHandler SendSMS_2Completed;
        
        /// <remarks/>
        public event QueryBalanceCompletedEventHandler QueryBalanceCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SMSReceive", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SMSReceive(string RegCode, string TimeStamp, string Sign, string Content, string To) {
            object[] results = this.Invoke("SMSReceive", new object[] {
                        RegCode,
                        TimeStamp,
                        Sign,
                        Content,
                        To});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SMSReceiveAsync(string RegCode, string TimeStamp, string Sign, string Content, string To) {
            this.SMSReceiveAsync(RegCode, TimeStamp, Sign, Content, To, null);
        }
        
        /// <remarks/>
        public void SMSReceiveAsync(string RegCode, string TimeStamp, string Sign, string Content, string To, object userState) {
            if ((this.SMSReceiveOperationCompleted == null)) {
                this.SMSReceiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSMSReceiveOperationCompleted);
            }
            this.InvokeAsync("SMSReceive", new object[] {
                        RegCode,
                        TimeStamp,
                        Sign,
                        Content,
                        To}, this.SMSReceiveOperationCompleted, userState);
        }
        
        private void OnSMSReceiveOperationCompleted(object arg) {
            if ((this.SMSReceiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SMSReceiveCompleted(this, new SMSReceiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSMS_2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SendSMS_2(string RegCode, string TimeStamp, string Sign, string Content, string To, System.DateTime SendTime) {
            object[] results = this.Invoke("SendSMS_2", new object[] {
                        RegCode,
                        TimeStamp,
                        Sign,
                        Content,
                        To,
                        SendTime});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SendSMS_2Async(string RegCode, string TimeStamp, string Sign, string Content, string To, System.DateTime SendTime) {
            this.SendSMS_2Async(RegCode, TimeStamp, Sign, Content, To, SendTime, null);
        }
        
        /// <remarks/>
        public void SendSMS_2Async(string RegCode, string TimeStamp, string Sign, string Content, string To, System.DateTime SendTime, object userState) {
            if ((this.SendSMS_2OperationCompleted == null)) {
                this.SendSMS_2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSMS_2OperationCompleted);
            }
            this.InvokeAsync("SendSMS_2", new object[] {
                        RegCode,
                        TimeStamp,
                        Sign,
                        Content,
                        To,
                        SendTime}, this.SendSMS_2OperationCompleted, userState);
        }
        
        private void OnSendSMS_2OperationCompleted(object arg) {
            if ((this.SendSMS_2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSMS_2Completed(this, new SendSMS_2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryBalance", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryBalance(string RegCode, string TimeStamp, string Sign) {
            object[] results = this.Invoke("QueryBalance", new object[] {
                        RegCode,
                        TimeStamp,
                        Sign});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryBalanceAsync(string RegCode, string TimeStamp, string Sign) {
            this.QueryBalanceAsync(RegCode, TimeStamp, Sign, null);
        }
        
        /// <remarks/>
        public void QueryBalanceAsync(string RegCode, string TimeStamp, string Sign, object userState) {
            if ((this.QueryBalanceOperationCompleted == null)) {
                this.QueryBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryBalanceOperationCompleted);
            }
            this.InvokeAsync("QueryBalance", new object[] {
                        RegCode,
                        TimeStamp,
                        Sign}, this.QueryBalanceOperationCompleted, userState);
        }
        
        private void OnQueryBalanceOperationCompleted(object arg) {
            if ((this.QueryBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryBalanceCompleted(this, new QueryBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SMSReceiveCompletedEventHandler(object sender, SMSReceiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SMSReceiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SMSReceiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendSMS_2CompletedEventHandler(object sender, SendSMS_2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSMS_2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSMS_2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void QueryBalanceCompletedEventHandler(object sender, QueryBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591