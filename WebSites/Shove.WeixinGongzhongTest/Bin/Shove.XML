<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Shove</name>
    </assembly>
    <members>
        <member name="T:Shove.Database.DatabaseAccess">
            <summary>
            Shove 的数据库访问组件类的基类
            </summary>
        </member>
        <member name="F:Shove.Database.DatabaseAccess.DesKey">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.Database.DatabaseAccess.GetCallCert">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.DatabaseAccess.GetConnectionStringFromConfig">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.DatabaseAccess.CreateDataConnection``1">
            <summary>
            创建一个连接，从 Web.Config 中的连接串。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.DatabaseAccess.CreateDataConnection``1(System.String)">
            <summary>
            创建一个连接
            </summary>
            <param name="ConnectionString"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.DatabaseAccess.FilteSqlInfusionForCondition(System.String)">
            <summary>
            过滤 Sql 注入，过滤 condition 等 html 编辑器的恶意代码注入
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.Database.Oracle">
            <summary>
            Shove 的专用的 Oracle 访问组件类
            </summary>
        </member>
        <member name="M:Shove.Database.Oracle.isContainOracleTypeCursor(System.Data.OracleClient.OracleCommand)">
            <summary>
            参数列表中是否包含了 OracleType.Cursor 类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.BuildConnectString(System.String)">
            <summary>
            构建连接串
            </summary>
            <param name="ServerName"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.BuildConnectString(System.String,System.String,System.String)">
            <summary>
            构建连接串
            </summary>
            <param name="ServerName"></param>
            <param name="UserId"></param>
            <param name="Password"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.Database.Oracle.Parameter">
            <summary>
            参数
            </summary>
        </member>
        <member name="F:Shove.Database.Oracle.Parameter.Name">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.Database.Oracle.Parameter.Type">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.Database.Oracle.Parameter.Size">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.Database.Oracle.Parameter.Direction">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.Database.Oracle.Parameter.Value">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.Database.Oracle.Parameter.#ctor(System.String,System.Data.OracleClient.OracleType,System.Int32,System.Data.ParameterDirection,System.Object)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <param name="size"></param>
            <param name="direction"></param>
            <param name="value"></param>
        </member>
        <member name="T:Shove.Database.Oracle.OutputParameter">
            <summary>
            输入参数
            </summary>
        </member>
        <member name="M:Shove.Database.Oracle.OutputParameter.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.Database.Oracle.OutputParameter.Add(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="Name"></param>
            <param name="Value"></param>
        </member>
        <member name="M:Shove.Database.Oracle.OutputParameter.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="P:Shove.Database.Oracle.OutputParameter.Count">
            <summary>
            
            </summary>
        </member>
        <member name="P:Shove.Database.Oracle.OutputParameter.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="Index"></param>
            <returns></returns>
        </member>
        <member name="P:Shove.Database.Oracle.OutputParameter.Item(System.String)">
            <summary>
            
            </summary>
            <param name="Name"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.ExecuteNonQuery(System.String,Shove.Database.Oracle.OutputParameter@,Shove.Database.Oracle.Parameter[])">
            <summary>
            执行数据库命令
            </summary>
            <param name="CommandText"></param>
            <param name="Outputs"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.ExecuteNonQuery(System.String,System.String,Shove.Database.Oracle.OutputParameter@,Shove.Database.Oracle.Parameter[])">
            <summary>
            执行数据库命令
            </summary>
            <param name="ConnectionString"></param>
            <param name="CommandText"></param>
            <param name="Outputs"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.ExecuteNonQuery(System.Data.OracleClient.OracleConnection,System.String,Shove.Database.Oracle.OutputParameter@,Shove.Database.Oracle.Parameter[])">
            <summary>
            执行数据库命令
            </summary>
            <param name="conn"></param>
            <param name="CommandText"></param>
            <param name="Outputs"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.ExecuteNonQueryNoTranscation(System.Data.OracleClient.OracleConnection,System.String,Shove.Database.Oracle.OutputParameter@,Shove.Database.Oracle.Parameter[])">
            <summary>
            执行数据库命令(不用事务)
            </summary>
            <param name="conn"></param>
            <param name="CommandText"></param>
            <param name="Outputs"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.Select(System.String,Shove.Database.Oracle.Parameter[])">
            <summary>
            打开数据集
            </summary>
            <param name="CommandText"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.Select(System.String,System.String,Shove.Database.Oracle.Parameter[])">
            <summary>
            打开数据集
            </summary>
            <param name="ConnectionString"></param>
            <param name="CommandText"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.Select(System.Data.OracleClient.OracleConnection,System.String,Shove.Database.Oracle.Parameter[])">
            <summary>
            打开数据集
            </summary>
            <param name="conn"></param>
            <param name="CommandText"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.ExecuteScalar(System.String,Shove.Database.Oracle.Parameter[])">
            <summary>
            读取第一行第一列
            </summary>
            <param name="CommandText"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.ExecuteScalar(System.String,System.String,Shove.Database.Oracle.Parameter[])">
            <summary>
            读取第一行第一列
            </summary>
            <param name="ConnectionString"></param>
            <param name="CommandText"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.ExecuteScalar(System.Data.OracleClient.OracleConnection,System.String,Shove.Database.Oracle.Parameter[])">
            <summary>
            读取第一行第一列
            </summary>
            <param name="conn"></param>
            <param name="CommandText"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.ExecuteFunction(System.String,System.Data.OracleClient.OracleType,System.Int32,Shove.Database.Oracle.OutputParameter@,Shove.Database.Oracle.Parameter[])">
            <summary>
            执行函数
            </summary>
            <param name="FunctionName"></param>
            <param name="ReturnDbType"></param>
            <param name="ReturnSize"></param>
            <param name="Outputs"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.ExecuteFunction(System.String,System.String,System.Data.OracleClient.OracleType,System.Int32,Shove.Database.Oracle.OutputParameter@,Shove.Database.Oracle.Parameter[])">
            <summary>
            执行函数
            </summary>
            <param name="ConnectionString"></param>
            <param name="FunctionName"></param>
            <param name="ReturnDbType"></param>
            <param name="ReturnSize"></param>
            <param name="Outputs"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.ExecuteFunction(System.Data.OracleClient.OracleConnection,System.String,System.Data.OracleClient.OracleType,System.Int32,Shove.Database.Oracle.OutputParameter@,Shove.Database.Oracle.Parameter[])">
            <summary>
            执行函数
            </summary>
            <param name="conn"></param>
            <param name="FunctionName"></param>
            <param name="ReturnDbType"></param>
            <param name="ReturnSize"></param>
            <param name="Outputs"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.ExecuteFunctionWithQuery(System.String,System.Data.OracleClient.OracleType,System.Int32,System.Data.DataSet@,Shove.Database.Oracle.OutputParameter@,Shove.Database.Oracle.Parameter[])">
            <summary>
            执行函数，返回结果集
            </summary>
            <param name="FunctionName"></param>
            <param name="ReturnDbType"></param>
            <param name="ReturnSize"></param>
            <param name="ReturnDataSet"></param>
            <param name="Outputs"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.ExecuteFunctionWithQuery(System.String,System.String,System.Data.OracleClient.OracleType,System.Int32,System.Data.DataSet@,Shove.Database.Oracle.OutputParameter@,Shove.Database.Oracle.Parameter[])">
            <summary>
            执行函数，返回结果集
            </summary>
            <param name="ConnectionString"></param>
            <param name="FunctionName"></param>
            <param name="ReturnDbType"></param>
            <param name="ReturnSize"></param>
            <param name="ReturnDataSet"></param>
            <param name="Outputs"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.ExecuteFunctionWithQuery(System.Data.OracleClient.OracleConnection,System.String,System.Data.OracleClient.OracleType,System.Int32,System.Data.DataSet@,Shove.Database.Oracle.OutputParameter@,Shove.Database.Oracle.Parameter[])">
            <summary>
            执行函数，返回结果集
            </summary>
            <param name="conn"></param>
            <param name="FunctionName"></param>
            <param name="ReturnDbType"></param>
            <param name="ReturnSize"></param>
            <param name="ReturnDataSet"></param>
            <param name="Outputs"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.ExecuteProcedure(System.String,Shove.Database.Oracle.OutputParameter@,Shove.Database.Oracle.Parameter[])">
            <summary>
            执行存储过程
            </summary>
            <param name="ProcedureName"></param>
            <param name="Outputs"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.ExecuteProcedure(System.String,System.String,Shove.Database.Oracle.OutputParameter@,Shove.Database.Oracle.Parameter[])">
            <summary>
            执行存储过程
            </summary>
            <param name="ConnectionString"></param>
            <param name="ProcedureName"></param>
            <param name="Outputs"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.ExecuteProcedure(System.Data.OracleClient.OracleConnection,System.String,Shove.Database.Oracle.OutputParameter@,Shove.Database.Oracle.Parameter[])">
            <summary>
            执行存储过程
            </summary>
            <param name="conn"></param>
            <param name="ProcedureName"></param>
            <param name="Outputs"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.ExecuteProcedureWithQuery(System.String,System.Data.DataSet@,Shove.Database.Oracle.OutputParameter@,Shove.Database.Oracle.Parameter[])">
            <summary>
            执行存储过程，返回结果集
            </summary>
            <param name="ProcedureName"></param>
            <param name="ReturnDataSet"></param>
            <param name="Outputs"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.ExecuteProcedureWithQuery(System.String,System.String,System.Data.DataSet@,Shove.Database.Oracle.OutputParameter@,Shove.Database.Oracle.Parameter[])">
            <summary>
            执行存储过程，返回结果集
            </summary>
            <param name="ConnectionString"></param>
            <param name="ProcedureName"></param>
            <param name="ReturnDataSet"></param>
            <param name="Outputs"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.ExecuteProcedureWithQuery(System.Data.OracleClient.OracleConnection,System.String,System.Data.DataSet@,Shove.Database.Oracle.OutputParameter@,Shove.Database.Oracle.Parameter[])">
            <summary>
            执行存储过程，返回结果集
            </summary>
            <param name="conn"></param>
            <param name="ProcedureName"></param>
            <param name="ReturnDataSet"></param>
            <param name="Outputs"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.BackupDataToZipStream">
            <summary>
            备份数据库(表数据库 XML 描述，压缩为二进制流)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.BackupDataToZipStream(System.String)">
            <summary>
            备份数据库(表数据库 XML 描述，压缩为二进制流)
            </summary>
            <param name="ConnectionString"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.BackupDataToZipStream(System.Data.OracleClient.OracleConnection)">
            <summary>
            备份数据库(表数据库 XML 描述，压缩为二进制流)
            </summary>
            <param name="conn"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.RestoreDataFromZipStream(System.Byte[])">
            <summary>
            恢复数据库(从二进制压缩流中提取表数据库的 XML 进行恢复)
            </summary>
            <param name="DataBuffer"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.RestoreDataFromZipStream(System.String,System.Byte[])">
            <summary>
            恢复数据库(从二进制压缩流中提取表数据库的 XML 进行恢复)
            </summary>
            <param name="ConnectionString"></param>
            <param name="DataBuffer"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.RestoreDataFromZipStream(System.Data.OracleClient.OracleConnection,System.Byte[])">
            <summary>
            恢复数据库(从二进制压缩流中提取表数据库的 XML 进行恢复)
            </summary>
            <param name="conn"></param>
            <param name="DataBuffer"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.Database.Oracle.Field">
            <summary>
            表的字段类，ShoveDAL.30 工具使用
            </summary>
        </member>
        <member name="F:Shove.Database.Oracle.Field.Parent">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.Database.Oracle.Field.Name">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.Database.Oracle.Field.CanonicalIdentifierName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.Database.Oracle.Field.DbType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Shove.Database.Oracle.Field.SequenceName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Shove.Database.Oracle.Field.Value">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.Database.Oracle.Field.#ctor(System.Object,System.String,System.String,System.Data.OracleClient.OracleType)">
            <summary>
            构造
            </summary>
            <param name="parent"></param>
            <param name="name"></param>
            <param name="canonicalidentifiername"></param>
            <param name="dbtype"></param>
        </member>
        <member name="T:Shove.Database.Oracle.FieldCollection">
            <summary>
            表的修改的字段集合，ShoveDAL.30 工具使用
            </summary>
        </member>
        <member name="P:Shove.Database.Oracle.FieldCollection.Count">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.Database.Oracle.FieldCollection.Add(Shove.Database.Oracle.Field)">
            <summary>
            
            </summary>
            <param name="field"></param>
        </member>
        <member name="M:Shove.Database.Oracle.FieldCollection.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="P:Shove.Database.Oracle.FieldCollection.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="Index"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.Database.Oracle.TableBase">
            <summary>
            表的基类，ShoveDAL.30 工具使用
            </summary>
        </member>
        <member name="F:Shove.Database.Oracle.TableBase.TableName">
            <summary>
            表名
            </summary>
        </member>
        <member name="F:Shove.Database.Oracle.TableBase.Fields">
            <summary>
            字段集合
            </summary>
        </member>
        <member name="M:Shove.Database.Oracle.TableBase.Open(System.String,System.String,System.String)">
            <summary>
            打开表
            </summary>
            <param name="FieldList"></param>
            <param name="Condition"></param>
            <param name="Order"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.TableBase.Open(System.String,System.String,System.String,System.String)">
            <summary>
            打开表
            </summary>
            <param name="ConnectionString"></param>
            <param name="FieldList"></param>
            <param name="Condition"></param>
            <param name="Order"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.TableBase.Open(System.Data.OracleClient.OracleConnection,System.String,System.String,System.String)">
            <summary>
            打开表
            </summary>
            <param name="conn"></param>
            <param name="FieldList"></param>
            <param name="Condition"></param>
            <param name="Order"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.TableBase.GetCount(System.String)">
            <summary>
            获取表记录数
            </summary>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.TableBase.GetCount(System.String,System.String)">
            <summary>
            获取表记录数
            </summary>
            <param name="ConnectionString"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.TableBase.GetCount(System.Data.OracleClient.OracleConnection,System.String)">
            <summary>
            获取表记录数
            </summary>
            <param name="conn"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.TableBase.Insert">
            <summary>
            增加记录
            </summary>
            <returns>小于0表示失败，0表示成功，无自增值，大于0表示自增值(赋值时赋值的第一个自增字段)</returns>
        </member>
        <member name="M:Shove.Database.Oracle.TableBase.Insert(System.String)">
            <summary>
            增加记录
            </summary>
            <param name="ConnectionString"></param>
            <returns>小于0表示失败，0表示成功，无自增值，大于0表示自增值(赋值时赋值的第一个自增字段)</returns>
        </member>
        <member name="M:Shove.Database.Oracle.TableBase.Insert(System.Data.OracleClient.OracleConnection)">
            <summary>
            增加记录
            </summary>
            <param name="conn"></param>
            <returns>小于0表示失败，0表示成功，无自增值，大于0表示自增值(赋值时赋值的第一个自增字段)</returns>
        </member>
        <member name="M:Shove.Database.Oracle.TableBase.Delete(System.String)">
            <summary>
            删除表记录
            </summary>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.TableBase.Delete(System.String,System.String)">
            <summary>
            删除表记录
            </summary>
            <param name="ConnectionString"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.TableBase.Delete(System.Data.OracleClient.OracleConnection,System.String)">
            <summary>
            删除表记录
            </summary>
            <param name="conn"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.TableBase.Update(System.String)">
            <summary>
            更新表
            </summary>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.TableBase.Update(System.String,System.String)">
            <summary>
            更新表
            </summary>
            <param name="ConnectionString"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.TableBase.Update(System.Data.OracleClient.OracleConnection,System.String)">
            <summary>
            更新表
            </summary>
            <param name="conn"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.Database.Oracle.ViewBase">
            <summary>
            视图的基类，ShoveDAL.30 工具使用
            </summary>
        </member>
        <member name="F:Shove.Database.Oracle.ViewBase.ViewName">
            <summary>
            视图名称
            </summary>
        </member>
        <member name="M:Shove.Database.Oracle.ViewBase.Open(System.String,System.String,System.String)">
            <summary>
            打开视图
            </summary>
            <param name="FieldList"></param>
            <param name="Condition"></param>
            <param name="Order"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.ViewBase.Open(System.String,System.String,System.String,System.String)">
            <summary>
            打开视图
            </summary>
            <param name="ConnectionString"></param>
            <param name="FieldList"></param>
            <param name="Condition"></param>
            <param name="Order"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.ViewBase.Open(System.Data.OracleClient.OracleConnection,System.String,System.String,System.String)">
            <summary>
            打开视图
            </summary>
            <param name="conn"></param>
            <param name="FieldList"></param>
            <param name="Condition"></param>
            <param name="Order"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.ViewBase.GetCount(System.String)">
            <summary>
            获取视图记录数
            </summary>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.ViewBase.GetCount(System.String,System.String)">
            <summary>
            获取视图记录数
            </summary>
            <param name="ConnectionString"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Oracle.ViewBase.GetCount(System.Data.OracleClient.OracleConnection,System.String)">
            <summary>
            获取视图记录数
            </summary>
            <param name="conn"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.Database.Manage.IDatabaseManage">
            <summary>
            对数据库的管理接口
            </summary>
        </member>
        <member name="F:Shove.Database.Manage.IDatabaseManage.ConnectionString">
            <summary>
            连接串，要求用 sa, root 等超级用户连接数据库
            </summary>
        </member>
        <member name="F:Shove.Database.Manage.IDatabaseManage.conn">
            <summary>
            数据库连接
            </summary>
        </member>
        <member name="M:Shove.Database.Manage.IDatabaseManage.Open(System.String@)">
            <summary>
            打开连接
            </summary>
            <param name="ReturnDescription"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Manage.IDatabaseManage.Close">
            <summary>
            关闭连接
            </summary>
        </member>
        <member name="M:Shove.Database.Manage.IDatabaseManage.VaildStringParameters(System.String@,System.String[])">
            <summary>
            校验必须要有值的字符串类型的参数
            </summary>
            <param name="ReturnDescription"></param>
            <param name="Parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Manage.IDatabaseManage.CreateDatabase(System.String,System.String@)">
            <summary>
            创建一个新的数据库
            </summary>
            <param name="DatabaseName"></param>
            <param name="ReturnDescription"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Manage.IDatabaseManage.CreateUser(System.String,System.String,System.String,System.String@)">
            <summary>
            创建一个数据库用户
            </summary>
            <param name="UserName"></param>
            <param name="Password"></param>
            <param name="GrantOwnerDatabaseName"></param>
            <param name="ReturnDescription"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Manage.IDatabaseManage.EditUserPassword(System.String,System.String,System.String,System.String@)">
            <summary>
            修改用户密码
            </summary>
            <param name="UserName"></param>
            <param name="OldPassword"></param>
            <param name="NewPassword"></param>
            <param name="ReturnDescription"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Manage.IDatabaseManage.QueryUsedSpaceSize(System.String,System.String@)">
            <summary>
            查询数据库使用的空间大小
            </summary>
            <param name="DatabaseName"></param>
            <param name="ReturnDescription"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Manage.IDatabaseManage.RemoveDatabase(System.String,System.String,System.String@)">
            <summary>
            物理移除数据库
            </summary>
            <param name="DatabaseName"></param>
            <param name="UserName"></param>
            <param name="ReturnDescription"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Manage.IDatabaseManage.DatabaseExists(System.String,System.String@)">
            <summary>
            检测数据库是否存在
            </summary>
            <param name="DatabaseName"></param>
            <param name="ReturnDescription"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Manage.IDatabaseManage.DatabaseUserExists(System.String,System.String@)">
            <summary>
            检测数据库用户是否存在
            </summary>
            <param name="DatabaseUser"></param>
            <param name="ReturnDescription"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.Database.Manage.MSSQL">
            <summary>
            对 MSSQL 数据库的管理类
            </summary>
        </member>
        <member name="M:Shove.Database.Manage.MSSQL.#ctor(System.String)">
            <summary>
            构造
            </summary>
            <param name="ConnectionString">管理数据库的连接串</param>
        </member>
        <member name="M:Shove.Database.Manage.MSSQL.CreateDatabase(System.String,System.String@)">
            <summary>
            创建一个新的数据库
            </summary>
            <param name="DatabaseName"></param>
            <param name="ReturnDescription"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Manage.MSSQL.CreateUser(System.String,System.String,System.String,System.String@)">
            <summary>
            创建一个数据库用户
            </summary>
            <param name="UserName"></param>
            <param name="Password"></param>
            <param name="GrantOwnerDatabaseName"></param>
            <param name="ReturnDescription"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Manage.MSSQL.EditUserPassword(System.String,System.String,System.String,System.String@)">
            <summary>
            修改用户密码
            </summary>
            <param name="UserName"></param>
            <param name="OldPassword"></param>
            <param name="NewPassword"></param>
            <param name="ReturnDescription"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Manage.MSSQL.QueryUsedSpaceSize(System.String,System.String@)">
            <summary>
            查询数据库使用的空间大小
            </summary>
            <param name="DatabaseName"></param>
            <param name="ReturnDescription"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Manage.MSSQL.RemoveDatabase(System.String,System.String,System.String@)">
            <summary>
            物理移除数据库
            </summary>
            <param name="DatabaseName"></param>
            <param name="UserName"></param>
            <param name="ReturnDescription"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.Database.Manage.MySQL">
            <summary>
            对 MySQL 数据库的管理类
            </summary>
        </member>
        <member name="M:Shove.Database.Manage.MySQL.#ctor(System.String)">
            <summary>
            构造
            </summary>
            <param name="ConnectionString">管理数据库的连接串</param>
        </member>
        <member name="M:Shove.Database.Manage.MySQL.CreateDatabase(System.String,System.String@)">
            <summary>
            创建一个新的数据库
            </summary>
            <param name="DatabaseName"></param>
            <param name="ReturnDescription"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Manage.MySQL.CreateUser(System.String,System.String,System.String,System.String@)">
            <summary>
            创建一个数据库用户
            </summary>
            <param name="UserName"></param>
            <param name="Password"></param>
            <param name="GrantOwnerDatabaseName"></param>
            <param name="ReturnDescription"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Manage.MySQL.EditUserPassword(System.String,System.String,System.String,System.String@)">
            <summary>
            修改用户密码
            </summary>
            <param name="UserName"></param>
            <param name="OldPassword"></param>
            <param name="NewPassword"></param>
            <param name="ReturnDescription"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Manage.MySQL.QueryUsedSpaceSize(System.String,System.String@)">
            <summary>
            查询数据库使用的空间大小
            </summary>
            <param name="DatabaseName"></param>
            <param name="ReturnDescription"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Manage.MySQL.RemoveDatabase(System.String,System.String,System.String@)">
            <summary>
            物理移除数据库
            </summary>
            <param name="DatabaseName"></param>
            <param name="UserName"></param>
            <param name="ReturnDescription"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Manage.MySQL.DatabaseExists(System.String,System.String@)">
            <summary>
            检测数据库是否存在
            </summary>
            <param name="DatabaseName">数据库名称</param>
            <param name="ReturnDescription"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Manage.MySQL.DatabaseUserExists(System.String,System.String@)">
            <summary>
            检测数据库用户是否存在
            </summary>
            <param name="DatabaseUser"></param>
            <param name="ReturnDescription"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.Database.Persistences.Java.MSSQL">
            <summary>
            MSSQL 生成持久化功能
            </summary>
        </member>
        <member name="M:Shove.Database.Persistences.Java.MSSQL.#ctor(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            构造
            </summary>
            <param name="ServerName"></param>
            <param name="DatabaseName"></param>
            <param name="UserID"></param>
            <param name="Password"></param>
            <param name="NamespaceName"></param>
            <param name="isUseConnectionStringConfig"></param>
            <param name="isUseConnectionString"></param>
            <param name="isWithTables"></param>
            <param name="isWithViews"></param>
            <param name="isWithProcedures"></param>
            <param name="isWithFunction"></param>
        </member>
        <member name="M:Shove.Database.Persistences.Java.MSSQL.Generation">
            <summary>
            开始生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Persistences.Java.MSSQL.GetDataType(System.String)">
            <summary>
            将数据库类型转换为 Java 数据类型
            </summary>
            <param name="SQLType"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Persistences.Java.MSSQL.GetSQLDataType(System.String)">
            <summary>
            将数据库类型转换为 JDBC.Types.类型
            </summary>
            <param name="SQLType"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Persistences.Java.MSSQL.GetBracketsedObjectName(System.String)">
            <summary>
            获取增加括号的对象名称
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.Database.Persistences.Java.MySQL">
            <summary>
            MySQL 持久化
            </summary>
        </member>
        <member name="M:Shove.Database.Persistences.Java.MySQL.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            构造
            </summary>
            <param name="ServerName"></param>
            <param name="DatabaseName"></param>
            <param name="UserID"></param>
            <param name="Password"></param>
            <param name="Port"></param>
            <param name="NamespaceName"></param>
            <param name="isUseConnectionStringConfig"></param>
            <param name="isUseConnectionString"></param>
            <param name="isWithTables"></param>
            <param name="isWithViews"></param>
            <param name="isWithProcedures"></param>
            <param name="isWithFunction"></param>
        </member>
        <member name="M:Shove.Database.Persistences.Java.MySQL.Generation">
            <summary>
            开始生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Persistences.Java.MySQL.GetDataType(System.String)">
            <summary>
            将数据库类型转换为 Java 数据类型
            </summary>
            <param name="SQLType"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Persistences.Java.MySQL.GetSQLDataType(System.String)">
            <summary>
            将数据库类型转换为 JDBC.Types.类型
            </summary>
            <param name="SQLType"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Persistences.Java.MySQL.GetBracketsedObjectName(System.String)">
            <summary>
            获取增加括号的对象名称
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.Database.Persistences.Java.Oracle">
            <summary>
            Oracle 持久化
            </summary>
        </member>
        <member name="M:Shove.Database.Persistences.Java.Oracle.#ctor(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            构造
            </summary>
            <param name="ServerName"></param>
            <param name="UserID"></param>
            <param name="Password"></param>
            <param name="NamespaceName"></param>
            <param name="isUseConnectionStringConfig"></param>
            <param name="isUseConnectionString"></param>
            <param name="isWithTables"></param>
            <param name="isWithViews"></param>
            <param name="isWithProcedures"></param>
            <param name="isWithFunction"></param>
        </member>
        <member name="M:Shove.Database.Persistences.Java.Oracle.Generation">
            <summary>
            开始生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Persistences.Java.Oracle.GetDataType(System.String)">
            <summary>
            将数据库类型转换为 Java 数据类型
            </summary>
            <param name="SQLType"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Persistences.Java.Oracle.GetSQLDataType(System.String)">
            <summary>
            将数据库类型转换为 OracleTypes.类型
            </summary>
            <param name="SQLType"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Persistences.Java.Oracle.GetBracketsedObjectName(System.String)">
            <summary>
            获取增加括号的对象名称
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.Database.Persistences.Java.SQLite">
            <summary>
            SQLite 生成持久化功能
            </summary>
        </member>
        <member name="M:Shove.Database.Persistences.Java.SQLite.#ctor(System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            构造
            </summary>
            <param name="DatabaseName"></param>
            <param name="Password"></param>
            <param name="NamespaceName"></param>
            <param name="isUseConnectionStringConfig"></param>
            <param name="isUseConnectionString"></param>
            <param name="isWithTables"></param>
            <param name="isWithViews"></param>
        </member>
        <member name="M:Shove.Database.Persistences.Java.SQLite.Generation">
            <summary>
            开始生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Persistences.Java.SQLite.GetSQLDataType(System.String)">
            <summary>
            将数据库类型转换为 JDBC.Types.类型
            </summary>
            <param name="SQLType"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Persistences.Java.SQLite.GetBracketsedObjectName(System.String)">
            <summary>
            获取增加括号的对象名称
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.Database.Persistences.MSSQL">
            <summary>
            MSSQL 生成持久化功能
            </summary>
        </member>
        <member name="M:Shove.Database.Persistences.MSSQL.#ctor(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            构造
            </summary>
            <param name="ServerName"></param>
            <param name="DatabaseName"></param>
            <param name="UserID"></param>
            <param name="Password"></param>
            <param name="NamespaceName"></param>
            <param name="isUseConnectionStringConfig"></param>
            <param name="isUseConnectionString"></param>
            <param name="isWithTables"></param>
            <param name="isWithViews"></param>
            <param name="isWithProcedures"></param>
            <param name="isWithFunction"></param>
        </member>
        <member name="M:Shove.Database.Persistences.MSSQL.Generation">
            <summary>
            开始生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Persistences.MSSQL.Generation_CLR">
            <summary>
            开始生成为 CLR 代码
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove.Database.Persistences.MySQL">
            <summary>
            MySQL 持久化
            </summary>
        </member>
        <member name="M:Shove.Database.Persistences.MySQL.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            构造
            </summary>
            <param name="ServerName"></param>
            <param name="DatabaseName"></param>
            <param name="UserID"></param>
            <param name="Password"></param>
            <param name="Port"></param>
            <param name="NamespaceName"></param>
            <param name="isUseConnectionStringConfig"></param>
            <param name="isUseConnectionString"></param>
            <param name="isWithTables"></param>
            <param name="isWithViews"></param>
            <param name="isWithProcedures"></param>
            <param name="isWithFunction"></param>
        </member>
        <member name="M:Shove.Database.Persistences.MySQL.Generation">
            <summary>
            开始生成
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove.Database.Persistences.Oracle">
            <summary>
            Oracle 持久化
            </summary>
        </member>
        <member name="M:Shove.Database.Persistences.Oracle.#ctor(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            构造
            </summary>
            <param name="ServerName"></param>
            <param name="UserID"></param>
            <param name="Password"></param>
            <param name="NamespaceName"></param>
            <param name="isUseConnectionStringConfig"></param>
            <param name="isUseConnectionString"></param>
            <param name="isWithTables"></param>
            <param name="isWithViews"></param>
            <param name="isWithProcedures"></param>
            <param name="isWithFunction"></param>
        </member>
        <member name="M:Shove.Database.Persistences.Oracle.Generation">
            <summary>
            开始生成
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove.Database.Persistences.SQLite">
            <summary>
            SQLite 生成持久化功能
            </summary>
        </member>
        <member name="M:Shove.Database.Persistences.SQLite.#ctor(System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            构造
            </summary>
            <param name="DatabaseName"></param>
            <param name="Password"></param>
            <param name="NamespaceName"></param>
            <param name="isUseConnectionStringConfig"></param>
            <param name="isUseConnectionString"></param>
            <param name="isWithTables"></param>
            <param name="isWithViews"></param>
        </member>
        <member name="M:Shove.Database.Persistences.SQLite.Generation">
            <summary>
            开始生成
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.Persistences.SQLite.GetBracketsedObjectName(System.String)">
            <summary>
            获取增加括号的对象名称
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.Database.SQLite">
            <summary>
            Shove 的专用的 SQLite 访问组件类
            </summary>
        </member>
        <member name="M:Shove.Database.SQLite.BuildConnectString(System.String)">
            <summary>
            构建连接串
            </summary>
            <param name="DatabaseFileName"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.SQLite.BuildConnectString(System.String,System.String)">
            <summary>
            构建连接串
            </summary>
            <param name="DatabaseFileName"></param>
            <param name="Version"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.Database.SQLite.Parameter">
            <summary>
            参数
            </summary>
        </member>
        <member name="F:Shove.Database.SQLite.Parameter.Name">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.Database.SQLite.Parameter.Type">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.Database.SQLite.Parameter.Size">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.Database.SQLite.Parameter.Direction">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.Database.SQLite.Parameter.Value">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.Database.SQLite.Parameter.#ctor(System.String,System.Data.DbType,System.Int32,System.Data.ParameterDirection,System.Object)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <param name="size"></param>
            <param name="direction"></param>
            <param name="value"></param>
        </member>
        <member name="T:Shove.Database.SQLite.OutputParameter">
            <summary>
            输入参数
            </summary>
        </member>
        <member name="M:Shove.Database.SQLite.OutputParameter.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.Database.SQLite.OutputParameter.Add(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="Name"></param>
            <param name="Value"></param>
        </member>
        <member name="M:Shove.Database.SQLite.OutputParameter.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="P:Shove.Database.SQLite.OutputParameter.Count">
            <summary>
            
            </summary>
        </member>
        <member name="P:Shove.Database.SQLite.OutputParameter.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="Index"></param>
            <returns></returns>
        </member>
        <member name="P:Shove.Database.SQLite.OutputParameter.Item(System.String)">
            <summary>
            
            </summary>
            <param name="Name"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.SQLite.ExecuteNonQuery(System.String,Shove.Database.SQLite.Parameter[])">
            <summary>
            执行数据库命令
            </summary>
            <param name="CommandText"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.SQLite.ExecuteNonQuery(System.String,System.String,Shove.Database.SQLite.Parameter[])">
            <summary>
            执行数据库命令
            </summary>
            <param name="ConnectionString"></param>
            <param name="CommandText"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.SQLite.ExecuteNonQuery(System.Data.SQLite.SQLiteConnection,System.String,Shove.Database.SQLite.Parameter[])">
            <summary>
            执行数据库命令
            </summary>
            <param name="conn"></param>
            <param name="CommandText"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.SQLite.ExecuteNonQueryNoTranscation(System.Data.SQLite.SQLiteConnection,System.String,Shove.Database.SQLite.Parameter[])">
            <summary>
            执行数据库命令(不用事务)
            </summary>
            <param name="conn"></param>
            <param name="CommandText"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.SQLite.Select(System.String,Shove.Database.SQLite.Parameter[])">
            <summary>
            打开数据集
            </summary>
            <param name="CommandText"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.SQLite.Select(System.String,System.String,Shove.Database.SQLite.Parameter[])">
            <summary>
            打开数据集
            </summary>
            <param name="ConnectionString"></param>
            <param name="CommandText"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.SQLite.Select(System.Data.SQLite.SQLiteConnection,System.String,Shove.Database.SQLite.Parameter[])">
            <summary>
            打开数据集
            </summary>
            <param name="conn"></param>
            <param name="CommandText"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.SQLite.ExecuteScalar(System.String,Shove.Database.SQLite.Parameter[])">
            <summary>
            读取第一行第一列
            </summary>
            <param name="CommandText"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.SQLite.ExecuteScalar(System.String,System.String,Shove.Database.SQLite.Parameter[])">
            <summary>
            读取第一行第一列
            </summary>
            <param name="ConnectionString"></param>
            <param name="CommandText"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.SQLite.ExecuteScalar(System.Data.SQLite.SQLiteConnection,System.String,Shove.Database.SQLite.Parameter[])">
            <summary>
            读取第一行第一列
            </summary>
            <param name="conn"></param>
            <param name="CommandText"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.SQLite.BackupDataToZipStream">
            <summary>
            备份数据库(表数据库 XML 描述，压缩为二进制流)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.SQLite.BackupDataToZipStream(System.String)">
            <summary>
            备份数据库(表数据库 XML 描述，压缩为二进制流)
            </summary>
            <param name="ConnectionString"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.SQLite.BackupDataToZipStream(System.Data.SQLite.SQLiteConnection)">
            <summary>
            备份数据库(表数据库 XML 描述，压缩为二进制流)
            </summary>
            <param name="conn"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.SQLite.RestoreDataFromZipStream(System.Byte[])">
            <summary>
            恢复数据库(从二进制压缩流中提取表数据库的 XML 进行恢复)
            </summary>
            <param name="DataBuffer"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.SQLite.RestoreDataFromZipStream(System.String,System.Byte[])">
            <summary>
            恢复数据库(从二进制压缩流中提取表数据库的 XML 进行恢复)
            </summary>
            <param name="ConnectionString"></param>
            <param name="DataBuffer"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.SQLite.RestoreDataFromZipStream(System.Data.SQLite.SQLiteConnection,System.Byte[])">
            <summary>
            恢复数据库(从二进制压缩流中提取表数据库的 XML 进行恢复)
            </summary>
            <param name="conn"></param>
            <param name="DataBuffer"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.Database.SQLite.Field">
            <summary>
            表的字段类，ShoveDAL.30 工具使用
            </summary>
        </member>
        <member name="F:Shove.Database.SQLite.Field.Parent">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.Database.SQLite.Field.Name">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.Database.SQLite.Field.CanonicalIdentifierName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.Database.SQLite.Field.DbType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.Database.SQLite.Field.ReadOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:Shove.Database.SQLite.Field.Value">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.Database.SQLite.Field.#ctor(System.Object,System.String,System.String,System.Data.DbType,System.Boolean)">
            <summary>
            
            </summary>
            <param name="parent"></param>
            <param name="name"></param>
            <param name="canonicalidentifiername"></param>
            <param name="dbtype"></param>
            <param name="_readonly"></param>
        </member>
        <member name="T:Shove.Database.SQLite.FieldCollection">
            <summary>
            表的修改的字段集合，ShoveDAL.30 工具使用
            </summary>
        </member>
        <member name="P:Shove.Database.SQLite.FieldCollection.Count">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.Database.SQLite.FieldCollection.Add(Shove.Database.SQLite.Field)">
            <summary>
            
            </summary>
            <param name="field"></param>
        </member>
        <member name="M:Shove.Database.SQLite.FieldCollection.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="P:Shove.Database.SQLite.FieldCollection.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="Index"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.Database.SQLite.TableBase">
            <summary>
            表的基类，ShoveDAL.30 工具使用
            </summary>
        </member>
        <member name="F:Shove.Database.SQLite.TableBase.TableName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.Database.SQLite.TableBase.Fields">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.Database.SQLite.TableBase.Open(System.String,System.String,System.String)">
            <summary>
            打开表
            </summary>
            <param name="FieldList"></param>
            <param name="Condition"></param>
            <param name="Order"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.SQLite.TableBase.Open(System.String,System.String,System.String,System.String)">
            <summary>
            打开表
            </summary>
            <param name="ConnectionString"></param>
            <param name="FieldList"></param>
            <param name="Condition"></param>
            <param name="Order"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.SQLite.TableBase.Open(System.Data.SQLite.SQLiteConnection,System.String,System.String,System.String)">
            <summary>
            打开表
            </summary>
            <param name="conn"></param>
            <param name="FieldList"></param>
            <param name="Condition"></param>
            <param name="Order"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.SQLite.TableBase.GetCount(System.String)">
            <summary>
            获取表记录数
            </summary>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.SQLite.TableBase.GetCount(System.String,System.String)">
            <summary>
            获取表记录数
            </summary>
            <param name="ConnectionString"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.SQLite.TableBase.GetCount(System.Data.SQLite.SQLiteConnection,System.String)">
            <summary>
            获取表记录数
            </summary>
            <param name="conn"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.SQLite.TableBase.Insert">
            <summary>
            增加记录
            </summary>
            <returns>小于0表示失败，0表示成功，无自增值，大于0表示自增值</returns>
        </member>
        <member name="M:Shove.Database.SQLite.TableBase.Insert(System.String)">
            <summary>
            增加记录
            </summary>
            <param name="ConnectionString"></param>
            <returns>小于0表示失败，0表示成功，无自增值，大于0表示自增值</returns>
        </member>
        <member name="M:Shove.Database.SQLite.TableBase.Insert(System.Data.SQLite.SQLiteConnection)">
            <summary>
            增加记录
            </summary>
            <param name="conn"></param>
            <returns>小于0表示失败，0表示成功，无自增值，大于0表示自增值</returns>
        </member>
        <member name="M:Shove.Database.SQLite.TableBase.Delete(System.String)">
            <summary>
            删除表记录
            </summary>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.SQLite.TableBase.Delete(System.String,System.String)">
            <summary>
            删除表记录
            </summary>
            <param name="ConnectionString"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.SQLite.TableBase.Delete(System.Data.SQLite.SQLiteConnection,System.String)">
            <summary>
            删除表记录
            </summary>
            <param name="conn"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.SQLite.TableBase.Update(System.String)">
            <summary>
            更新表
            </summary>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.SQLite.TableBase.Update(System.String,System.String)">
            <summary>
            更新表
            </summary>
            <param name="ConnectionString"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.SQLite.TableBase.Update(System.Data.SQLite.SQLiteConnection,System.String)">
            <summary>
            更新表
            </summary>
            <param name="conn"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.Database.SQLite.ViewBase">
            <summary>
            视图的基类，ShoveDAL.30 工具使用
            </summary>
        </member>
        <member name="F:Shove.Database.SQLite.ViewBase.ViewName">
            <summary>
            视图名称
            </summary>
        </member>
        <member name="M:Shove.Database.SQLite.ViewBase.Open(System.String,System.String,System.String)">
            <summary>
            打开视图
            </summary>
            <param name="FieldList"></param>
            <param name="Condition"></param>
            <param name="Order"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.SQLite.ViewBase.Open(System.String,System.String,System.String,System.String)">
            <summary>
            打开视图
            </summary>
            <param name="ConnectionString"></param>
            <param name="FieldList"></param>
            <param name="Condition"></param>
            <param name="Order"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.SQLite.ViewBase.Open(System.Data.SQLite.SQLiteConnection,System.String,System.String,System.String)">
            <summary>
            打开视图
            </summary>
            <param name="conn"></param>
            <param name="FieldList"></param>
            <param name="Condition"></param>
            <param name="Order"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.SQLite.ViewBase.GetCount(System.String)">
            <summary>
            获取视图记录数
            </summary>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.SQLite.ViewBase.GetCount(System.String,System.String)">
            <summary>
            获取视图记录数
            </summary>
            <param name="ConnectionString"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.SQLite.ViewBase.GetCount(System.Data.SQLite.SQLiteConnection,System.String)">
            <summary>
            获取视图记录数
            </summary>
            <param name="conn"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.Database.Data">
            <summary>
            Data 相关，System.Data 的扩展
            </summary>
        </member>
        <member name="M:Shove.Database.Data.FilterDataTableData(System.Data.DataTable,System.String,System.Int64,System.Int64)">
            <summary>
            将 DataTable 进行过滤
            </summary>
            <param name="dt">源 DataTable</param>
            <param name="Condition">过滤条件</param>
            <param name="LimitStart">开始行号</param>
            <param name="RowCount">总行数</param>
            <returns></returns>
        </member>
        <member name="T:Shove.Database.MSSQL">
            <summary>
            Shove 的专用的 MS SQLServer 访问组件类
            </summary>
        </member>
        <member name="M:Shove.Database.MSSQL.GetObjectFullName(System.String)">
            <summary>
            获取包含 Owner 的完整对象名称，如：T_Users -> [dbo].[T_Users]，Owner 在 .Config 中配置
            </summary>
            <param name="ObjectName"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.BuildConnectString(System.String,System.String)">
            <summary>
            构建连接串
            </summary>
            <param name="SQLServerName"></param>
            <param name="SQLDatabaseName"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.BuildConnectString(System.String,System.String,System.String,System.String)">
            <summary>
            构建连接串
            </summary>
            <param name="SQLServerName"></param>
            <param name="SQLDatabaseName"></param>
            <param name="SQLUID"></param>
            <param name="SQLPassword"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.Database.MSSQL.Parameter">
            <summary>
            参数
            </summary>
        </member>
        <member name="F:Shove.Database.MSSQL.Parameter.Name">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.Database.MSSQL.Parameter.Type">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.Database.MSSQL.Parameter.Size">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.Database.MSSQL.Parameter.Direction">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.Database.MSSQL.Parameter.Value">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.Database.MSSQL.Parameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Object)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <param name="size"></param>
            <param name="direction"></param>
            <param name="value"></param>
        </member>
        <member name="T:Shove.Database.MSSQL.OutputParameter">
            <summary>
            输入参数
            </summary>
        </member>
        <member name="M:Shove.Database.MSSQL.OutputParameter.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.Database.MSSQL.OutputParameter.Add(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="Name"></param>
            <param name="Value"></param>
        </member>
        <member name="M:Shove.Database.MSSQL.OutputParameter.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="P:Shove.Database.MSSQL.OutputParameter.Count">
            <summary>
            
            </summary>
        </member>
        <member name="P:Shove.Database.MSSQL.OutputParameter.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="Index"></param>
            <returns></returns>
        </member>
        <member name="P:Shove.Database.MSSQL.OutputParameter.Item(System.String)">
            <summary>
            
            </summary>
            <param name="Name"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.ExecuteNonQuery(System.String,Shove.Database.MSSQL.Parameter[])">
            <summary>
            执行数据库命令
            </summary>
            <param name="CommandText"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.ExecuteNonQuery(System.String,System.String,Shove.Database.MSSQL.Parameter[])">
            <summary>
            执行数据库命令
            </summary>
            <param name="ConnectionString"></param>
            <param name="CommandText"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.ExecuteNonQuery(System.Data.SqlClient.SqlConnection,System.String,Shove.Database.MSSQL.Parameter[])">
            <summary>
            执行数据库命令
            </summary>
            <param name="conn"></param>
            <param name="CommandText"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.ExecuteNonQueryNoTranscation(System.Data.SqlClient.SqlConnection,System.String,Shove.Database.MSSQL.Parameter[])">
            <summary>
            执行数据库命令(不用事务)
            </summary>
            <param name="conn"></param>
            <param name="CommandText"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.Select(System.String,Shove.Database.MSSQL.Parameter[])">
            <summary>
            打开数据集
            </summary>
            <param name="CommandText"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.Select(System.String,System.String,Shove.Database.MSSQL.Parameter[])">
            <summary>
            打开数据集
            </summary>
            <param name="ConnectionString"></param>
            <param name="CommandText"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.Select(System.Data.SqlClient.SqlConnection,System.String,Shove.Database.MSSQL.Parameter[])">
            <summary>
            打开数据集
            </summary>
            <param name="conn"></param>
            <param name="CommandText"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.ExecuteScalar(System.String,Shove.Database.MSSQL.Parameter[])">
            <summary>
            读取第一行第一列
            </summary>
            <param name="CommandText"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.ExecuteScalar(System.String,System.String,Shove.Database.MSSQL.Parameter[])">
            <summary>
            读取第一行第一列
            </summary>
            <param name="ConnectionString"></param>
            <param name="CommandText"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.ExecuteScalar(System.Data.SqlClient.SqlConnection,System.String,Shove.Database.MSSQL.Parameter[])">
            <summary>
            读取第一行第一列
            </summary>
            <param name="conn"></param>
            <param name="CommandText"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.ExecuteFunction(System.String,Shove.Database.MSSQL.Parameter[])">
            <summary>
            执行函数
            </summary>
            <param name="FunctionName"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.ExecuteFunction(System.String,System.String,Shove.Database.MSSQL.Parameter[])">
            <summary>
            执行函数
            </summary>
            <param name="ConnectionString"></param>
            <param name="FunctionName"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.ExecuteFunction(System.Data.SqlClient.SqlConnection,System.String,Shove.Database.MSSQL.Parameter[])">
            <summary>
            执行函数
            </summary>
            <param name="conn"></param>
            <param name="FunctionName"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.ExecuteStoredProcedureNonQuery(System.String,Shove.Database.MSSQL.OutputParameter@,Shove.Database.MSSQL.Parameter[])">
            <summary>
            执行存储过程
            </summary>
            <param name="StoredProcedureName"></param>
            <param name="Outputs"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.ExecuteStoredProcedureNonQuery(System.String,System.String,Shove.Database.MSSQL.OutputParameter@,Shove.Database.MSSQL.Parameter[])">
            <summary>
            执行存储过程
            </summary>
            <param name="ConnectionString"></param>
            <param name="StoredProcedureName"></param>
            <param name="Outputs"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.ExecuteStoredProcedureNonQuery(System.Data.SqlClient.SqlConnection,System.String,Shove.Database.MSSQL.OutputParameter@,Shove.Database.MSSQL.Parameter[])">
            <summary>
            执行存储过程
            </summary>
            <param name="conn"></param>
            <param name="StoredProcedureName"></param>
            <param name="Outputs"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.ExecuteStoredProcedureWithQuery(System.String,System.Data.DataSet@,Shove.Database.MSSQL.OutputParameter@,Shove.Database.MSSQL.Parameter[])">
            <summary>
            执行存储过程(不带返回记录集)
            </summary>
            <param name="StoredProcedureName"></param>
            <param name="ds"></param>
            <param name="Outputs"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.ExecuteStoredProcedureWithQuery(System.String,System.String,System.Data.DataSet@,Shove.Database.MSSQL.OutputParameter@,Shove.Database.MSSQL.Parameter[])">
            <summary>
            执行存储过程(不带返回记录集)
            </summary>
            <param name="ConnectionString"></param>
            <param name="StoredProcedureName"></param>
            <param name="ds"></param>
            <param name="Outputs"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.ExecuteStoredProcedureWithQuery(System.Data.SqlClient.SqlConnection,System.String,System.Data.DataSet@,Shove.Database.MSSQL.OutputParameter@,Shove.Database.MSSQL.Parameter[])">
            <summary>
            执行存储过程(不带返回记录集)
            </summary>
            <param name="conn"></param>
            <param name="StoredProcedureName"></param>
            <param name="ds"></param>
            <param name="Outputs"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.BackupDatabase(System.String,System.Boolean,System.Boolean)">
            <summary>
            备份数据库
            </summary>
            <param name="BackupFileName">包含绝对路径的文件名，注意：此路径是相对于数据库所在的服务器而言的</param>
            <param name="BreakLog"></param>
            <param name="Shrink"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.BackupDatabase(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            备份数据库
            </summary>
            <param name="ConnectionString"></param>
            <param name="BackupFileName">包含绝对路径的文件名，注意：此路径是相对于数据库所在的服务器而言的</param>
            <param name="BreakLog"></param>
            <param name="Shrink"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.BackupDatabase(System.Data.SqlClient.SqlConnection,System.String,System.Boolean,System.Boolean)">
            <summary>
            备份数据库
            </summary>
            <param name="conn"></param>
            <param name="BackupFileName">包含绝对路径的文件名，注意：此路径是相对于数据库所在的服务器而言的</param>
            <param name="BreakLog"></param>
            <param name="Shrink"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.BackupDataToZipStream">
            <summary>
            备份数据库(表数据库 XML 描述，压缩为二进制流)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.BackupDataToZipStream(System.String)">
            <summary>
            备份数据库(表数据库 XML 描述，压缩为二进制流)
            </summary>
            <param name="ConnectionString"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.BackupDataToZipStream(System.Data.SqlClient.SqlConnection)">
            <summary>
            备份数据库(表数据库 XML 描述，压缩为二进制流)
            </summary>
            <param name="conn"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.RestoreDataFromZipStream(System.Byte[])">
            <summary>
            恢复数据库(从二进制压缩流中提取表数据库的 XML 进行恢复)
            </summary>
            <param name="DataBuffer"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.RestoreDataFromZipStream(System.String,System.Byte[])">
            <summary>
            恢复数据库(从二进制压缩流中提取表数据库的 XML 进行恢复)
            </summary>
            <param name="ConnectionString"></param>
            <param name="DataBuffer"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.RestoreDataFromZipStream(System.Data.SqlClient.SqlConnection,System.Byte[])">
            <summary>
            恢复数据库(从二进制压缩流中提取表数据库的 XML 进行恢复)
            </summary>
            <param name="conn"></param>
            <param name="DataBuffer"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.ExecuteSQLScript(System.String)">
            <summary>
            执行 SQL 脚本
            </summary>
            <param name="Script"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.ExecuteSQLScript(System.String,System.String)">
            <summary>
            执行 SQL 脚本
            </summary>
            <param name="ConnectionString"></param>
            <param name="Script"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.ExecuteSQLScript(System.Data.SqlClient.SqlConnection,System.String)">
            <summary>
            执行 SQL 脚本
            </summary>
            <param name="conn"></param>
            <param name="Script"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.Database.MSSQL.Field">
            <summary>
            表的字段类，ShoveDAL.30 工具使用
            </summary>
        </member>
        <member name="F:Shove.Database.MSSQL.Field.Parent">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.Database.MSSQL.Field.Name">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.Database.MSSQL.Field.CanonicalIdentifierName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.Database.MSSQL.Field.DbType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.Database.MSSQL.Field.ReadOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:Shove.Database.MSSQL.Field.Value">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.Database.MSSQL.Field.#ctor(System.Object,System.String,System.String,System.Data.SqlDbType,System.Boolean)">
            <summary>
            
            </summary>
            <param name="parent"></param>
            <param name="name"></param>
            <param name="canonicalidentifiername"></param>
            <param name="dbtype"></param>
            <param name="_readonly"></param>
        </member>
        <member name="T:Shove.Database.MSSQL.FieldCollection">
            <summary>
            表的修改的字段集合，ShoveDAL.30 工具使用
            </summary>
        </member>
        <member name="P:Shove.Database.MSSQL.FieldCollection.Count">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.Database.MSSQL.FieldCollection.Add(Shove.Database.MSSQL.Field)">
            <summary>
            
            </summary>
            <param name="field"></param>
        </member>
        <member name="M:Shove.Database.MSSQL.FieldCollection.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="P:Shove.Database.MSSQL.FieldCollection.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="Index"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.Database.MSSQL.TableBase">
            <summary>
            表的基类，ShoveDAL.30 工具使用
            </summary>
        </member>
        <member name="F:Shove.Database.MSSQL.TableBase.TableName">
            <summary>
            表名
            </summary>
        </member>
        <member name="F:Shove.Database.MSSQL.TableBase.Fields">
            <summary>
            字段集合
            </summary>
        </member>
        <member name="M:Shove.Database.MSSQL.TableBase.Open(System.String,System.String,System.String)">
            <summary>
            打开表
            </summary>
            <param name="FieldList"></param>
            <param name="Condition"></param>
            <param name="Order"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.TableBase.Open(System.String,System.String,System.String,System.String)">
            <summary>
            打开表
            </summary>
            <param name="ConnectionString"></param>
            <param name="FieldList"></param>
            <param name="Condition"></param>
            <param name="Order"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.TableBase.Open(System.Data.SqlClient.SqlConnection,System.String,System.String,System.String)">
            <summary>
            打开表
            </summary>
            <param name="conn"></param>
            <param name="FieldList"></param>
            <param name="Condition"></param>
            <param name="Order"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.TableBase.GetCount(System.String)">
            <summary>
            获取表记录数
            </summary>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.TableBase.GetCount(System.String,System.String)">
            <summary>
            获取表记录数
            </summary>
            <param name="ConnectionString"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.TableBase.GetCount(System.Data.SqlClient.SqlConnection,System.String)">
            <summary>
            获取表记录数
            </summary>
            <param name="conn"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.TableBase.Insert">
            <summary>
            增加记录
            </summary>
            <returns>小于0表示失败，0表示成功，无自增值，大于0表示自增值</returns>
        </member>
        <member name="M:Shove.Database.MSSQL.TableBase.Insert(System.String)">
            <summary>
            增加记录
            </summary>
            <param name="ConnectionString"></param>
            <returns>小于0表示失败，0表示成功，无自增值，大于0表示自增值</returns>
        </member>
        <member name="M:Shove.Database.MSSQL.TableBase.Insert(System.Data.SqlClient.SqlConnection)">
            <summary>
            增加记录
            </summary>
            <param name="conn"></param>
            <returns>小于0表示失败，0表示成功，无自增值，大于0表示自增值</returns>
        </member>
        <member name="M:Shove.Database.MSSQL.TableBase.Delete(System.String)">
            <summary>
            删除表记录
            </summary>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.TableBase.Delete(System.String,System.String)">
            <summary>
            删除表记录
            </summary>
            <param name="ConnectionString"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.TableBase.Delete(System.Data.SqlClient.SqlConnection,System.String)">
            <summary>
            删除表记录
            </summary>
            <param name="conn"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.TableBase.Update(System.String)">
            <summary>
            更新表
            </summary>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.TableBase.Update(System.String,System.String)">
            <summary>
            更新表
            </summary>
            <param name="ConnectionString"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.TableBase.Update(System.Data.SqlClient.SqlConnection,System.String)">
            <summary>
            更新表
            </summary>
            <param name="conn"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.Database.MSSQL.ViewBase">
            <summary>
            视图的基类，ShoveDAL.30 工具使用
            </summary>
        </member>
        <member name="F:Shove.Database.MSSQL.ViewBase.ViewName">
            <summary>
            视图名称
            </summary>
        </member>
        <member name="M:Shove.Database.MSSQL.ViewBase.Open(System.String,System.String,System.String)">
            <summary>
            打开视图
            </summary>
            <param name="FieldList"></param>
            <param name="Condition"></param>
            <param name="Order"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.ViewBase.Open(System.String,System.String,System.String,System.String)">
            <summary>
            打开视图
            </summary>
            <param name="ConnectionString"></param>
            <param name="FieldList"></param>
            <param name="Condition"></param>
            <param name="Order"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.ViewBase.Open(System.Data.SqlClient.SqlConnection,System.String,System.String,System.String)">
            <summary>
            打开视图
            </summary>
            <param name="conn"></param>
            <param name="FieldList"></param>
            <param name="Condition"></param>
            <param name="Order"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.ViewBase.GetCount(System.String)">
            <summary>
            获取视图记录数
            </summary>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.ViewBase.GetCount(System.String,System.String)">
            <summary>
            获取视图记录数
            </summary>
            <param name="ConnectionString"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MSSQL.ViewBase.GetCount(System.Data.SqlClient.SqlConnection,System.String)">
            <summary>
            获取视图记录数
            </summary>
            <param name="conn"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.Database.MySQL">
            <summary>
            Shove 的专用的 MySQL 访问组件类
            </summary>
        </member>
        <member name="M:Shove.Database.MySQL.BuildConnectString(System.String,System.String,System.String)">
            <summary>
            构建连接串
            </summary>
            <param name="UID"></param>
            <param name="Password"></param>
            <param name="DatabaseName"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.BuildConnectString(System.String,System.String,System.String,System.String)">
            <summary>
            构建连接串
            </summary>
            <param name="ServerName"></param>
            <param name="UID"></param>
            <param name="Password"></param>
            <param name="DatabaseName"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.BuildConnectString(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            构建连接串
            </summary>
            <param name="ServerName"></param>
            <param name="UID"></param>
            <param name="Password"></param>
            <param name="DatabaseName"></param>
            <param name="Port"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.BuildConnectString(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            构建连接串
            </summary>
            <param name="ServerName"></param>
            <param name="UID"></param>
            <param name="Password"></param>
            <param name="DatabaseName"></param>
            <param name="Port"></param>
            <param name="Charset"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.Database.MySQL.Parameter">
            <summary>
            参数
            </summary>
        </member>
        <member name="F:Shove.Database.MySQL.Parameter.Name">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.Database.MySQL.Parameter.Type">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.Database.MySQL.Parameter.Size">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.Database.MySQL.Parameter.Direction">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.Database.MySQL.Parameter.Value">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.Database.MySQL.Parameter.#ctor(System.String,MySql.Data.MySqlClient.MySqlDbType,System.Int32,System.Data.ParameterDirection,System.Object)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <param name="size"></param>
            <param name="direction"></param>
            <param name="value"></param>
        </member>
        <member name="T:Shove.Database.MySQL.OutputParameter">
            <summary>
            输入参数
            </summary>
        </member>
        <member name="M:Shove.Database.MySQL.OutputParameter.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.Database.MySQL.OutputParameter.Add(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="Name"></param>
            <param name="Value"></param>
        </member>
        <member name="M:Shove.Database.MySQL.OutputParameter.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="P:Shove.Database.MySQL.OutputParameter.Count">
            <summary>
            
            </summary>
        </member>
        <member name="P:Shove.Database.MySQL.OutputParameter.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="Index"></param>
            <returns></returns>
        </member>
        <member name="P:Shove.Database.MySQL.OutputParameter.Item(System.String)">
            <summary>
            
            </summary>
            <param name="Name"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.ExecuteNonQuery(System.String,Shove.Database.MySQL.Parameter[])">
            <summary>
            执行数据库命令
            </summary>
            <param name="CommandText"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.ExecuteNonQuery(System.String,System.String,Shove.Database.MySQL.Parameter[])">
            <summary>
            执行数据库命令
            </summary>
            <param name="ConnectionString"></param>
            <param name="CommandText"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.ExecuteNonQuery(MySql.Data.MySqlClient.MySqlConnection,System.String,Shove.Database.MySQL.Parameter[])">
            <summary>
            执行数据库命令
            </summary>
            <param name="conn"></param>
            <param name="CommandText"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.ExecuteNonQueryNoTranscation(MySql.Data.MySqlClient.MySqlConnection,System.String,Shove.Database.MySQL.Parameter[])">
            <summary>
            执行数据库命令(不用事务)
            </summary>
            <param name="conn"></param>
            <param name="CommandText"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.Select(System.String,Shove.Database.MySQL.Parameter[])">
            <summary>
            打开数据集
            </summary>
            <param name="CommandText"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.Select(System.String,System.String,Shove.Database.MySQL.Parameter[])">
            <summary>
            打开数据集
            </summary>
            <param name="ConnectionString"></param>
            <param name="CommandText"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.Select(MySql.Data.MySqlClient.MySqlConnection,System.String,Shove.Database.MySQL.Parameter[])">
            <summary>
            打开数据集
            </summary>
            <param name="conn"></param>
            <param name="CommandText"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.Select(System.String,System.Int32,Shove.Database.MySQL.Parameter[])">
            <summary>
            打开数据集
            </summary>
            <param name="CommandText"></param>
            <param name="commandTimeout"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.Select(System.String,System.String,System.Int32,Shove.Database.MySQL.Parameter[])">
            <summary>
            打开数据集
            </summary>
            <param name="ConnectionString"></param>
            <param name="CommandText"></param>
            <param name="commandTimeout"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.Select(MySql.Data.MySqlClient.MySqlConnection,System.String,System.Int32,Shove.Database.MySQL.Parameter[])">
            <summary>
            打开数据集
            </summary>
            <param name="conn"></param>
            <param name="CommandText"></param>
            <param name="commandTimeout"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.ExecuteScalar(System.String,Shove.Database.MySQL.Parameter[])">
            <summary>
            读取第一行第一列
            </summary>
            <param name="CommandText"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.ExecuteScalar(System.String,System.String,Shove.Database.MySQL.Parameter[])">
            <summary>
            读取第一行第一列
            </summary>
            <param name="ConnectionString"></param>
            <param name="CommandText"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.ExecuteScalar(MySql.Data.MySqlClient.MySqlConnection,System.String,Shove.Database.MySQL.Parameter[])">
            <summary>
            读取第一行第一列
            </summary>
            <param name="conn"></param>
            <param name="CommandText"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.ExecuteFunction(System.String,Shove.Database.MySQL.Parameter[])">
            <summary>
            执行函数
            </summary>
            <param name="FunctionName"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.ExecuteFunction(System.String,System.String,Shove.Database.MySQL.Parameter[])">
            <summary>
            执行函数
            </summary>
            <param name="ConnectionString"></param>
            <param name="FunctionName"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.ExecuteFunction(MySql.Data.MySqlClient.MySqlConnection,System.String,Shove.Database.MySQL.Parameter[])">
            <summary>
            执行函数
            </summary>
            <param name="conn"></param>
            <param name="FunctionName"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.ExecuteStoredProcedureNonQuery(System.String,Shove.Database.MySQL.OutputParameter@,Shove.Database.MySQL.Parameter[])">
            <summary>
            执行存储过程
            </summary>
            <param name="StoredProcedureName"></param>
            <param name="Outputs"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.ExecuteStoredProcedureNonQuery(System.String,System.String,Shove.Database.MySQL.OutputParameter@,Shove.Database.MySQL.Parameter[])">
            <summary>
            执行存储过程
            </summary>
            <param name="ConnectionString"></param>
            <param name="StoredProcedureName"></param>
            <param name="Outputs"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.ExecuteStoredProcedureNonQuery(MySql.Data.MySqlClient.MySqlConnection,System.String,Shove.Database.MySQL.OutputParameter@,Shove.Database.MySQL.Parameter[])">
            <summary>
            执行存储过程
            </summary>
            <param name="conn"></param>
            <param name="StoredProcedureName"></param>
            <param name="Outputs"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.ExecuteStoredProcedureWithQuery(System.String,System.Data.DataSet@,Shove.Database.MySQL.OutputParameter@,Shove.Database.MySQL.Parameter[])">
            <summary>
            执行存储过程(不带返回记录集)
            </summary>
            <param name="StoredProcedureName"></param>
            <param name="ds"></param>
            <param name="Outputs"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.ExecuteStoredProcedureWithQuery(System.String,System.String,System.Data.DataSet@,Shove.Database.MySQL.OutputParameter@,Shove.Database.MySQL.Parameter[])">
            <summary>
            执行存储过程(不带返回记录集)
            </summary>
            <param name="ConnectionString"></param>
            <param name="StoredProcedureName"></param>
            <param name="ds"></param>
            <param name="Outputs"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.ExecuteStoredProcedureWithQuery(MySql.Data.MySqlClient.MySqlConnection,System.String,System.Data.DataSet@,Shove.Database.MySQL.OutputParameter@,Shove.Database.MySQL.Parameter[])">
            <summary>
            执行存储过程(不带返回记录集)
            </summary>
            <param name="conn"></param>
            <param name="StoredProcedureName"></param>
            <param name="ds"></param>
            <param name="Outputs"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.BackupDataToZipStream">
            <summary>
            备份数据库(表数据库 XML 描述，压缩为二进制流)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.BackupDataToZipStream(System.String)">
            <summary>
            备份数据库(表数据库 XML 描述，压缩为二进制流)
            </summary>
            <param name="ConnectionString"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.BackupDataToZipStream(MySql.Data.MySqlClient.MySqlConnection)">
            <summary>
            备份数据库(表数据库 XML 描述，压缩为二进制流)
            </summary>
            <param name="conn"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.BackupDataToDataSet(MySql.Data.MySqlClient.MySqlConnection)">
            <summary>
            备份数据库(表数据库 XML 描述，压缩为二进制流)
            </summary>
            <param name="conn"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.ConvertToSqlFormat(System.Object,System.Boolean,System.Boolean,System.Data.DataColumn,System.Data.DataRow)">
            <summary>
            MySQL 字段类型处理
            </summary>
            <param name="ob"></param>
            <param name="wrapStringWithSingleQuote"></param>
            <param name="escapeStringSequence"></param>
            <param name="dc"></param>
            <param name="dr"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.DataTableTemplate">
            <summary>
            构建数据模版
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.SqlFormat(System.String)">
            <summary>
            SQL 字符串格式化处理（整理\r，\n）
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.EraseDefiner(System.String)">
            <summary>
            清除数据库用户信息 
            (解决用户名不一致导致的错误)
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.RestoreDataFromZipStream(System.Byte[])">
            <summary>
            恢复数据库(从二进制压缩流中提取表数据库的 XML 进行恢复)
            </summary>
            <param name="DataBuffer"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.RestoreDataFromZipStream(System.String,System.Byte[])">
            <summary>
            恢复数据库(从二进制压缩流中提取表数据库的 XML 进行恢复)
            </summary>
            <param name="ConnectionString"></param>
            <param name="DataBuffer"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.RestoreDataFromZipStream(MySql.Data.MySqlClient.MySqlConnection,System.Byte[])">
            <summary>
            恢复数据库(从二进制压缩流中提取表数据库的 XML 进行恢复)
            </summary>
            <param name="conn"></param>
            <param name="DataBuffer"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.Database.MySQL.Field">
            <summary>
            表的字段类，ShoveDAL.30 工具使用
            </summary>
        </member>
        <member name="F:Shove.Database.MySQL.Field.Parent">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.Database.MySQL.Field.Name">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.Database.MySQL.Field.CanonicalIdentifierName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.Database.MySQL.Field.DbType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.Database.MySQL.Field.ReadOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:Shove.Database.MySQL.Field.Value">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.Database.MySQL.Field.#ctor(System.Object,System.String,System.String,MySql.Data.MySqlClient.MySqlDbType,System.Boolean)">
            <summary>
            
            </summary>
            <param name="parent"></param>
            <param name="name"></param>
            <param name="canonicalidentifiername"></param>
            <param name="dbtype"></param>
            <param name="_readonly"></param>
        </member>
        <member name="T:Shove.Database.MySQL.FieldCollection">
            <summary>
            表的修改的字段集合，ShoveDAL.30 工具使用
            </summary>
        </member>
        <member name="P:Shove.Database.MySQL.FieldCollection.Count">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.Database.MySQL.FieldCollection.Add(Shove.Database.MySQL.Field)">
            <summary>
            
            </summary>
            <param name="field"></param>
        </member>
        <member name="M:Shove.Database.MySQL.FieldCollection.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="P:Shove.Database.MySQL.FieldCollection.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="Index"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.Database.MySQL.TableBase">
            <summary>
            表的基类，ShoveDAL.30 工具使用
            </summary>
        </member>
        <member name="F:Shove.Database.MySQL.TableBase.TableName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.Database.MySQL.TableBase.Fields">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.Database.MySQL.TableBase.Open(System.String,System.String,System.String,System.Int64,System.Int64)">
            <summary>
            打开表
            </summary>
            <param name="FieldList"></param>
            <param name="Condition"></param>
            <param name="Order"></param>
            <param name="LimitStart">从第几条开始，小于 0 表示不限 </param>
            <param name="LimitCount">检索多少条记录，小于 1 表示不限</param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.TableBase.Open(System.String,System.String,System.String,System.String,System.Int64,System.Int64)">
            <summary>
            打开表
            </summary>
            <param name="ConnectionString"></param>
            <param name="FieldList"></param>
            <param name="Condition"></param>
            <param name="Order"></param>
            <param name="LimitStart">从第几条开始，小于 0 表示不限 </param>
            <param name="LimitCount">检索多少条记录，小于 1 表示不限</param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.TableBase.Open(MySql.Data.MySqlClient.MySqlConnection,System.String,System.String,System.String,System.Int64,System.Int64)">
            <summary>
            打开表
            </summary>
            <param name="conn"></param>
            <param name="FieldList"></param>
            <param name="Condition"></param>
            <param name="Order"></param>
            <param name="LimitStart">从第几条开始，小于 0 表示不限 </param>
            <param name="LimitCount">检索多少条记录，小于 1 表示不限</param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.TableBase.GetCount(System.String)">
            <summary>
            获取表记录数
            </summary>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.TableBase.GetCount(System.String,System.String)">
            <summary>
            获取表记录数
            </summary>
            <param name="ConnectionString"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.TableBase.GetCount(MySql.Data.MySqlClient.MySqlConnection,System.String)">
            <summary>
            获取表记录数
            </summary>
            <param name="conn"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.TableBase.Insert">
            <summary>
            增加记录
            </summary>
            <returns>小于0表示失败，0表示成功，无自增值，大于0表示自增值</returns>
        </member>
        <member name="M:Shove.Database.MySQL.TableBase.Insert(System.String)">
            <summary>
            增加记录
            </summary>
            <param name="ConnectionString"></param>
            <returns>小于0表示失败，0表示成功，无自增值，大于0表示自增值</returns>
        </member>
        <member name="M:Shove.Database.MySQL.TableBase.Insert(MySql.Data.MySqlClient.MySqlConnection)">
            <summary>
            增加记录
            </summary>
            <param name="conn"></param>
            <returns>小于0表示失败，0表示成功，无自增值，大于0表示自增值</returns>
        </member>
        <member name="M:Shove.Database.MySQL.TableBase.Delete(System.String)">
            <summary>
            删除表记录
            </summary>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.TableBase.Delete(System.String,System.String)">
            <summary>
            删除表记录
            </summary>
            <param name="ConnectionString"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.TableBase.Delete(MySql.Data.MySqlClient.MySqlConnection,System.String)">
            <summary>
            删除表记录
            </summary>
            <param name="conn"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.TableBase.Update(System.String)">
            <summary>
            更新表
            </summary>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.TableBase.Update(System.String,System.String)">
            <summary>
            更新表
            </summary>
            <param name="ConnectionString"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.TableBase.Update(MySql.Data.MySqlClient.MySqlConnection,System.String)">
            <summary>
            更新表
            </summary>
            <param name="conn"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.Database.MySQL.ViewBase">
            <summary>
            视图的基类，ShoveDAL.30 工具使用
            </summary>
        </member>
        <member name="F:Shove.Database.MySQL.ViewBase.ViewName">
            <summary>
            视图名称
            </summary>
        </member>
        <member name="M:Shove.Database.MySQL.ViewBase.Open(System.String,System.String,System.String,System.Int64,System.Int64)">
            <summary>
            打开视图
            </summary>
            <param name="FieldList"></param>
            <param name="Condition"></param>
            <param name="Order"></param>
            <param name="LimitStart">从第几条开始，小于 0 表示不限 </param>
            <param name="LimitCount">检索多少条记录，小于 1 表示不限</param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.ViewBase.Open(System.String,System.String,System.String,System.String,System.Int64,System.Int64)">
            <summary>
            打开视图
            </summary>
            <param name="ConnectionString"></param>
            <param name="FieldList"></param>
            <param name="Condition"></param>
            <param name="Order"></param>
            <param name="LimitStart">从第几条开始，小于 0 表示不限 </param>
            <param name="LimitCount">检索多少条记录，小于 1 表示不限</param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.ViewBase.Open(MySql.Data.MySqlClient.MySqlConnection,System.String,System.String,System.String,System.Int64,System.Int64)">
            <summary>
            打开视图
            </summary>
            <param name="conn"></param>
            <param name="FieldList"></param>
            <param name="Condition"></param>
            <param name="Order"></param>
            <param name="LimitStart">从第几条开始，小于 0 表示不限 </param>
            <param name="LimitCount">检索多少条记录，小于 1 表示不限</param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.ViewBase.GetCount(System.String)">
            <summary>
            获取视图记录数
            </summary>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.ViewBase.GetCount(System.String,System.String)">
            <summary>
            获取视图记录数
            </summary>
            <param name="ConnectionString"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Database.MySQL.ViewBase.GetCount(MySql.Data.MySqlClient.MySqlConnection,System.String)">
            <summary>
            获取视图记录数
            </summary>
            <param name="conn"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.DatabaseFactory.Convert.Model.Database">
            <summary>
            数据库模型
            </summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Convert.Model.Database.Tables">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Convert.Model.Database.Views">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Database.AddTable(Shove.DatabaseFactory.Convert.Model.Table)">
            <summary>
            
            </summary>
            <param name="table"></param>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Database.AddView(Shove.DatabaseFactory.Convert.Model.View)">
            <summary>
            
            </summary>
            <param name="view"></param>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Database.TableCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Database.ViewCount">
            <summary>
            
            </summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Convert.Model.Field">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Convert.Model.Field.Name">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Convert.Model.Field.DbType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Convert.Model.Field.Length">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Convert.Model.Field.IsAUTO_INCREMENT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Convert.Model.Field.IsPRIMARY_KEY">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Convert.Model.Field.IsNOT_NULL">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Convert.Model.Field.DefaultValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Field.#ctor(System.String,System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="dbtype"></param>
            <param name="length"></param>
            <param name="isauto_increment"></param>
            <param name="isprimary_key"></param>
            <param name="isnot_null"></param>
            <param name="defaultValue"></param>
        </member>
        <member name="T:Shove.DatabaseFactory.Convert.Model.Index">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Convert.Model.Index.Name">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Convert.Model.Index.Body">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Index.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="Name"></param>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Index.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="Name"></param>
            <param name="Body"></param>
        </member>
        <member name="T:Shove.DatabaseFactory.Convert.Model.Table">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Convert.Model.Table.Name">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Convert.Model.Table.Fields">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Convert.Model.Table.Indexs">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Table.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Table.AddField(Shove.DatabaseFactory.Convert.Model.Field)">
            <summary>
            
            </summary>
            <param name="field"></param>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Table.FieldCount">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.Table.AddIndex(Shove.DatabaseFactory.Convert.Model.Index)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="P:Shove.DatabaseFactory.Convert.Model.Table.IndexCount">
            <summary>
            
            </summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Convert.Model.View">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Convert.Model.View.Name">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Convert.Model.View.Body">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Convert.Model.View.Relyon">
            <summary>
            关联视图
            </summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.View.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Model.View.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="body"></param>
        </member>
        <member name="T:Shove.DatabaseFactory.Convert.Converter">
            <summary>
            SQLite 数据库到其他数据库的转换，暂支持 MSSQL, MySQL
            </summary>
            <summary>
            SQLite 数据库到其他数据库的转换，暂支持 MSSQL, MySQL
            </summary>
            <summary>
            SQLite 数据库到其他数据库的转换，暂支持 MSSQL, MySQL
            </summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Converter.SQLiteToMSSQL(System.String,System.String,System.Boolean,System.String@)">
            <summary>
            SQLite 转换到 MSSQL
            </summary>
            <param name="SQLite_ConnectionString">源 SQLite 数据库连接串</param>
            <param name="MSSQL_ConnectionString">目标 SQLServer 数据库连接串</param>
            <param name="IsWithData">是否携带所有的数据进行转换</param>
            <param name="Description">错误描述</param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Converter.SQLiteToMSSQL(System.String,System.String,System.Boolean,System.Boolean,System.String@)">
            <summary>
            SQLite 转换到 MSSQL
            </summary>
            <param name="SQLite_ConnectionString">源 SQLite 数据库连接串</param>
            <param name="MSSQL_ConnectionString">目标 SQLServer 数据库连接串</param>
            <param name="IsWithData">是否携带所有的数据进行转换</param>
            <param name="ignoreViewRelyon">是否忽略视图依赖关系</param>
            <param name="Description">错误描述</param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Converter.SQLiteToMySQL(System.String,System.String,System.Boolean,System.String@)">
            <summary>
            SQLite 转换到 MySQL
            </summary>
            <param name="SQLite_ConnectionString">源 SQLite 数据库连接串</param>
            <param name="MySQL_ConnectionString">目标 MySQL 数据库连接串</param>
            <param name="IsWithData">是否携带所有的数据进行转换</param>
            <param name="Description">错误描述</param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Converter.SQLiteToMySQL(System.String,System.String,System.Boolean,System.Boolean,System.String@)">
            <summary>
            SQLite 转换到 MySQL
            </summary>
            <param name="SQLite_ConnectionString">源 SQLite 数据库连接串</param>
            <param name="MySQL_ConnectionString">目标 MySQL 数据库连接串</param>
            <param name="IsWithData">是否携带所有的数据进行转换</param>
            <param name="ignoreViewRelyon">是否忽略视图依赖关系</param>
            <param name="Description">错误描述</param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Converter.SQLiteToModel(System.Data.SQLite.SQLiteConnection,System.Boolean)">
            <summary>
            SQLite 数据库解析到 Model
            </summary>
            <param name="conn"></param>
            <param name="ignoreViewRelyon">忽略视图依赖关系的分析</param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.Convert.Converter.isColumnExists(System.Data.DataRow,System.String)">
            <summary>
            表行中是否存在某字段
            </summary>
            <param name="dr"></param>
            <param name="ColumnName"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.DatabaseFactory.Factory">
            <summary>
            数据工厂基类，此类没有考虑线程安全，不应该作为 static 类型，并在后台多线程中使用。
            </summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Factory.ConnectionString">
            <summary>
            连接串
            </summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Factory.connection">
            <summary>
            连接对象
            </summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Factory.transcation">
            <summary>
            事务对象
            </summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Factory.DatabaseReadOnlyState">
            <summary>
            数据库只读标志
            </summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.FilteSqlInfusionForFieldValue(System.String)">
            <summary>
            过滤 Sql 注入，过滤字段值
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.FilteSqlInfusionForCondition(System.String)">
            <summary>
            过滤 Sql 注入，过滤 condition 等 html 编辑器的恶意代码注入
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.#ctor">
            <summary>
            初始化，打开数据库连接。(从配置文件中读取连接串)
            </summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.#ctor(System.String)">
            <summary>
            初始化，打开数据库连接。(直接给定连接串，而不是从配置文件读取)
            </summary>
            <param name="InitConnectionString"></param>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.Finalize">
            <summary>
            析构方法，用于关闭数据库连接
            </summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.Close">
            <summary>
            关闭数据库连接
            </summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.Close(System.Boolean)">
            <summary>
            关闭数据库连接
            </summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.__CreateDatabaseConnection">
            <summary>
            虚拟的 CreateDatabaseConnection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.CreateDatabaseConnection">
            <summary>
            CreateDatabaseConnection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.BeginTransaction">
            <summary>
            开始事务
            </summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.CommitTranscation">
            <summary>
            提交事务
            </summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.RollbackTranscation">
            <summary>
            回滚事务
            </summary>
        </member>
        <member name="T:Shove.DatabaseFactory.Factory.FieldCollect">
            <summary>
            字段列表
            </summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.FieldCollect.#ctor(System.String[])">
            <summary>
            构造
            </summary>
            <param name="fields"></param>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.FieldCollect.Add(System.String)">
            <summary>
            增加字段
            </summary>
            <param name="field"></param>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.FieldCollect.Add(System.String[])">
            <summary>
            增加字段数组
            </summary>
            <param name="fields"></param>
        </member>
        <member name="P:Shove.DatabaseFactory.Factory.FieldCollect.Count">
            <summary>
            字段统计
            </summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Factory.FieldCollect.Item(System.Int32)">
            <summary>
            字段索引
            </summary>
            <param name="Index"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.DatabaseFactory.Factory.FieldValueCollect">
            <summary>
            字段值列表
            </summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.FieldValueCollect.#ctor(System.Object[])">
            <summary>
            构造
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.FieldValueCollect.Add(System.Object)">
            <summary>
            增加字段值
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.FieldValueCollect.Add(System.Object[])">
            <summary>
            增加字段值数组
            </summary>
            <param name="values"></param>
        </member>
        <member name="P:Shove.DatabaseFactory.Factory.FieldValueCollect.Count">
            <summary>
            字段值统计
            </summary>
        </member>
        <member name="P:Shove.DatabaseFactory.Factory.FieldValueCollect.Item(System.Int32)">
            <summary>
            字段值索引
            </summary>
            <param name="Index"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.DatabaseFactory.Factory.FieldValueCalculate">
            <summary>
            计算列的值
            </summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Factory.FieldValueCalculate.FieldName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.DatabaseFactory.Factory.FieldValueCalculate.Ormula">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.FieldValueCalculate.#ctor(System.String,System.String)">
            <summary>
            构造
            </summary>
            <param name="fieldName"></param>
            <param name="ormula"></param>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.FieldValueCalculate.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.__Open(System.String,Shove.DatabaseFactory.Factory.FieldCollect,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            打开表或视图
            </summary>
            <param name="TableOrViewName"></param>
            <param name="fieldCollent"></param>
            <param name="Condition"></param>
            <param name="OrderBy"></param>
            <param name="LimitStart"></param>
            <param name="LimitCount"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.Open(System.String,Shove.DatabaseFactory.Factory.FieldCollect,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            打开表或视图
            </summary>
            <param name="TableOrViewName"></param>
            <param name="fieldCollent"></param>
            <param name="Condition"></param>
            <param name="OrderBy"></param>
            <param name="LimitStart"></param>
            <param name="LimitCount"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.__GetRowCount(System.String,System.String)">
            <summary>
            获取符合条件的记录数
            </summary>
            <param name="TableOrViewName"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.GetRowCount(System.String,System.String)">
            <summary>
            获取符合条件的记录数
            </summary>
            <param name="TableOrViewName"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.__Insert(System.String,Shove.DatabaseFactory.Factory.FieldCollect,Shove.DatabaseFactory.Factory.FieldValueCollect)">
            <summary>
            插入记录
            </summary>
            <param name="TableName"></param>
            <param name="fieldCollent"></param>
            <param name="fieldValueCollect"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.Insert(System.String,Shove.DatabaseFactory.Factory.FieldCollect,Shove.DatabaseFactory.Factory.FieldValueCollect)">
            <summary>
            插入记录
            </summary>
            <param name="TableName"></param>
            <param name="fieldCollent"></param>
            <param name="fieldValueCollect"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.__Update(System.String,Shove.DatabaseFactory.Factory.FieldCollect,Shove.DatabaseFactory.Factory.FieldValueCollect,System.String)">
            <summary>
            更新记录
            </summary>
            <param name="TableName"></param>
            <param name="fieldCollent"></param>
            <param name="fieldValueCollect"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.Update(System.String,Shove.DatabaseFactory.Factory.FieldCollect,Shove.DatabaseFactory.Factory.FieldValueCollect,System.String)">
            <summary>
            更新记录
            </summary>
            <param name="TableName"></param>
            <param name="fieldCollent"></param>
            <param name="fieldValueCollect"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.__Delete(System.String,System.String)">
            <summary>
            删除记录
            </summary>
            <param name="TableName"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.Delete(System.String,System.String)">
            <summary>
            删除记录
            </summary>
            <param name="TableName"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.__CreateIndex(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Create Index
            </summary>
            <param name="TableName"></param>
            <param name="IndexName"></param>
            <param name="isUnique"></param>
            <param name="Body"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.CreateIndex(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Create Index
            </summary>
            <param name="TableName"></param>
            <param name="IndexName"></param>
            <param name="isUnique"></param>
            <param name="Body"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.__DropIndex(System.String,System.String)">
            <summary>
            Drop Index
            </summary>
            <param name="TableName"></param>
            <param name="IndexName"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.DropIndex(System.String,System.String)">
            <summary>
            Drop Index
            </summary>
            <param name="TableName"></param>
            <param name="IndexName"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.__ExecuteNonQuery(System.String)">
            <summary>
            执行命令
            </summary>
            <param name="CommandString"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.ExecuteNonQuery(System.String)">
            <summary>
            执行命令
            </summary>
            <param name="CommandString"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.__ExecuteScalar(System.String)">
            <summary>
            执行读取一行一列
            </summary>
            <param name="CommandString"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.ExecuteScalar(System.String)">
            <summary>
            执行命令
            </summary>
            <param name="CommandString"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.__ExecuteReader(System.String)">
            <summary>
            Reader
            </summary>
            <param name="CommandString"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.ExecuteReader(System.String)">
            <summary>
            Reader
            </summary>
            <param name="CommandString"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.__ExecuteQuery(System.String)">
            <summary>
            执行命令返回结果集
            </summary>
            <param name="CommandString"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.Factory.ExecuteQuery(System.String)">
            <summary>
            执行命令返回结果集
            </summary>
            <param name="CommandString"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.DatabaseFactory.FactoryManager">
            <summary>
            数据仓库管理器
            </summary>
        </member>
        <member name="F:Shove.DatabaseFactory.FactoryManager.currentConnections">
            <summary>
            计数器，用于记录当前使用本数据工厂打开了多少个活动连接。这个没有考虑线程安全，统计是有误差的，属于正常情况。（不能考虑同步，否则会引起性能阻塞）
            </summary>
        </member>
        <member name="F:Shove.DatabaseFactory.FactoryManager.factory">
            <summary>
            数据仓库实例
            </summary>
        </member>
        <member name="F:Shove.DatabaseFactory.FactoryManager.DataProvider">
            <summary>
            数据库提供者，可选：MySQL, MSSQL, SQLite
            </summary>
        </member>
        <member name="M:Shove.DatabaseFactory.FactoryManager.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:Shove.DatabaseFactory.FactoryManager.#ctor(System.String)">
            <summary>
            构造，带连接串，而不从配置文件读取
            </summary>
        </member>
        <member name="T:Shove.DatabaseFactory.MSSQL">
            <summary>
            数据工厂的 MSSQL 类
            </summary>
        </member>
        <member name="M:Shove.DatabaseFactory.MSSQL.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:Shove.DatabaseFactory.MSSQL.#ctor(System.String)">
            <summary>
            构造
            </summary>
            <param name="InitConnectionString"></param>
        </member>
        <member name="M:Shove.DatabaseFactory.MSSQL.__CreateDatabaseConnection">
            <summary>
            CreateDatabaseConnection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.MSSQL.__Open(System.String,Shove.DatabaseFactory.Factory.FieldCollect,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Open
            </summary>
            <param name="TableOrViewName"></param>
            <param name="fieldCollent"></param>
            <param name="Condition"></param>
            <param name="OrderBy"></param>
            <param name="LimitStart"></param>
            <param name="LimitCount"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.MSSQL.__GetRowCount(System.String,System.String)">
            <summary>
            GetRowCount
            </summary>
            <param name="TableOrViewName"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.MSSQL.__Insert(System.String,Shove.DatabaseFactory.Factory.FieldCollect,Shove.DatabaseFactory.Factory.FieldValueCollect)">
            <summary>
            Insert
            </summary>
            <param name="TableName"></param>
            <param name="fieldCollent"></param>
            <param name="fieldValueCollect"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.MSSQL.__Update(System.String,Shove.DatabaseFactory.Factory.FieldCollect,Shove.DatabaseFactory.Factory.FieldValueCollect,System.String)">
            <summary>
            Update
            </summary>
            <param name="TableName"></param>
            <param name="fieldCollent"></param>
            <param name="fieldValueCollect"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.MSSQL.__Delete(System.String,System.String)">
            <summary>
            Delete
            </summary>
            <param name="TableName"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.MSSQL.__CreateIndex(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Create Index
            </summary>
            <param name="TableName"></param>
            <param name="IndexName"></param>
            <param name="isUnique"></param>
            <param name="Body"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.MSSQL.__DropIndex(System.String,System.String)">
            <summary>
            Drop Index
            </summary>
            <param name="TableName"></param>
            <param name="IndexName"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.MSSQL.__ExecuteNonQuery(System.String)">
            <summary>
            执行命令
            </summary>
            <param name="CommandString"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.MSSQL.__ExecuteScalar(System.String)">
            <summary>
            执行读取一行一列
            </summary>
            <param name="CommandString"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.MSSQL.__ExecuteReader(System.String)">
            <summary>
            Reader
            </summary>
            <param name="CommandString"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.MSSQL.__ExecuteQuery(System.String)">
            <summary>
            执行命令返回结果集
            </summary>
            <param name="CommandString"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.DatabaseFactory.MySQL">
            <summary>
            数据工厂的 MySQL 类
            </summary>
        </member>
        <member name="M:Shove.DatabaseFactory.MySQL.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.DatabaseFactory.MySQL.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="InitConnectionString"></param>
        </member>
        <member name="M:Shove.DatabaseFactory.MySQL.__CreateDatabaseConnection">
            <summary>
            CreateDatabaseConnection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.MySQL.__Open(System.String,Shove.DatabaseFactory.Factory.FieldCollect,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Open
            </summary>
            <param name="TableOrViewName"></param>
            <param name="fieldCollent"></param>
            <param name="Condition"></param>
            <param name="OrderBy"></param>
            <param name="LimitStart"></param>
            <param name="LimitCount"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.MySQL.__GetRowCount(System.String,System.String)">
            <summary>
            GetRowCount
            </summary>
            <param name="TableOrViewName"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.MySQL.__Insert(System.String,Shove.DatabaseFactory.Factory.FieldCollect,Shove.DatabaseFactory.Factory.FieldValueCollect)">
            <summary>
            Insert
            </summary>
            <param name="TableName"></param>
            <param name="fieldCollent"></param>
            <param name="fieldValueCollect"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.MySQL.__Update(System.String,Shove.DatabaseFactory.Factory.FieldCollect,Shove.DatabaseFactory.Factory.FieldValueCollect,System.String)">
            <summary>
            Update
            </summary>
            <param name="TableName"></param>
            <param name="fieldCollent"></param>
            <param name="fieldValueCollect"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.MySQL.__Delete(System.String,System.String)">
            <summary>
            Delete
            </summary>
            <param name="TableName"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.MySQL.__CreateIndex(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Create Index
            </summary>
            <param name="TableName"></param>
            <param name="IndexName"></param>
            <param name="isUnique"></param>
            <param name="Body"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.MySQL.__DropIndex(System.String,System.String)">
            <summary>
            Drop Index
            </summary>
            <param name="TableName"></param>
            <param name="IndexName"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.MySQL.__ExecuteNonQuery(System.String)">
            <summary>
            执行命令
            </summary>
            <param name="CommandString"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.MySQL.__ExecuteScalar(System.String)">
            <summary>
            执行读取一行一列
            </summary>
            <param name="CommandString"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.MySQL.__ExecuteReader(System.String)">
            <summary>
            Reader
            </summary>
            <param name="CommandString"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.MySQL.__ExecuteQuery(System.String)">
            <summary>
            执行命令返回结果集
            </summary>
            <param name="CommandString"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.DatabaseFactory.SQLite">
            <summary>
            数据工厂的 SQLite 类
            </summary>
        </member>
        <member name="M:Shove.DatabaseFactory.SQLite.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.DatabaseFactory.SQLite.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="InitConnectionString"></param>
        </member>
        <member name="M:Shove.DatabaseFactory.SQLite.__CreateDatabaseConnection">
            <summary>
            CreateDatabaseConnection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.SQLite.__Open(System.String,Shove.DatabaseFactory.Factory.FieldCollect,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Open
            </summary>
            <param name="TableOrViewName"></param>
            <param name="fieldCollent"></param>
            <param name="Condition"></param>
            <param name="OrderBy"></param>
            <param name="LimitStart"></param>
            <param name="LimitCount"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.SQLite.__GetRowCount(System.String,System.String)">
            <summary>
            GetRowCount
            </summary>
            <param name="TableOrViewName"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.SQLite.__Insert(System.String,Shove.DatabaseFactory.Factory.FieldCollect,Shove.DatabaseFactory.Factory.FieldValueCollect)">
            <summary>
            Insert
            </summary>
            <param name="TableName"></param>
            <param name="fieldCollent"></param>
            <param name="fieldValueCollect"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.SQLite.__Update(System.String,Shove.DatabaseFactory.Factory.FieldCollect,Shove.DatabaseFactory.Factory.FieldValueCollect,System.String)">
            <summary>
            Update
            </summary>
            <param name="TableName"></param>
            <param name="fieldCollent"></param>
            <param name="fieldValueCollect"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.SQLite.__Delete(System.String,System.String)">
            <summary>
            Delete
            </summary>
            <param name="TableName"></param>
            <param name="Condition"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.SQLite.__CreateIndex(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Create Index
            </summary>
            <param name="TableName"></param>
            <param name="IndexName"></param>
            <param name="isUnique"></param>
            <param name="Body"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.SQLite.__DropIndex(System.String,System.String)">
            <summary>
            Drop Index
            </summary>
            <param name="TableName"></param>
            <param name="IndexName"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.SQLite.__ExecuteNonQuery(System.String)">
            <summary>
            执行命令
            </summary>
            <param name="CommandString"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.SQLite.__ExecuteScalar(System.String)">
            <summary>
            执行读取一行一列
            </summary>
            <param name="CommandString"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.SQLite.__ExecuteReader(System.String)">
            <summary>
            Reader
            </summary>
            <param name="CommandString"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.DatabaseFactory.SQLite.__ExecuteQuery(System.String)">
            <summary>
            执行命令返回结果集
            </summary>
            <param name="CommandString"></param>
            <returns></returns>
        </member>
        <member name="T:Shove._Drawing">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove._Drawing.Thumbnail(System.String,System.String,System.Double)">
            <summary>
            缩放图片
            </summary>
            <param name="SourceImgFileName">源图片文件</param>
            <param name="TargetImgFileName">目标图片文件，可以同名</param>
            <param name="Scale">比例，1 表示 100%，如：0.2 表示 20%</param>
        </member>
        <member name="M:Shove._Drawing.ConvertImageToJPEG(System.String,System.String,System.Int32)">
            <summary>
            将图片文件转换为 JPEG 格式
            </summary>
            <param name="sourceImageUrl"></param>
            <param name="targetImageUrl"></param>
            <param name="quality">质量，从 1-100，100 为最好</param>
        </member>
        <member name="T:Shove.Drawing.PNGConvertCore.IWuQuantizer">
            <summary>
            
            </summary>
        </member>
        <member name="T:Shove.Drawing.PNGConvertCore.WuQuantizer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.Drawing.PNGConvertCore.WuQuantizer.QuantizeImage(System.Drawing.Bitmap)">
            <summary>
            
            </summary>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.Drawing.Utility">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.Drawing.Utility.Thumbnail(System.String,System.String,System.Double)">
            <summary>
            缩放图片
            </summary>
            <param name="SourceImgFileName">源图片文件</param>
            <param name="TargetImgFileName">目标图片文件，可以同名</param>
            <param name="Scale">比例，1 表示 100%，如：0.2 表示 20%</param>
        </member>
        <member name="M:Shove.Drawing.Utility.ConvertImageToJPEG(System.String,System.String,System.Int32)">
            <summary>
            将图片文件转换为 JPEG 格式
            </summary>
            <param name="sourceImageUrl"></param>
            <param name="targetImageUrl"></param>
            <param name="quality">质量，从 1-100，100 为最好</param>
        </member>
        <member name="M:Shove.Drawing.Utility.ConvertPngTo8Bit(System.String,System.String)">
            <summary>
            转换 PNG 格式的图片为 8 bit 格式的 PNG 图片，比改变图片的尺寸，但大量减少文件大小。质量有损失
            </summary>
            <param name="sourceImageUrl"></param>
            <param name="targetImageUrl"></param>
        </member>
        <member name="T:Shove._Excel">
            <summary>
            Excel 相关
            </summary>
            <summary>
            Excel 相关
            </summary>
            <summary>
            Excel 相关
            </summary>
        </member>
        <member name="M:Shove._Excel.DataTableToWorkBook(System.Data.DataTable)">
            <summary>
            将数据表 DataTable 转换为 Excel 工作簿
            </summary>
            <param name="dt">数据表</param>
        </member>
        <member name="M:Shove._Excel.DataTableToWorkBook(System.Data.DataTable,System.String[])">
            <summary>
            将数据表 DataTable 转换为 Excel 工作簿
            </summary>
            <param name="dt">数据表</param>
            <param name="Cells">指定字段名</param>
        </member>
        <member name="M:Shove._Excel.DataTableToWorkBookAndDownload(System.Data.DataTable,System.String)">
            <summary>
            将数据表 DataTable 转换为 Excel 工作簿并下载，系统根目录下需要建 Temp 目录，并授予访问者读取、写入权限
            </summary>
            <param name="dt">数据表</param>
            <param name="FileName">要保存的文件名</param>
        </member>
        <member name="M:Shove._Excel.DataTableToWorkBookAndDownload(System.Data.DataTable,System.String,System.String[])">
            <summary>
            将数据表 DataTable 转换为 Excel 工作簿并下载，系统根目录下需要建 Temp 目录，并授予访问者读取、写入权限
            </summary>
            <param name="dt">数据表</param>
            <param name="FileName">要保存的文件名</param>
            <param name="Cells">指定字段名</param>
        </member>
        <member name="M:Shove._Excel.DataControlToExcelAndDownload(System.Web.UI.Control)">
            <summary>
            将 DataGrid、DataList 等数据控件中的数据导出为 Execl 文档并下载
            </summary>
            <param name="ctl">控件</param>
        </member>
        <member name="M:Shove._Excel.DataControlToExcelAndDownload(System.Web.UI.Control,System.String)">
            <summary>
            将 DataGrid、DataList 等数据控件中的数据导出为 Execl 文档并下载
            </summary>
            <param name="ctl">控件</param>
            <param name="FileName">指定保存的文件名</param>
        </member>
        <member name="M:Shove._Excel.KillLastExcelProcesses">
            <summary>
            强行杀死最近打开的 Excel 进程
            </summary>
        </member>
        <member name="T:Shove._Excel.ExcelHelper">
            <summary>
            对 Excel 进行操作的类
            </summary>
        </member>
        <member name="M:Shove._Excel.ExcelHelper.#ctor(System.String)">
            <summary>
            构造
            </summary>
            <param name="FileName"></param>
        </member>
        <member name="M:Shove._Excel.ExcelHelper.GetSheetNames">
            <summary>
            所有sheet的名称列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove._Excel.ExcelHelper.GetWorksheetByName(System.String)">
            <summary>
            根据名称获取 sheet
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Excel.ExcelHelper.Read(System.String,System.String,System.String)">
            <summary>
            获取 sheer 内容
            </summary>
            <param name="SheetName"></param>
            <param name="StartCell">开始单元格</param>
            <param name="EndCell">结束单元格</param>
            <returns></returns>
        </member>
        <member name="M:Shove._Excel.ExcelHelper.Close">
            <summary>
            释放
            </summary>
        </member>
        <member name="M:Shove._Excel.ExcelHelper.Finalize">
            <summary>
            析构
            </summary>
        </member>
        <member name="T:Shove._Excel.NPOIExcelHelper">
            <summary>
            Excel 相关，通过 NPOI 实现，无需 Office COM 组件且不依赖 Office
            </summary>
        </member>
        <member name="M:Shove._Excel.NPOIExcelHelper.GetCellValue(NPOI.SS.UserModel.ICell)">
            <summary>
            根据 Excel 列类型获取列的值
            </summary>
            <param name="cell">Excel 列</param>
            <returns></returns>
        </member>
        <member name="M:Shove._Excel.NPOIExcelHelper.AutoSizeColumns(NPOI.SS.UserModel.ISheet)">
            <summary>
            自动设置 Excel 列宽
            </summary>
            <param name="sheet">Excel工作簿</param>
        </member>
        <member name="M:Shove._Excel.NPOIExcelHelper.SaveToFile(System.IO.MemoryStream,System.String)">
            <summary>
            保存 Excel 文档流到文件
            </summary>
            <param name="ms">Excel 文档流</param>
            <param name="fileName">文件名</param>
        </member>
        <member name="M:Shove._Excel.NPOIExcelHelper.RenderToBrowser(System.IO.MemoryStream,System.Web.HttpContext,System.String)">
            <summary>
            输出文件到浏览器
            </summary>
            <param name="ms">Excel 文档流</param>
            <param name="context">HTTP上下文</param>
            <param name="fileName">文件名</param>
        </member>
        <member name="M:Shove._Excel.NPOIExcelHelper.RenderToExcel(System.Data.IDataReader)">
            <summary>
            DataReader 转换成 Excel 文档流
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Excel.NPOIExcelHelper.RenderToExcel(System.Data.IDataReader,System.String)">
            <summary>
            DataReader 转换成 Excel 文档流，并保存到文件
            </summary>
            <param name="reader"></param>
            <param name="fileName">保存的路径</param>
        </member>
        <member name="M:Shove._Excel.NPOIExcelHelper.RenderToExcel(System.Data.IDataReader,System.Web.HttpContext,System.String)">
            <summary>
            DataReader 转换成 Excel 文档流，并输出到客户端
            </summary>
            <param name="reader"></param>
            <param name="context">HTTP上下文</param>
            <param name="fileName">输出的文件名</param>
        </member>
        <member name="M:Shove._Excel.NPOIExcelHelper.RenderToExcel(System.Data.DataTable)">
            <summary>
            DataTable 转换成 Excel 文档流
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Excel.NPOIExcelHelper.RenderToExcel(System.Data.DataTable,System.String)">
            <summary>
            DataTable 转换成 Excel 文档流，并保存到文件
            </summary>
            <param name="table"></param>
            <param name="fileName">保存的路径</param>
        </member>
        <member name="M:Shove._Excel.NPOIExcelHelper.RenderToExcel(System.Data.DataTable,System.Web.HttpContext,System.String)">
            <summary>
            DataTable转换成Excel文档流，并输出到客户端
            </summary>
            <param name="table"></param>
            <param name="context"></param>
            <param name="fileName">输出的文件名</param>
        </member>
        <member name="M:Shove._Excel.NPOIExcelHelper.HasData(System.IO.Stream)">
            <summary>
            Excel 文档流是否有数据
            </summary>
            <param name="excelFileStream">Excel文档流</param>
            <returns></returns>
        </member>
        <member name="M:Shove._Excel.NPOIExcelHelper.HasData(System.IO.Stream,System.Int32)">
            <summary>
            Excel 文档流是否有数据
            </summary>
            <param name="excelFileStream">Excel 文档流</param>
            <param name="sheetIndex">表索引号，如第一个表为0</param>
            <returns></returns>
        </member>
        <member name="M:Shove._Excel.NPOIExcelHelper.RenderFromExcel(System.IO.Stream)">
            <summary>
            Excel 文档流转换成 DataTable
            默认转换 Excel 的第一个表
            第一行必须为标题行
            </summary>
            <param name="excelFileStream">Excel 文档流</param>
            <returns></returns>
        </member>
        <member name="M:Shove._Excel.NPOIExcelHelper.RenderFromExcel(System.IO.Stream,System.String)">
            <summary>
            Excel 文档流转换成 DataTable
            第一行必须为标题行
            </summary>
            <param name="excelFileStream">Excel文档流</param>
            <param name="sheetName">表名称</param>
            <returns></returns>
        </member>
        <member name="M:Shove._Excel.NPOIExcelHelper.RenderFromExcel(System.IO.Stream,System.String,System.Int32)">
            <summary>
            Excel 文档流转换成 DataTable
            </summary>
            <param name="excelFileStream">Excel 文档流</param>
            <param name="sheetName">表名称</param>
            <param name="headerRowIndex">标题行索引号，如第一行为0</param>
            <returns></returns>
        </member>
        <member name="M:Shove._Excel.NPOIExcelHelper.RenderFromExcel(System.IO.Stream,System.Int32)">
            <summary>
            Excel 文档流转换成 DataTable
            第一行必须为标题行
            </summary>
            <param name="excelFileStream">Excel 文档流</param>
            <param name="sheetIndex">表索引号，如第一个表为0</param>
            <returns></returns>
        </member>
        <member name="M:Shove._Excel.NPOIExcelHelper.RenderFromExcel(System.IO.Stream,System.Int32,System.Int32)">
            <summary>
            Excel 文档流转换成 DataTable
            </summary>
            <param name="excelFileStream">Excel 文档流</param>
            <param name="sheetIndex">表索引号，如第一个表为0</param>
            <param name="headerRowIndex">标题行索引号，如第一行为0</param>
            <returns></returns>
        </member>
        <member name="M:Shove._Excel.NPOIExcelHelper.RenderFromExcel(System.String)">
            <summary>
            Excel 表格转换成 DataTable
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Excel.NPOIExcelHelper.RenderFromExcel(System.String,System.String)">
            <summary>
            Excel 表格转换成 DataTable
            </summary>
            <param name="fileName"></param>
            <param name="sheetName"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Excel.NPOIExcelHelper.RenderFromExcel(System.String,System.String,System.Int32)">
            <summary>
            Excel 表格转换成 DataTable
            </summary>
            <param name="fileName"></param>
            <param name="sheetName"></param>
            <param name="headerRowIndex">标题行索引号，如第一行为0</param>
            <returns></returns>
        </member>
        <member name="M:Shove._Excel.NPOIExcelHelper.RenderFromExcel(System.String,System.Int32)">
            <summary>
            Excel 表格转换成 DataTable
            </summary>
            <param name="fileName"></param>
            <param name="sheetIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Excel.NPOIExcelHelper.RenderFromExcel(System.String,System.Int32,System.Int32)">
            <summary>
            Excel 表格转换成 DataTable
            </summary>
            <param name="fileName"></param>
            <param name="sheetIndex"></param>
            <param name="headerRowIndex">标题行索引号，如第一行为0</param>
            <returns></returns>
        </member>
        <member name="M:Shove._Excel.NPOIExcelHelper.RenderFromExcel(NPOI.SS.UserModel.ISheet,System.Int32)">
            <summary>
            Excel 表格转换成 DataTable
            </summary>
            <param name="sheet">表格</param>
            <param name="headerRowIndex">标题行索引号，如第一行为0</param>
            <returns></returns>
        </member>
        <member name="T:Shove.Gateways.GeneralRestGateway">
            <summary>
            通用的 REST 类型的网关
            </summary>
        </member>
        <member name="T:Shove.Gateways.GeneralRestGateway.DelegateHandleRequest">
            <summary>
            申明委托，回调应用程序处理接口参数，应用程序返回需要返回给客户端的字符串，如：xml, josn, 其他字符串等。
            </summary>
            <param name="parameters">已经校验过安全的接口参数列表</param>
            <param name="errorDescription">错误描述，应用程序中如果遇到逻辑错误，则返回 “” 或 null，并且用此变量标明错误原因</param>
            <returns></returns>
        </member>
        <member name="M:Shove.Gateways.GeneralRestGateway.Handle(System.String,System.Int32,Shove.Gateways.GeneralRestGateway.DelegateHandleRequest,System.String@)">
            <summary>
            接口提供程序，在收到请求后，调用此方法，并提供业务逻辑处理的委托方法
            </summary>
            <param name="key">安全 Key</param>
            <param name="allowTimespanSeconds">时间戳允许相差的秒数，一般为 30 秒</param>
            <param name="HandleRequest">委托回调的方法，用于应用程序处理业务逻辑，返回接口应返回的字符串</param>
            <param name="errorDescription">如果有错误发生，此为错误描述</param>
            <returns></returns>
        </member>
        <member name="M:Shove.Gateways.GeneralRestGateway.BuildUrl(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            构建通用网关的请求 url，参数为键值对形式，不分顺序。不需要包含时间戳、签名等参数 ，系统会自动增加。
            </summary>
            <param name="urlBase"></param>
            <param name="key"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.Gateways.Icp">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.Gateways.Icp.IcpBeianQueryRealTime(System.String)">
            <summary>
            工信部实时域名备案状态查询(通过英迈思的备案系统接口)
            </summary>
            <param name="domainName"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.Gateways.SMS">
            <summary>
            sms.gateway.i3km.com 封装的亿美短信网关
            </summary>
        </member>
        <member name="M:Shove.Gateways.SMS.SendSMS(System.String,System.String,System.String,System.String)">
            <summary>
            发送短信。如果 App.Config 或者 Web.Config 的 AppSetting 中没有 Key="I3kmSMS_GatewayServiceUrl" value="" 的设置，将使用默认的网关地址。 
            </summary>
            <param name="RegCode"></param>
            <param name="RegKey"></param>
            <param name="Content"></param>
            <param name="To"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Gateways.SMS.SendSMS(System.String,System.String,System.String,System.String,System.DateTime)">
            <summary>
            发送短信。如果 App.Config 或者 Web.Config 的 AppSetting 中没有 Key="I3kmSMS_GatewayServiceUrl" value="" 的设置，将使用默认的网关地址。 
            </summary>
            <param name="RegCode"></param>
            <param name="RegKey"></param>
            <param name="Content"></param>
            <param name="To"></param>
            <param name="SendTime">指定的发送时间，可以实现按指定的发送时间再进行发送的功能</param>
            <returns></returns>
        </member>
        <member name="M:Shove.Gateways.SMS.GetBalance(System.String,System.String)">
            <summary>
            查询短信账户余额。如果 App.Config 或者 Web.Config 的 AppSetting 中没有 Key="I3kmSMS_GatewayServiceUrl" value="" 的设置，将使用默认的网关地址。 
            </summary>
            <param name="RegCode"></param>
            <param name="RegKey"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Information">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Information.GetUserInformation(System.String,System.String,System.String@)">
            <summary>
            获取用户的基本信息
            </summary>
            <param name="OpenId">用户账号的唯一标识ID</param>
            <param name="lang">返回国家地区语言版本，zh_CN 简体，zh_TW 繁体，en 英语 为空默认中文简体</param>
            <param name="errorDescription">错误描述</param>
            <returns>返回用户基本信息实体UserInformation</returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Information.JsonToObject(System.String,System.String@)">
            <summary>
            json转用户实体对象
            </summary>
            <param name="json">json结构</param>
            <param name="errorDescription"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Information.GetFansList(System.String,System.String@)">
            <summary>
            获取粉丝列表
            </summary>
            <param name="next_openid">第一个拉取的openID,如果不填默认从头开始拉取</param>
            <param name="errorDescription">错误描述</param>
            <returns>返回FansListInformation实体对象</returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Information.AllGroupsInfromation(System.String@)">
            <summary>
            获取分组列表
            </summary>
            <param name="errorDescription">错误描述</param>
            <returns></returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Information.UpdateGroupsName(System.String,System.String,System.String@)">
            <summary>
            修改分组名称
            </summary>
            <param name="GroupsId">分组ID</param>
            <param name="GroupsName">分组名称</param>
            <param name="errorDescription">错误描述</param>
            <returns></returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Information.ShiftUserGroups(System.String,System.String,System.String@)">
            <summary>
            移动用户分组
            </summary>
            <param name="openid">用户的Openid</param>
            <param name="to_groupid">要移动的分组Id</param>
            <param name="errorDescription">错误描述</param>
            <returns></returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Information.CreateGroups(System.String,System.String@,System.Int32@)">
            <summary>
            创建分组
            </summary>
            <param name="GroupsName">分组名称</param>
            <param name="errorDescription">错误描述</param>
            <param name="GroupsId"> 创建成功后的分组Id</param>
            <returns></returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Information.CreateTemporary_Two_Dimension_Code(System.String,System.String@,System.String@)">
            <summary>
            创建临时二维码 临时二维码默认有效时间1800秒
            </summary>
            <param name="scene_id">场景ID，</param>
            <param name="ticket">二维码ticket（可以通过ticket下载二维码图片）</param>
            <param name="errorDescription">错误描述</param>
            <returns></returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Information.CreatePerpetual_Two_Dimension_Code(System.String,System.String@,System.String@)">
            <summary>
            创建永久二维码
            </summary>
            <param name="scene_id">场景ID，</param>
            <param name="ticket">二维码ticket（可以通过ticket下载二维码图片）</param>
            <param name="errorDescription">错误描述</param>
            <returns></returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Information.UploadString(System.String,System.String,System.String@,System.String@)">
            <summary>
            带Json参数的请求
            </summary>
            <param name="url">请求服务器路径</param>
            <param name="data">json数据</param>
            <param name="errorDescription">错误描述</param>
            <param name="JsonResult">json结果</param>
            <returns></returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Information.GetRepuestResult(System.String,System.String@,System.String@)">
            <summary>
            获取请求返回的Json结果
            </summary>
            <param name="url">请求微信服务器路径</param>
            <param name="errorDescription">错误描述</param>
            <param name="JsonResult">json结果</param>
            <returns></returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Information.GetGroupId(System.String)">
            <summary>
            根据用户Openid获取分组
            </summary>
            <param name="OpenID"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Information.GetCustomerChatRecord(System.String,System.DateTime,System.DateTime,System.Int32,System.Int32,System.String@)">
            <summary>
            获取客服聊天记录 (错误返回null)
            </summary>
            <param name="openId">普通用户的标识，对当前公众号唯一 为空查询所有</param>
            <param name="starttime">查询开始时间</param>
            <param name="endtime">查询结束时间，每次查询不能跨日查询</param>
            <param name="pagesize">每页大小，每页最多拉取1000条</param>
            <param name="pageindex">查询第几页，从1开始</param>
            <param name="errorDescription">错误描述</param>
            <returns></returns>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.CustomerChatRecord">
            <summary>
            客服聊天记录
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.CustomerChatRecord.Worker">
            <summary>
            客服账号
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.CustomerChatRecord.Openid">
            <summary>
            用户的标识，对当前公众号唯一
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.CustomerChatRecord.Opercode">
            <summary>
            会话状态
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.CustomerChatRecord.Time">
            <summary>
            操作时间
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.CustomerChatRecord.Text">
            <summary>
            聊天记录
            </summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.CustomerChatRecord.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            初始化数据
            </summary>
            <param name="worker">客服账号</param>
            <param name="openid">用户的标识，对当前公众号唯一</param>
            <param name="opercode">会话状态</param>
            <param name="time">操作时间</param>
            <param name="text">聊天记录</param>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.CustomerChatRecord.OperateId(System.String)">
            <summary>
            操作ID(会化状态）定义
            </summary>
            <param name="opercode">操作id</param>
            <returns></returns>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.ErrorInformation">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.ErrorInformation.GetErrorCode(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="json"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.FansListInformation">
            <summary>
            粉丝列表
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.FansListInformation.Total">
            <summary>
            关注该公众账号的总用户数  
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.FansListInformation.Count">
            <summary>
            拉取的OPENID个数，最大值为10000  
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.FansListInformation.Data">
            <summary>
            
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.FansListInformation.Next_openid">
            <summary>
            拉取列表的后一个用户的OPENID 
            </summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.GroupsInfromation">
             <summary>
            GroupsInfromation 的摘要说明
             </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.GroupsInfromation.Id">
            <summary>
            分组Id
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.GroupsInfromation.Name">
            <summary>
            分组名称
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.GroupsInfromation.Count">
            <summary>
            分组人数
            </summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.GroupsInfromation.#ctor(System.String,System.String,System.String)">
            <summary>
            构造
            </summary>
            <param name="id">分组Id</param>
            <param name="name">分组名称  </param>
            <param name="count">组人数</param>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.GroupsInfromation.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.UserInformation">
             <summary>
            用户基本信息
             </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.UserInformation.Subscribe">
             <summary>
            用户是否订阅该公众号标识，值为0时，代表此用户没有关注该公众号，拉取不到其余信息。  
             </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.UserInformation.Openid">
            <summary>
            用户的标识，对当前公众号唯一  
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.UserInformation.Nickname">
             <summary>
            用户的昵称  
             </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.UserInformation.Sex">
            <summary>
             用户的性别，值为1时是男性，值为2时是女性，值为0时是未知  
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.UserInformation.City">
            <summary>
            用户所在城市 
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.UserInformation.Country">
            <summary>
            用户所在国家  
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.UserInformation.Province">
            <summary>
            用户所在省份  
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.UserInformation.Language">
             <summary>
            用户的语言，简体中文为zh_CN  
             </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.UserInformation.Headimgurl">
            <summary>
            用户头像，最后一个数值代表正方形头像大小（有0、46、64、96、132数值可选，0代表640*640正方形头像）,用户没有头像时该项为空
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.UserInformation.Subscribe_time">
            <summary>
            用户关注时间，为时间戳。如果用户曾多次关注，则取最后关注时间  
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.UserInformation.GroupId">
            <summary>
            用户所在分组Id
            </summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.UserInformation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            初始化数据
            </summary>
            <param name="subscribe">用户是否订阅该公众号标识</param>
            <param name="openid"> 用户的标识，对当前公众号唯一 </param>
            <param name="nickname">用户的昵称 </param>
            <param name="sex">用户的性别，值为1时是男性，值为2时是女性，值为0时是未知 </param>
            <param name="city">用户所在城市 </param>
            <param name="country">用户所在国家  </param>
            <param name="province">用户所在省份  </param>
            <param name="language">用户的语言，简体中文为zh_CN  </param>
            <param name="headimgurl">用户头像，</param>
            <param name="subscribe_time">用户关注时间，为时间戳。最后关注时间 </param>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.MenuManager">
            <summary>
            创建导航条菜单类
            </summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.MenuManager.Create(System.Collections.Generic.List{Shove.Gateways.Weixin.Gongzhong.MenuView},System.String@)">
            <summary>
            通过参数AppID,AppSecret,获取微信菜单token,通过token来创建微信菜单导航
            </summary>
            <param name="Menus">菜单按钮条集合</param>
            <param name="errorDescription">错误信息</param>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.MenuManager.Delete(System.String@)">
            <summary>
            删除菜单
            </summary>
            <param name="errorDescription">错误描述</param>
            <returns></returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.MenuManager.ValidMenuRule(System.Collections.Generic.List{Shove.Gateways.Weixin.Gongzhong.MenuView},System.String@)">
            <summary>
            验证菜单按钮是否符合规则
            </summary>
            <param name="Menus">菜单按钮集合</param>
            <param name="errorDescription"></param>
            <returns>合格返回 true,不合格返回false</returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.MenuManager.ToJson(System.Collections.Generic.List{Shove.Gateways.Weixin.Gongzhong.MenuView})">
            <summary>
            解析成json
            </summary>
            <param name="Menus"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.MenuManager.PostToWeixinServer(System.String,System.String,System.String@)">
            <summary>
            请求向微信服务器通讯，并取得结果
            </summary>
            <param name="url"></param>
            <param name="data"></param>
            <param name="errorDescription"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Menu">
            <summary>
            菜单基类
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Menu.Name">
            <summary>
            菜单名称
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Menu.Type">
            <summary>
            菜单类型
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Menu.Key">
            <summary>
            对应的key值
            </summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.MenuView">
            <summary>
            菜单条
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.MenuView.SubMenus">
            <summary>
            子栏目
            </summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Message">
            <summary>
            消息基类
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Message.OpenID">
            <summary>
            接收方帐号（收到的OpenID）
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Message.DeveloperId">
            <summary>
            开发者微信号
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Message.CreateTime">
            <summary>
            消息创建时间
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Message.MsgType">
            <summary>
            消息类型
            </summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Message.#ctor(System.String,System.String,System.DateTime,System.String)">
            <summary>
            构造
            </summary>
            <param name="_OpenID"></param>
            <param name="_DeveloperId"></param>
            <param name="createTime"></param>
            <param name="msgType"></param>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Message.#ctor(System.String)">
            <summary>
            构造函数,初始化回复类型
            </summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Message.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.CustomerServiceMessage">
            <summary>
            客户服务 转多客服系统
            </summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.CustomerServiceMessage.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.ImageTextMessage">
            <summary>
            图片，图文类消息
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.ImageTextMessage.ArticleCount">
            <summary>
            图文消息个数，限制为10条以内
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.ImageTextMessage.Title">
            <summary>
            图文标题
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.ImageTextMessage.Description">
            <summary>
            图文描述
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.ImageTextMessage.PicUrl">
            <summary>
            图片链接，支持JPG、PNG格式，较好的效果为大图640*320，小图80*80。
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.ImageTextMessage.Url">
            <summary>
            点击图片跳转页面
            </summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.ImageTextMessage.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            构造函数，初始化属性
            </summary>
            <param name="articleCount">图文消息个数，限制为10条以内</param>
            <param name="title">图文消息标题</param>
            <param name="description">图文描述</param>
            <param name="picUrl">图片链接</param>
            <param name="url">点击图片跳转页面</param>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.MusicMessage">
            <summary>
            音乐类消息
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.MusicMessage.Title">
            <summary>
            音乐标题
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.MusicMessage.Description">
            <summary>
            音乐描述
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.MusicMessage.MusicUrl">
            <summary>
            音乐链接
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.MusicMessage.HQMusicUrl">
            <summary>
            wifi优先链接,
            </summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.MusicMessage.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            构造函数，初始化属性
            </summary>
            <param name="title">标题</param>
            <param name="description">描述</param>
            <param name="musicUrl">音乐链接</param>
            <param name="hQMusicUrl">音乐wifi链接,可以等于""</param>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.TextMessage">
            <summary>
            文本类消息
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.TextMessage.Content">
            <summary>
            消息内容
            </summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.TextMessage.#ctor(System.String)">
            <summary>
            构造
            </summary>
            <param name="content">消息内容</param>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.VideoMessage">
            <summary>
            视频信息
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.VideoMessage.MediaId">
            <summary>
            视频消息媒体id，可以调用多媒体文件下载接口拉取数据。  
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.VideoMessage.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.VideoMessage.Description">
            <summary>
             描述
            </summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.VideoMessage.#ctor(System.String,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="_MediaId">视频消息媒体id</param>
            <param name="_Title"></param>
            <param name="_Description"></param>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.VoiceMessage">
            <summary>
            声音类信息
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.VoiceMessage.MediaId">
            <summary>
            声音消息媒体id，可以调用多媒体文件下载接口拉取数据。  
            </summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.VoiceMessage.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="_MediaId">声音消息媒体id</param>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.RepuestGeographicalPositionmMessage">
             <summary>
            上报地理位置
             </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.RepuestGeographicalPositionmMessage.Latitude">
             <summary>
            地理位置纬度  
             </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.RepuestGeographicalPositionmMessage.Longitude">
             <summary>
            地理位置经度  
             </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.RepuestGeographicalPositionmMessage.Precision">
             <summary>
            地理位置精度  
             </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.RepuestGeographicalPositionmMessage.Event">
            <summary>
            事件类型，subscribe(订阅)、unsubscribe(取消订阅)、CLICK(自定义菜单点击事件) LOCATION （上报地理位置）
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.RepuestGeographicalPositionmMessage.Location">
            <summary>
            详细地址
            </summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.RepuestGeographicalPositionmMessage.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.String)">
            <summary>
            初始化数据
            </summary>
            <param name="_Latitude">地理位置纬度 </param>
            <param name="_Longitude">地理位置经度 </param>
            <param name="_Precision">地理位置精度  </param>
            <param name="_DeveloperId">开发者微信号</param>
            <param name="_OpenID">发送方微信号openid</param>
            <param name="createTime">创建时间</param>
            <param name="msgType">消息类型</param>
            <param name="_Event">事件类型</param>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.RequestEventMessage">
            <summary>
            从微信发来的请求事件消息
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.RequestEventMessage.Event">
            <summary>
            事件类型，subscribe(订阅)、unsubscribe(取消订阅)、CLICK(自定义菜单点击事件)
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.RequestEventMessage.EventKey">
            <summary>
            事件KEY值，与自定义菜单接口中KEY值对应 
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.RequestEventMessage.Ticket">
            <summary>
            二维码_Ticket
            </summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.RequestEventMessage.#ctor(System.String,System.String,System.String,System.String,System.String,System.DateTime,System.String)">
            <summary>
            构造函数，初始化信息
            </summary>
            <param name="_event">事件类型</param>
            <param name="eventKey">事件KEY值</param>
            <param name="_Ticket">二维码_Ticket</param>
            <param name="_DeveloperId">开发者账号</param>
            <param name="_OpenID">发送方微信号openid</param>
            <param name="createTime">创建时间</param>
            <param name="msgType">消息类型</param>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.RequestImageMessage">
            <summary>
            从微信发来的图片请求消息
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.RequestImageMessage.PicUrl">
            <summary>
             图片链接 
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.RequestImageMessage.MsgId">
            <summary>
            消息id，64位整型  
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.RequestImageMessage.MediaId">
            <summary>
            图片Id
            </summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.RequestImageMessage.#ctor(System.String,System.String,System.String,System.String,System.String,System.DateTime,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="picUrl">图片链接</param>
            <param name="msgId">消息ID，64位整型</param>
            <param name="MediaId">文件Id</param> 
            <param name="_DeveloperId">开发者微信号</param>
            <param name="_OpenID">发送方微信号OpenID</param>
            <param name="createTime">创建时间</param>
            <param name="msgType">消息类型</param>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.RequestLinkMessage">
            <summary>
            从微信发来的链接消息
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.RequestLinkMessage.Title">
            <summary>
            消息标题  
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.RequestLinkMessage.Description">
            <summary>
            消息描述  
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.RequestLinkMessage.Url">
            <summary>
            消息链接  
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.RequestLinkMessage.MsgId">
            <summary>
            消息id，64位整型  
            </summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.RequestLinkMessage.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.String)">
            <summary>
            初始化实体类信息,父类信息
            </summary>
            <param name="title">标题</param>
            <param name="descriptiuon">消息描述</param>
            <param name="url">消息链接</param>
            <param name="msgId">消息ID</param>
            <param name="_DeveloperId">开发者微信号</param>
            <param name="_OpenID">发送方微信号OpenID</param>
            <param name="createTime">创建时间</param>
            <param name="msgType">消息类型</param>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.RequestLocationMessage">
            <summary>
            从微信发来的地理位置消息
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.RequestLocationMessage.Location_X">
            <summary>
            地理位置纬度
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.RequestLocationMessage.Location_Y">
            <summary>
            地理位置经度
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.RequestLocationMessage.Scale">
            <summary>
            地图缩放大小
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.RequestLocationMessage.Label">
            <summary>
            地理位置信息
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.RequestLocationMessage.MsgId">
            <summary>
            消息id，64位整型
            </summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.RequestLocationMessage.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="location_X">地理位置纬度</param>
            <param name="location_Y">地理位置经度</param>
            <param name="scale">地图缩放大小</param>
            <param name="label">地理位置信息</param>
            <param name="msgId">消息id，64位整型</param>
            <param name="_DeveloperId">开发者微信号</param>
            <param name="_OpenID">发送方微信号openid</param>
            <param name="createTime">创建时间</param>
            <param name="msgType">消息类型</param>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.RequestSendFinishMessage">
             <summary>
            RequestSendFailureMessage 的摘要说明
             </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.RequestSendFinishMessage.MsgID">
            <summary>
            群发的消息ID 
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.RequestSendFinishMessage.Status">
            <summary>
            群发的结构，为“send success”或“send fail”或“err(num)”
            但send success时，也有可能因用户拒收公众号的消息、系统错误等原因造成少量用户接收失败
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.RequestSendFinishMessage.TotalCount">
            <summary>
            group_id下粉丝数；或者openid_list中的粉丝数 
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.RequestSendFinishMessage.FilterCount">
            <summary>
            过滤（过滤是指，有些用户在微信设置不接收该公众号的消息）后，准备发送的粉丝数，原则上，FilterCount = SentCount + ErrorCount 
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.RequestSendFinishMessage.SentCount">
            <summary>
            发送成功的粉丝数
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.RequestSendFinishMessage.ErrorCount">
            <summary>
            发送失败的粉丝数 
            </summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.RequestSendFinishMessage.#ctor(System.String,System.String,System.String,System.String,System.Int64,System.Int64)">
            <summary>
            初始化
            </summary>
            <param name="_msgID">群发的消息ID</param>
            <param name="_status"> 群发的结构，为“send success”或“send fail”或“err(num)”但send success时，也有可能因用户拒收公众号的消息、系统错误等原因造成少量用户接收失败</param>
            <param name="_totalCount">group_id下粉丝数；或者openid_list中的粉丝数 </param>
            <param name="_filterCount">过滤（过滤是指，有些用户在微信设置不接收该公众号的消息）后，准备发送的粉丝数，原则上，FilterCount = SentCount + ErrorCount </param>
            <param name="_sentCount">发送成功的粉丝数</param>
            <param name="_errorCount">发送失败的粉丝数</param>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.RequestTextMessage">
             <summary>
            RequestTextMessage 的摘要说明
             </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.RequestTextMessage.Content">
            <summary>
            消息内容
            </summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.RequestTextMessage.#ctor(System.String,System.String,System.String,System.DateTime,System.String)">
             <summary>
             
             </summary>
             <param name="content">消息内容</param>
            <param name="_DeveloperId">开发者微信号</param>
             <param name="_OpenID">发送方微信号OpenID</param>
             <param name="createTime">创建时间</param>
             <param name="msgType">消息类型</param>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.RequestVideoMessage">
             <summary>
            微信用户请求的视频信息
             </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.RequestVideoMessage.MediaId">
            <summary>
            视频消息媒体id,可以调用多媒体文件下载接口拉取数据。  
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.RequestVideoMessage.ThumbMediaId">
            <summary>
            视频消息缩略图的媒体id,可以调用多媒体文件下载接口拉取数据。  
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.RequestVideoMessage.MsgId">
             <summary>
            消息id,64位整型  
             </summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.RequestVideoMessage.#ctor(System.String,System.String,System.String,System.String,System.String,System.DateTime,System.String)">
             <summary>
             构造函数
             </summary>
             <param name="_MediaId">视频媒体id</param>
             <param name="_ThumbMediaId">视频缩略图id</param>
             <param name="_MsgID">消息ID</param>
            <param name="_DeveloperId">开发者微信号</param>
             <param name="_OpenID">发送方微信号OPenid</param>
             <param name="createTime">创建时间</param>
             <param name="msgType">消息类型</param>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.RequestVoiceMessage">
             <summary>
            用户请求的声音信息
             </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.RequestVoiceMessage.MediaId">
            <summary>
            语音消息媒体id，可以调用多媒体文件下载接口拉取数据。  
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.RequestVoiceMessage.Format">
            <summary>
            语音格式，如amr，speex等  
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.RequestVoiceMessage.MsgID">
            <summary>
            消息id
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.RequestVoiceMessage.Recognition">
            <summary>
            语音识别文字结果，UTF-8编码
            </summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.RequestVoiceMessage.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.String)">
             <summary>
             构造函数
             </summary>
             <param name="_MediaId">语音媒体id</param>
             <param name="_Format">语音格式</param>
             <param name="_OpenID">用户Openid</param>
             <param name="_MsgID">消息ID</param>
            <param name="_recognition">语音识别结果</param>
             <param name="_DeveloperId">发送方微信号</param>
             <param name="createTime">创建时间</param>
             <param name="msgType">消息类型</param>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.ServiceMessage">
            <summary>
            发送客服消息基类
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.ServiceMessage.Touser">
            <summary>
            是普通用户openid  
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.ServiceMessage.Msgtype">
            <summary>
            消息类型，text  
            </summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.ServiceMessage.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="_touser">普通用户的openid</param>
            <param name="_msgtype">消息类型</param>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.ServiceMessage.ToJson">
            <summary>
            将对象转换json格式
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.ImageServiceMessage">
            <summary>
            发送图片消息类
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.ImageServiceMessage.Media_id">
            <summary>
            发送的图片的媒体ID   
            </summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.ImageServiceMessage.#ctor(System.String,System.String)">
            <summary>
            构造函数,初始化数据
            </summary>
            <param name="_media_id">发送的图片的媒体ID   </param>
            <param name="_touser">普通用户的openid</param>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.ImageServiceMessage.ToJson">
            <summary>
            将对象转换成json
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.ImageTextServiceMessage">
             <summary>
            发送图文客服消息
             </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.ImageTextServiceMessage.Title">
             <summary>
            标题 
             </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.ImageTextServiceMessage.Description">
            <summary>
            描述  
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.ImageTextServiceMessage.Url">
            <summary>
            点击后跳转的链接  
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.ImageTextServiceMessage.Picurl">
             <summary>
            图文消息的图片链接，支持JPG、PNG格式，较好的效果为大图640*320，小图80*80  
             </summary>
        </member>
        <member name="F:Shove.Gateways.Weixin.Gongzhong.ImageTextServiceMessage.ImageTextList">
            <summary>
            保存图文集合
            </summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.ImageTextServiceMessage.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            构造函数,初始化数据
            </summary>
            <param name="_title">标题</param>
            <param name="_description">描述</param>
            <param name="_url">点击后跳转的链接</param>
            <param name="_picurl">图文消息的图片链接</param>
            <param name="_touser">普通用户的openid</param>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.ImageTextServiceMessage.ToJson">
            <summary>
            将对象转换成json
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.MassImageTextMessage">
             <summary>
            MassImageTextMessage 的摘要说明
             </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.MassImageTextMessage.Thumb_media_id">
            <summary>
            图文消息缩略图的media_id，可以在基础支持-上传多媒体文件接口中获得 
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.MassImageTextMessage.Author">
            <summary>
            图文消息的作者 
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.MassImageTextMessage.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.MassImageTextMessage.Content_source_url">
            <summary>
            在图文消息页面点击“阅读原文”后的页面 
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.MassImageTextMessage.Content">
            <summary>
            图文消息页面的内容，支持HTML标签 
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.MassImageTextMessage.Digest">
            <summary>
            图文消息的描述
            </summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.MassImageTextMessage.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="_thumb_media_id"> 图文消息缩略图的media_id，可以在基础支持-上传多媒体文件接口中获得</param>
            <param name="_author">图文消息的作者 </param>
            <param name="_title">标题</param>
            <param name="_content_source_url">在图文消息页面点击“阅读原文”后的页面 </param>
            <param name="_content">图文消息页面的内容，支持HTML标签 </param>
            <param name="_digest">图文消息的描述</param>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.MassImageTextMessage.Tojson">
            <summary>
            实体集合转json
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.MusicServiceMessage">
             <summary>
            SendMusicMessage 的摘要说明
             </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.MusicServiceMessage.Title">
             <summary>
            音乐标题  
             </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.MusicServiceMessage.Description">
             <summary>
            音乐描述
             </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.MusicServiceMessage.Musicurl">
            <summary>
            音乐链接
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.MusicServiceMessage.Hqmusicurl">
             <summary>
            高品质音乐链接，wifi环境优先使用该链接播放音乐  
             </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.MusicServiceMessage.Thumb_media_id">
             <summary>
            视频缩略图的媒体ID  
             </summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.MusicServiceMessage.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            构造函数,初始化函数
            </summary>
            <param name="_title">音乐标题</param>
            <param name="_description">音乐描述</param>
            <param name="_musicurl">音乐链接</param>
            <param name="_hqmusicurl">高品质音乐链接</param>
            <param name="_thumb_media_id">视频缩略图的媒体ID</param>
            <param name="_touser">普通用户的openid</param>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.MusicServiceMessage.ToJson">
            <summary>
            将对象转换成json
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.VoiceServiceMessage">
            <summary>
            发送声音消息,
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.VoiceServiceMessage.Media_id">
            <summary>
            发送的语音的媒体ID  
            </summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.VoiceServiceMessage.#ctor(System.String,System.String)">
            <summary>
            构造函数,初始化数据
            </summary>
            <param name="_Media_id">发送的语音的媒体ID</param>
            <param name="_touser">普通用户的openid</param>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.VoiceServiceMessage.ToJson">
            <summary>
            转json格式
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.TextServiceMessage">
            <summary>
            发送文本客服消息
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.TextServiceMessage.Content">
            <summary>
             文本消息内容 
            </summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.TextServiceMessage.#ctor(System.String,System.String)">
            <summary>
            构造函数,初始化数据
            </summary>
            <param name="_content">文本消息内容</param>
            <param name="_touser">普通用户的openid</param>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.TextServiceMessage.ToJson">
            <summary>
            将对象转换成json
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.VideoServiceMessage">
            <summary>
            发送视频消息
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.VideoServiceMessage.Media_id">
            <summary>
            发送的视频的媒体ID  
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.VideoServiceMessage.Thumb_media_id">
            <summary>
            视频缩略图的媒体ID 
            </summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.VideoServiceMessage.#ctor(System.String,System.String,System.String)">
            <summary>
            构造函数,初始化数据
            </summary>
            <param name="_media_id">发送的视频的媒体ID</param>
            <param name="_thumb_media_id">视频缩略图的媒体ID </param>
            <param name="_touser">普通用户的openid</param>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.VideoServiceMessage.ToJson">
            <summary>
            转json格式
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.UserMessage">
            <summary>
            发送微信信息类
            </summary>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.UserMessage.DelegateGetData">
            <summary>
            声明委托，回调取数据
            </summary>
            <param name="message">消息内容</param>
            <param name="MsgType">消息类型</param>
            <param name="errorDescription">错误描述</param>
            <returns>返回消息集合</returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.UserMessage.Handle(System.String,Shove.Gateways.Weixin.Gongzhong.UserMessage.DelegateGetData,System.String@)">
            <summary>
            发送微信信息,回复用户
            </summary>
            <param name="toKen">微信账号toKen</param>
            <param name="GetData">回调函数,取回\回复给用户的消息内容</param>
            <param name="errorDescription"></param>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.UserMessage.ValidSignature(System.String,System.String@)">
            <summary>
             通过微信服务器在 URL 后传递的 4 个参数,toKen,_signaTure,_timesTamp 进行排序加密后来判断是否是从微信服务器请求的。
            </summary>
            <param name="toKen">公众用户的 ToKen</param>
            <param name="errorDescription"></param>
            <returns>验证请求的信息是否来自微信服务器</returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.UserMessage.SendMessage(Shove.Gateways.Weixin.Gongzhong.ServiceMessage,System.String@)">
            <summary>
            发送客服信息，返回 0:发送成功,-1:发送失败,-2:媒体文件过期
            </summary>
            <param name="message">消息对象</param>
            <param name="errorDescription">错误消息描述</param>
            <returns>0:发送成功,-1:发送失败,-2:媒体文件过期</returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.UserMessage.RequestAndValidOpenID(System.String,System.String,System.String@)">
            <summary>
            请求向微信服务器通讯发送可客服消息，验证是否成功
            </summary>
            <param name="url">请求微信服务器的URL</param>
            <param name="data">请求的json数据</param>
            <param name="errorDescription">错误描述</param>
            <returns>0:发送成功,-1:发送失败,-2:媒体文件过期</returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.UserMessage.SendGroupMessage(System.String,System.String,System.String,System.String@,System.String@)">
            <summary>
            根据分组进行群发 
            </summary>
            <param name="group_id">用户分组ID</param>
            <param name="messagetype">群发的消息类型(目前只支持 1、mpnews(图文) 2、voice(语音) 3、image(图片)  4、text(文本))</param>
            <param name="content">群发的消息的内容(如果发送消息是媒体类型,此参数填写媒体media_id，如果消息为文本类型,直接填写文本消息内容就可)</param>
            <param name="msg_id">发送成功返回本次的群发的消息ID(可以通过消息ID删除群发信息)</param>
            <param name="errorDescription">错误描述</param>
            <returns>成功返回：true，否则返回true</returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.UserMessage.SendGroupVideoMessage(System.String,System.String,System.Int32,System.String,System.String,System.String@,System.String@)">
            <summary>
            群发视频信息(根据分组和Openid进行发送)
            </summary>
            <param name="to_user"></param>
            <param name="Video_media_id"></param>
            <param name="type"></param>
            <param name="VideoTitle"></param>
            <param name="description"></param>
            <param name="msg_id"></param>
            <param name="errorDescription"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.UserMessage.SendFansListMessage(System.String,System.String,System.String,System.String@,System.String@)">
            <summary>
            根据Openid进行群发 
            </summary>
            <param name="OpenidList">用户openid集合(用 "," 隔开)</param>
            <param name="messagetype">群发的消息类型(目前只支持 1、mpnews(图文) 2、voice(语音) 3、image(图片)  4、text(文本)</param>
            <param name="content">群发的消息的内容(如果发送信息是媒体类型,此参数填写媒体media_id，如果消息类型为文本类型,直接填写文本内容就可)</param>
            <param name="msg_id">发送成功返回本次的群发的消息ID(可以通过消息ID删除群发信息)</param>
            <param name="errorDescription">错误描述</param>
            <returns>成功返回：true，否则返回true</returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.UserMessage.DeleteMassSendMessage(System.String,System.String@)">
            <summary>
            删除群发消息(删除消息只是将消息的图文详情页失效，已经收到的用户，还是能在其本地看到消息卡片)
            </summary>
            <param name="msg_id">群发的消息ID</param>
            <param name="errorDescription">描述</param>
            <returns>返回成功：true 失败：false</returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.UserMessage.RequestSend(System.String,System.String,System.String@)">
            <summary>
            发送
            </summary>
            <param name="_url"></param>
            <param name="data"></param>
            <param name="errorDescription"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.UserMessage.WebPageAuthorization(System.String,System.String,System.String@,System.String@)">
            <summary>
            用户页面授权
            </summary>
            <param name="appid">第三方用户唯一凭证APPID</param>
            <param name="secret">第三方用户唯一凭证密钥，既appsecret</param>
            <param name="state">网页授权,得到开发者指定在菜单中的参数(似于菜单中Key)</param>
            <param name="errorDescription">错误描述</param>
            <returns>返回微信用户Openid</returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.UserMessage.CheckValidationResult(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="certificate"></param>
            <param name="chain"></param>
            <param name="errors"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.Gateways.Weixin.Gongzhong.Utility">
            <summary>
            通用类
            </summary>
        </member>
        <member name="F:Shove.Gateways.Weixin.Gongzhong.Utility.access_token">
            <summary>
            令牌
            </summary>
        </member>
        <member name="P:Shove.Gateways.Weixin.Gongzhong.Utility.Access_token">
            <summary>
            通过参数AppID,AppSecret,获取到的微信菜单token
            </summary>
        </member>
        <member name="F:Shove.Gateways.Weixin.Gongzhong.Utility.AppID">
            <summary>
            凭证
            </summary>
        </member>
        <member name="F:Shove.Gateways.Weixin.Gongzhong.Utility.AppSecret">
            <summary>
            密钥
            </summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Utility.InitializeAccessToken(System.String,System.String)">
            <summary>
            初始化AccessToken
            </summary>
            <param name="_AppID"></param>
            <param name="_AppSecret"></param>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Utility.ResetAccessToken(System.String,System.String)">
            <summary>
            获取access_token(同时验证APPID)
            </summary>
            <param name="_AppID">第三方用户唯一凭证</param>
            <param name="_AppSecret">第三方用户唯一凭证密钥</param>
            <returns>返回菜单ACCESS_TOKEN</returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Utility.UploadFile(System.String,System.String,System.String@,System.String@,System.String@)">
            <summary>
            上传文件
            </summary>
            <param name="filePath">要上传的本地文件路径</param>
            <param name="type">媒体文件类型，分别有图片（image）、语音（voice）、视频（video）和缩略图（thumb)</param>
            <param name="media_id">上传成功后,返回媒体文件ID</param>
            <param name="created_at">媒体文件上传的时间 文件上传三天系统会自动删除</param>
            <param name="errorDescription">错误描述</param>
            <returns></returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Utility.DownloadFile(System.String,System.String@,System.String@)">
            <summary>
            下载媒体文件
            </summary>
            <param name="media_id">文件的ID</param>
            <param name="saveFilePath">保存文件的地址 下载成功返回文件的地址</param>
            <param name="errorDescription">错误描述</param>
            <returns></returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Utility.DownloadTwo_Dimension_Code(System.String,System.String@,System.String@)">
            <summary>
            下载二维码图片
            </summary>
            <param name="ticket">创建二维码时的ticket</param>
            <param name="saveFilePath">文件保存的路径 下载成功返回的值获取</param>
            <param name="errorDescription"></param>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Utility.AnalysisJson(System.String,System.String)">
            <summary>
            获取json中的Key获取value值
            </summary>
            <param name="json">json结构</param>
            <param name="Key">json结构中的Key</param>
            <returns>value</returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Utility.FromUnixTime(System.String)">
            <summary>
            Unix时间戳转成时间 转换失败，返回系统时间
            </summary>
            <param name="timeStamp">要转换的时间戳 返回时间</param>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Utility.UnixTimeStamp(System.DateTime)">
            <summary>
            时间转成Unix时间戳 转换失败返回系统时间戳
            </summary>
            <param name="dateTime">要转换的时间 返回时间戳</param>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Utility.GetDetailedAddress_API(System.String,System.String)">
            <summary>
            调用百度地图API,通过请求的经度纬度获取所在地址
            </summary>
            <param name="latitude">纬度</param>
            <param name="longitude">经度</param>
            <returns></returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Utility.UploadMassImageTextMessage(System.Collections.Generic.List{Shove.Gateways.Weixin.Gongzhong.MassImageTextMessage},System.String@,System.String@)">
            <summary>
            上传群图文素材(此方法上传素材只能用作于群发)
            </summary>
            <param name="massImageTextMessage">上传素材的集合(支持1到10条图文信息)</param>
            <param name="media_id">上传素材后获取的唯一标识(用于群发接口中使用)</param>
            <param name="errorDescription"></param>
            <returns>成功: true | 失败：false</returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Utility.UploadPermanenceFileMaterial(System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)">
            <summary>上传永久文件类型素材
            </summary>
            <param name="filePath">文件路径</param>
            <param name="type">文件类型</param>
            <param name="videoTitle">视频标题（不是视频填空即可）</param>
            <param name="videoIntroduction">视频简介（不是视频填空即可）</param>
            <param name="media_id">返回媒体文件ID</param>
            <param name="url">媒体文件路径（仅新增图片素材时会返回该字段）</param>
            <param name="errorDescription">返回消息</param>
            <returns></returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Utility.UploadPermanenceImageTextMaterial(System.Collections.Generic.List{Shove.Gateways.Weixin.Gongzhong.MassImageTextMessage},System.String@,System.String@)">
            <summary>上传永久图文素材
            </summary>
            <param name="massImageTextMessage">上传素材的集合(支持1到10条图文信息)</param>
            <param name="media_id">上传素材后获取的唯一标识(用于群发接口中使用)</param>
            <param name="errorDescription">错误描述</param>
            <returns>成功: true | 失败：false</returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Utility.UpdatePermanenceImageTextMaterial(System.Collections.Generic.List{Shove.Gateways.Weixin.Gongzhong.MassImageTextMessage},System.String,System.String@)">
            <summary>修改永久图文素材
            </summary>
            <param name="massImageTextMessage">图文信息集合</param>
            <param name="media_id">上传素材后获取的唯一标识(用于群发接口中使用)</param>
            <param name="errorDescription">错误描述</param>
            <returns>成功: true | 失败：false</returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Gongzhong.Utility.DeletePermanenceMaterial(System.String,System.String@)">
            <summary>删除永久素材
            </summary>
            <param name="media_id">素材标识id</param>
            <param name="errorDescription">返回错误信息</param>
            <returns></returns>
        </member>
        <member name="T:Shove.Gateways.Weixin.Shanghu.Pay">
            <summary>
            Summary description for Pay
            Wechart 支付操作类
            </summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Shanghu.Pay.Payment(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String@)">
            <summary>
            生成一笔支付订单
            </summary>
            <param name="outTradeNo">商户系统内部的订单号,32个字符内、可包含字母</param>
            <param name="totalFeeCent">
                订单总金额，只能为整数(***注意：金额单位为 "分")
                <para>*注意：金额单位为 "分"</para>
            </param>
            <param name="spbillCreateIp">APP和网页支付提交用户端ip，Native支付填调用微信支付API的机器IP</param>
            <param name="body">商品或支付单简要描述</param>
            <param name="attach">在查询API和支付通知中原样返回，该字段主要用于商户携带订单的自定义数据</param>
            <param name="notifyUrl">通知地址 (接收微信支付异步通知回调地址)</param>
            <param name="payQrCodeImagePath">支付二维码图片绝对地址(如：d:\\wwwroot\\site\\images\\qrcode\\order.png)
                <para>默认尺寸 430*430 (wx.qq.com)</para>
            </param>
            <param name="errorDescription">错误描述</param>
            <returns></returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Shanghu.Pay.Payment(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String@,System.String@)">
            <summary>
            生成一笔支付订单
            </summary>
            <param name="outTradeNo">商户系统内部的订单号,32个字符内、可包含字母</param>
            <param name="totalFeeCent">
                订单总金额，只能为整数(***注意：金额单位为 "分")
                <para>*注意：金额单位为 "分"</para>
            </param>
            <param name="spbillCreateIp">APP和网页支付提交用户端ip，Native支付填调用微信支付API的机器IP</param>
            <param name="body">商品或支付单简要描述</param>
            <param name="attach">在查询API和支付通知中原样返回，该字段主要用于商户携带订单的自定义数据</param>
            <param name="notifyUrl">通知地址 (接收微信支付异步通知回调地址)</param>
            <param name="qrCodeUrl">支付二维码链接地址</param>
            <param name="errorDescription">错误描述</param>
            <returns></returns>
        </member>
        <member name="T:Shove.Gateways.Weixin.Shanghu.Pay.DelegateHandleBusiness">
            <summary>
            委托回调函数
            </summary>
            <param name="returnXml">微信接口通知的XML信息</param>
            <returns></returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Shanghu.Pay.Handle(Shove.Gateways.Weixin.Shanghu.Pay.DelegateHandleBusiness,System.String@)">
            <summary>
            微信接口通知处理函数
            </summary>
            <param name="HandleBusiness">委托函数</param>
            <param name="errorDescription">返回的错误描述</param>
            <returns></returns>
        </member>
        <member name="T:Shove.Gateways.Weixin.Shanghu.Utility">
            <summary>
            通用、配置类
            </summary>
        </member>
        <member name="F:Shove.Gateways.Weixin.Shanghu.Utility.AppID">
            <summary>
            凭证 (微信分配的公众账号 ID)
            </summary>
        </member>
        <member name="F:Shove.Gateways.Weixin.Shanghu.Utility.MchID">
            <summary>
            商户号 (微信支付分配的商户号)
            </summary>
        </member>
        <member name="F:Shove.Gateways.Weixin.Shanghu.Utility.PayKey">
            <summary>
            商户支付密钥 Key
            <para>
                * 注意：是商户平台支付独立使用的 Key
            </para>
            </summary>
        </member>
        <member name="F:Shove.Gateways.Weixin.Shanghu.Utility.WeChatPayUrl">
            <summary>
            微信统一下单支付 Url
            </summary>
        </member>
        <member name="F:Shove.Gateways.Weixin.Shanghu.Utility.Encoding">
            <summary>
            签名编码集
            </summary>
        </member>
        <member name="M:Shove.Gateways.Weixin.Shanghu.Utility.InitializePayConfig(System.String,System.String,System.String)">
            <summary>
            初始化 Pay Agragment
            </summary>
            <param name="_AppID">凭证 (微信分配的公众账号 ID)</param>
            <param name="_MchID">商户号 (微信支付分配的商户号)</param>
            <param name="_PayKey">
                密钥 Key
                <para>* 注意：是商户平台支付独立使用的 Key</para
            ></param>
        </member>
        <member name="M:Shove.Gateways.Weixin.Shanghu.Utility.Post(System.String,System.String,System.String@,System.String@)">
            <summary>
            带 XML 参数的请求
            </summary>
            <param name="url">请求服务器路径</param>
            <param name="data">json数据</param>
            <param name="errorDescription">错误描述</param>
            <param name="xmlResult">XML 结果</param>
            <returns></returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Shanghu.Utility.CreateSign(System.Collections.Generic.SortedDictionary{System.String,System.String},System.String)">
            <summary>
            构建签名
            </summary>
            <param name="sParaTemp"></param>
            <param name="_key"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Shanghu.Utility.FilterPara(System.Collections.Generic.SortedDictionary{System.String,System.String})">
            <summary>
            除去数组中的空值和签名参数并以字母a到z的顺序排序
            </summary>
            <param name="dicArrayPre">过滤前的参数组</param>
            <returns>过滤后的参数组</returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Shanghu.Utility.BuildMysign(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,System.String)">
            <summary>
            生成签名结果
            </summary>
            <param name="dicArray">要签名的数组</param>
            <param name="key">安全校验码</param>
            <param name="sign_type">签名类型</param>
            <param name="_input_charset">编码格式</param>
            <returns>签名结果字符串</returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Shanghu.Utility.CreateLinkString(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            把数组所有元素，按照“参数=参数值”的模式用“＆”字符拼接成字符串
            </summary>
            <param name="dicArray">需要拼接的数组</param>
            <returns>拼接完成以后的字符串</returns>
        </member>
        <member name="M:Shove.Gateways.Weixin.Shanghu.Utility.Sign(System.String,System.String,System.String)">
            <summary>
            签名字符串
            </summary>
            <param name="prestr">需要签名的字符串</param>
            <param name="sign_type">签名类型</param>
            <param name="_input_charset">编码格式</param>
            <returns>签名结果</returns>
        </member>
        <member name="T:Shove.InformationCode.QrCode">
            <summary>
            基于 com.google.zxing 的二维码封装
            </summary>
        </member>
        <member name="M:Shove.InformationCode.QrCode.CreateCode(System.String,com.google.zxing.BarcodeFormat,System.Int32,System.Int32,System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            生成二维码，保存为图片文件
            </summary>
            <param name="input">输入的需要编码的信息字符串</param>
            <param name="fromat">二维码格式</param>
            <param name="CanvasWidth">画布宽度</param>
            <param name="CanvasHeight">画布高度</param>
            <param name="OutputFileName">保存图片的文件名</param>
            <param name="imageFormat">图像格式</param>
        </member>
        <member name="M:Shove.InformationCode.QrCode.CreateCode(System.String,com.google.zxing.BarcodeFormat,System.Int32,System.Int32,System.String,System.Drawing.Imaging.ImageFormat,System.String)">
            <summary>
            生成二维码，保存为图片文件
            </summary>
            <param name="input">输入的需要编码的信息字符串</param>
            <param name="fromat">二维码格式</param>
            <param name="CanvasWidth">画布宽度</param>
            <param name="CanvasHeight">画布高度</param>
            <param name="OutputFileName">保存图片的文件名</param>
            <param name="imageFormat">图像格式</param>
            <param name="logoImageFileName">中间嵌入的 Logo 图片</param>
        </member>
        <member name="M:Shove.InformationCode.QrCode.CreateCode(System.String,com.google.zxing.BarcodeFormat,System.Int32,System.Int32,System.Drawing.Imaging.ImageFormat)">
            <summary>
            生成二维码，返回位图
            </summary>
            <param name="input">输入的需要编码的信息字符串</param>
            <param name="fromat">二维码格式</param>
            <param name="CanvasWidth">画布宽度</param>
            <param name="CanvasHeight">画布高度</param>
            <param name="imageFormat">图像格式</param>
            <returns></returns>
        </member>
        <member name="M:Shove.InformationCode.QrCode.CreateCode(System.String,com.google.zxing.BarcodeFormat,System.Int32,System.Int32,System.Drawing.Imaging.ImageFormat,System.String)">
            <summary>
            生成二维码，返回位图
            </summary>
            <param name="input">输入的需要编码的信息字符串</param>
            <param name="fromat">二维码格式</param>
            <param name="CanvasWidth">画布宽度</param>
            <param name="CanvasHeight">画布高度</param>
            <param name="imageFormat">图像格式</param>
            <param name="logoImageFileName">中间嵌入的 Logo 图片</param>
            <returns></returns>
        </member>
        <member name="M:Shove.InformationCode.QrCode.ReadCode(System.String)">
            <summary>
            从二维码图片读取二维码信息
            </summary>
            <param name="FileName"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.InformationCode.QrCode.ReadCode(System.Drawing.Image)">
            <summary>
            从二维码图片读取二维码信息
            </summary>
            <param name="img"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.InformationCode.QrCode.ReadCode(System.Drawing.Bitmap)">
            <summary>
            从二维码图片读取二维码信息
            </summary>
            <param name="bmap"></param>
            <returns></returns>
        </member>
        <member name="T:Shove._IO.Log">
             <summary>
            Log 的摘要说明
             </summary>
        </member>
        <member name="M:Shove._IO.Log.#ctor(System.String)">
            <summary>
            构造 Log
            </summary>
            <param name="pathname">相对于网站、应用程序根目录 App_Log 目录的相对路径，如： System， 就相当于 ~/App_Log/System/、 应用程序根\App_Log\System\</param>
        </member>
        <member name="M:Shove._IO.Log.Write(System.String)">
            <summary>
            Write
            </summary>
            <param name="Message"></param>
        </member>
        <member name="T:Shove._IO.PrintDirect">
            <summary>
            Printer 是摘要说明
            </summary>
        </member>
        <member name="T:Shove._IO.PrintDirect.DOCINFO">
            <summary>
            DOCINFO
            </summary>
        </member>
        <member name="M:Shove._IO.PrintDirect.Print(System.String,System.String,System.String,System.Int32@,System.String@)">
            <summary>
            打印输出到打印机
            </summary>
            <param name="PrinterName">打印机的名称</param>
            <param name="DocumentName"></param>
            <param name="Content">要打印的内容，这里输入字符串，含打印机的控制码</param>
            <param name="pcWritten">实际打印输出的长度</param>
            <param name="ErrorDescription"></param>
            <returns></returns>
        </member>
        <member name="T:Shove._IO.PrintDirect2">
            <summary>
            PrintDirect2 的摘要说明
            </summary>
        </member>
        <member name="M:Shove._IO.PrintDirect2.Print(System.String,System.String,System.String@)">
            <summary>
            打印输出到打印机
            </summary>
            <param name="PortName">打印机端口名称</param>
            <param name="Content">要打印的内容，这里输入字符串，含打印机的控制码</param>
            <param name="ErrorDescription"></param>
            <returns></returns>
        </member>
        <member name="T:Shove._IO.Printer">
            <summary>
            Printer 的摘要说明
            </summary>
        </member>
        <member name="T:Shove._IO.Printer.PrinterEnumFlags">
            <summary>
            打印机状态
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PrinterEnumFlags.PRINTER_ENUM_DEFAULT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PrinterEnumFlags.PRINTER_ENUM_LOCAL">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PrinterEnumFlags.PRINTER_ENUM_CONNECTIONS">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PrinterEnumFlags.PRINTER_ENUM_FAVORITE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PrinterEnumFlags.PRINTER_ENUM_NAME">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PrinterEnumFlags.PRINTER_ENUM_REMOTE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PrinterEnumFlags.PRINTER_ENUM_SHARED">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PrinterEnumFlags.PRINTER_ENUM_NETWORK">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PrinterEnumFlags.PRINTER_ENUM_EXPAND">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PrinterEnumFlags.PRINTER_ENUM_CONTAINER">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PrinterEnumFlags.PRINTER_ENUM_ICONMASK">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PrinterEnumFlags.PRINTER_ENUM_ICON1">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PrinterEnumFlags.PRINTER_ENUM_ICON2">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PrinterEnumFlags.PRINTER_ENUM_ICON3">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PrinterEnumFlags.PRINTER_ENUM_ICON4">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PrinterEnumFlags.PRINTER_ENUM_ICON5">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PrinterEnumFlags.PRINTER_ENUM_ICON6">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PrinterEnumFlags.PRINTER_ENUM_ICON7">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PrinterEnumFlags.PRINTER_ENUM_ICON8">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PrinterEnumFlags.PRINTER_ENUM_HIDE">
            <summary>
            
            </summary>
        </member>
        <member name="T:Shove._IO.Printer.PRINTER_INFO_2">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PRINTER_INFO_2.pServerName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PRINTER_INFO_2.pPrinterName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PRINTER_INFO_2.pShareName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PRINTER_INFO_2.pPortName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PRINTER_INFO_2.pDriverName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PRINTER_INFO_2.pComment">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PRINTER_INFO_2.pLocation">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PRINTER_INFO_2.pDevMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PRINTER_INFO_2.pSepFile">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PRINTER_INFO_2.pPrintProcessor">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PRINTER_INFO_2.pDatatype">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PRINTER_INFO_2.pParameters">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PRINTER_INFO_2.pSecurityDescriptor">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PRINTER_INFO_2.Attributes">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PRINTER_INFO_2.Priority">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PRINTER_INFO_2.DefaultPriority">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PRINTER_INFO_2.StartTime">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PRINTER_INFO_2.UntilTime">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PRINTER_INFO_2.Status">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PRINTER_INFO_2.cJobs">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._IO.Printer.PRINTER_INFO_2.AveragePPM">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove._IO.Printer.GetPrinter">
            <summary>
            获取打印机列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove._IO.Printer.EnumPrinters(Shove._IO.Printer.PrinterEnumFlags)">
            <summary>
            遍历打印机
            </summary>
            <param name="Flags"></param>
            <returns></returns>
        </member>
        <member name="T:Shove._IO.Zip">
            <summary>
            Zip 压缩、解压，对流、文件进行 Zip 处理的各种方法
            </summary>
        </member>
        <member name="M:Shove._IO.Zip.Compress(System.IO.Stream)">
            <summary>
            压缩为 Zip 流
            </summary>
            <param name="Source"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._IO.Zip.Decompress(System.IO.Stream)">
            <summary>
            将 Zip 压缩流解压
            </summary>
            <param name="Source"></param>
            <returns></returns>
        </member>
        <member name="T:Shove._IO.File">
            <summary>
            File 的摘要说明。
            </summary>
        </member>
        <member name="M:Shove._IO.File.GetFileList(System.String)">
            <summary>
            取服务器上 Path 目录下的文件列表
            </summary>
            <param name="Path">服务器上的绝对路径，调用前用 Server.MapPath 取到完整路径再传入</param>
            <returns></returns>
        </member>
        <member name="M:Shove._IO.File.GetFileListWithSubDir(System.String)">
            <summary>
            取服务器上 StartDirName 目录下的文件列表，包括所有子目录下的文件
            </summary>
            <param name="StartDirName">服务器上的绝对路径，调用前用 Server.MapPath 取到完整路径再传入</param>
            <returns></returns>
        </member>
        <member name="M:Shove._IO.File.GetFile(System.String,System.Collections.ArrayList)">
            <summary>
            GetFileListWithSubDir 方法的递归子方法
            </summary>
            <param name="Dir">目录</param>
            <param name="al">存放文件的集合</param>
        </member>
        <member name="M:Shove._IO.File.GetFileList(System.Web.UI.Page,System.String)">
            <summary>
            取服务器上 Path 目录下的文件列表
            </summary>
            <param name="page"></param>
            <param name="Path">服务器上的相对路径，如：../Images/</param>
            <returns></returns>
        </member>
        <member name="M:Shove._IO.File.GetFileListWithSubDir(System.Web.UI.Page,System.String)">
            <summary>
            取服务器上 Path 目录下的文件列表，包括所有子目录下的文件
            </summary>
            <param name="page"></param>
            <param name="Path">服务器上的相对路径，如：../Images/</param>
            <returns></returns>
        </member>
        <member name="M:Shove._IO.File.UploadFile(System.Web.UI.Page,System.Web.UI.HtmlControls.HtmlInputFile,System.String,System.String@,System.Boolean,System.String)">
            <summary>
            上传文件
            </summary>
            <param name="page">输入this.Page即可</param>
            <param name="file">file 控件名称</param>
            <param name="TargetDirectory">上传服务器上哪个目录(相对目录，如：../Images/)</param>
            <param name="ShortFileName">返回一个只有纯文件名的字符串</param>
            <param name="OverwriteExistFile">是否覆盖同名文件</param>
            <param name="LimitFileTypeList">限制的文件类型列表，如：image, text</param>
            <returns>返回：	-1 解析文件错误; -2 OverwriteExistFile = false, 不覆盖已有文件时，文件已经存在; -3 上传错误; 0 OK</returns>
        </member>
        <member name="M:Shove._IO.File.UploadFile(System.Web.UI.Page,System.Web.UI.HtmlControls.HtmlInputFile,System.String,System.String@,System.String)">
            <summary>
            上传文件，返回新 保存的 NewFileName 文件名
            </summary>
            <param name="page">输入this.Page即可</param>
            <param name="file">file 控件名称</param>
            <param name="TargetDirectory">上传服务器上哪个目录(相对目录，如：../Images/)</param>
            <param name="NewFileName">返回服务器目录下生成的新文件名称</param>
            <param name="LimitFileTypeList">限制的文件类型列表，如：image, text</param>
            <returns>返回：	-1 没有选择文件  -3 上传错误; 0 OK</returns>
        </member>
        <member name="M:Shove._IO.File.GetNewFileName(System.Web.UI.Page,System.String,System.String,System.String)">
            <summary>
            获取一个新的不存在的文件名
            </summary>
            <param name="page">当前页面</param>
            <param name="path">创建路径(虚拟路径)</param>
            <param name="Ext">扩展名</param>
            <param name="Flag">文件名前缀</param>
            <returns>返回文件名(并不创建文件)</returns>
        </member>
        <member name="M:Shove._IO.File.UploadFile(System.Web.UI.Page,System.Web.UI.HtmlControls.HtmlInputFile,System.String,System.String,System.Boolean,System.String)">
            <summary>
            上传文件，按指定的文件名 FileName 保存
            </summary>
            <param name="page">输入this.Page即可</param>
            <param name="file">file 控件名称</param>
            <param name="TargetDirectory">上传服务器上哪个目录(相对目录，如：../Images/)</param>
            <param name="FileName">指定的保存为...文件名</param>
            <param name="OverwriteExistFile">是否覆盖同名文件</param>
            <param name="LimitFileTypeList">限制的文件类型列表，如：image, text</param>
            <returns>返回：	-1 没有选择文件 -2 OverwriteExistFile = false, 不覆盖已有文件时，文件已经存在; -3 上传错误; 0 OK</returns>
        </member>
        <member name="M:Shove._IO.File.ValidFileType(System.Web.UI.HtmlControls.HtmlInputFile,System.String)">
            <summary>
            校验上传的文件类型
            </summary>
            <param name="file"></param>
            <param name="LimitFileTypeList"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._IO.File.Download(System.String[])">
            <summary>
            下载文件
            </summary>
            <param name="FileNames">一个或多个文件名，一个文件名将直接下载，多个文件名将压缩下载</param>
        </member>
        <member name="M:Shove._IO.File.Download(System.Web.HttpContext,System.String[])">
            <summary>
            下载文件
            </summary>
            <param name="context"></param>
            <param name="FileNames">一个或多个文件名，一个文件名将直接下载，多个文件名将压缩下载</param>
        </member>
        <member name="M:Shove._IO.File.ReadFile(System.String)">
            <summary>
            读文件
            </summary>
            <param name="FileName">文件名</param>
            <returns>文件内容字符串</returns>
        </member>
        <member name="M:Shove._IO.File.WriteFile(System.String,System.String)">
            <summary>
            写文件，如果文件不存在，创建该文件，否则改写该文件
            </summary>
            <param name="FileName">文件名</param>
            <param name="Content">写入的内容</param>
            <returns>true 为成功</returns>
        </member>
        <member name="M:Shove._IO.File.WriteFile(System.String,System.String,System.Text.Encoding)">
            <summary>
            写文件，如果文件不存在，创建该文件，否则改写该文件(根据制定的字符编码)
            </summary>
            <param name="FileName">文件名</param>
            <param name="Content">写入的内容</param>
            <param name="encoding">字符编码</param>
            <returns>true 为成功</returns>
        </member>
        <member name="M:Shove._IO.File.CopyFile(System.String,System.String,System.Boolean)">
            <summary>
            Copy File, 自动创建目标文件夹
            </summary>
            <param name="src"></param>
            <param name="dest"></param>
            <param name="overwrite"></param>
        </member>
        <member name="M:Shove._IO.File.CopyDirectory(System.String,System.String)">
            <summary>
            整个目录一起复制(递归实现)
            </summary>
            <param name="src">源目录</param>
            <param name="dest">目标目录</param>
        </member>
        <member name="M:Shove._IO.File.GetDirectorySize(System.String)">
            <summary>
            获取指定文件夹占用的空间大小
            </summary>
            <param name="DirectoryName"></param>
        </member>
        <member name="M:Shove._IO.File.Compress(System.String)">
            <summary>
            压缩一个文件，目标文件名自动在源文件后面加上 .zip
            </summary>
            <param name="FileName">源文件名</param>
            <returns>true 为成功</returns>
        </member>
        <member name="M:Shove._IO.File.Compress(System.String,System.String)">
            <summary>
            压缩一个文件
            </summary>
            <param name="FileName">源文件名</param>
            <param name="ZipFileName">目标文件名(.zip)</param>
            <returns>true 为成功</returns>
        </member>
        <member name="M:Shove._IO.File.Decompress(System.String)">
            <summary>
            解压缩一个文件，目标文件名自动在源文件基础上去掉后面的 .zip
            </summary>
            <param name="ZipFileName">源文件名</param>
            <returns>true 为成功</returns>
        </member>
        <member name="M:Shove._IO.File.Decompress(System.String,System.String)">
            <summary>
            解压缩一个文件
            </summary>
            <param name="ZipFileName">源文件名(.zip)</param>
            <param name="FileName">目标文件名</param>
            <returns>true 为成功</returns>
        </member>
        <member name="M:Shove._IO.File.ZipMultiFiles(System.Int32,System.Boolean,System.String[])">
            <summary>
            压缩多个文件
            </summary>
            <param name="CompressLevel">压缩级别，0-9，9是最高压缩率</param>
            <param name="isWithoutFilePathInfo">文件是否不需要包含进入详细的路径信息，true 则仅仅包含文件名本身信息</param>
            <param name="FileNames">多个文件名</param>
            <returns>返回二进制流 byte[] 类型，是一个完整的 zip 文件流，可以直接写入文件</returns>
        </member>
        <member name="T:Shove._IO.File.CompressDirectory">
            <summary>
            文件(夹)压缩、解压缩
            </summary>
        </member>
        <member name="M:Shove._IO.File.CompressDirectory.CompressFile(System.Collections.Generic.List{System.IO.FileInfo},System.String,System.Int32)">
            <summary>  
            压缩文件  
            </summary>  
            <param name="FileNames">要打包的文件列表</param>  
            <param name="GzipFileName">目标文件名</param>  
            <param name="CompressionLevel">压缩品质级别（0~9）</param>  
        </member>
        <member name="M:Shove._IO.File.CompressDirectory.Compress(System.String,System.String,System.Int32,System.Boolean)">
            <summary>  
            压缩文件夹
            </summary>
            <param name="DirectoryName">要打包的文件夹</param>
            <param name="GzipFileName">目标文件名</param>
            <param name="CompressionLevel">压缩品质级别（0~9）</param>
            <param name="IsWithDirectory">是否将 DirectoryName 作为相对根目录压缩进入压缩包</param>
        </member>
        <member name="M:Shove._IO.File.CompressDirectory.GetAllFies(System.String)">
            <summary>
            获取所有文件
            </summary>
            <param name="DirectoryName"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._IO.File.CompressDirectory.GetAllDirsFiles(System.IO.DirectoryInfo[],System.Collections.Generic.Dictionary{System.String,System.DateTime})">
            <summary>  
            获取一个文件夹下的所有文件夹里的文件  
            </summary>  
            <param name="dirs"></param>  
            <param name="filesList"></param>  
        </member>
        <member name="M:Shove._IO.File.CompressDirectory.GetAllDirFiles(System.IO.DirectoryInfo,System.Collections.Generic.Dictionary{System.String,System.DateTime})">
            <summary>  
            获取一个文件夹下的文件  
            </summary>  
            <param name="dir">目录名称</param>  
            <param name="filesList">文件列表HastTable</param>  
        </member>
        <member name="M:Shove._IO.File.CompressDirectory.Decompress(System.String,System.String,System.Boolean)">
            <summary>
            解压缩文件
            </summary>
            <param name="GzipFile">压缩包文件名</param>
            <param name="targetPath">解压缩目标路径</param>
            <param name="IsOutputDirectory">是否解压到以zip文件名为的相对根目录之内</param>
        </member>
        <member name="M:Shove._IO.File.CompressDirectory.isIgnoredFile(System.String)">
            <summary>
            是否是应该被忽略掉的文件名
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._IO.File.CompressDirectory.isIgnoredFile(System.IO.FileInfo)">
            <summary>
            是否是应该被忽略掉的文件名
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._IO.File.GetEncodingOfFile(System.String)">
            <summary>
            获取文件的字符集
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._IO.File.GetSystemDirectory">
            <summary>
            获取操作系统 System32 目录。（由于32Bit, 64Bit 目录不一样，只能通过这个方法来获取）
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove._IO.IniFile">
            <summary>
            IniFile 的摘要说明。
            </summary>
        </member>
        <member name="P:Shove._IO.IniFile.FileName">
            <summary>
            Ini 文件名
            </summary>
        </member>
        <member name="M:Shove._IO.IniFile.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="FileName"></param>
        </member>
        <member name="M:Shove._IO.IniFile.#ctor(System.String,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="FileName"></param>
            <param name="Lazy"></param>
        </member>
        <member name="M:Shove._IO.IniFile.Read(System.String,System.String)">
            <summary>
            Read a value from local cache
            </summary>
            <param name="SectionName"></param>
            <param name="Key"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._IO.IniFile.Write(System.String,System.String,System.Object)">
            <summary>
            Insert or modify a value in local cache, And Flush.
            </summary>
            <param name="SectionName"></param>
            <param name="Key"></param>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.CharsetDetector.Big5Statistics">
            <summary>
            Description of Big5Statistics.
            </summary>
        </member>
        <member name="M:Shove.CharsetDetector.Big5Statistics.mFirstByteFreq">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.Big5Statistics.mFirstByteStdDev">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.Big5Statistics.mFirstByteMean">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.Big5Statistics.mFirstByteWeight">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.Big5Statistics.mSecondByteFreq">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.Big5Statistics.mSecondByteStdDev">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.Big5Statistics.mSecondByteMean">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.Big5Statistics.mSecondByteWeight">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.Big5Statistics.#ctor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove.CharsetDetector.BIG5Verifier">
            <summary>
            Description of BIG5Verifier.
            </summary>
        </member>
        <member name="M:Shove.CharsetDetector.BIG5Verifier.cclass">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.BIG5Verifier.states">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.BIG5Verifier.stFactor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.BIG5Verifier.charset">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.BIG5Verifier.#ctor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.BIG5Verifier.isUCS2">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove.CharsetDetector.CP1252Verifier">
            <summary>
            Description of CP1252Verifier.
            </summary>
        </member>
        <member name="M:Shove.CharsetDetector.CP1252Verifier.cclass">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.CP1252Verifier.states">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.CP1252Verifier.stFactor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.CP1252Verifier.charset">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.CP1252Verifier.#ctor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.CP1252Verifier.isUCS2">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove.CharsetDetector.Detector">
            <summary>
            Description of Detector.
            </summary>
        </member>
        <member name="M:Shove.CharsetDetector.Detector.#ctor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.Detector.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.Detector.Init(Shove.CharsetDetector.ICharsetDetectionObserver)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.Detector.DoIt(System.Byte[],System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.Detector.Done">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.Detector.Report(System.String)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.Detector.isAscii(System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove.CharsetDetector.EUCJPStatistics">
            <summary>
            Description of EUCJPStatistics.
            </summary>
        </member>
        <member name="M:Shove.CharsetDetector.EUCJPStatistics.mFirstByteFreq">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCJPStatistics.mFirstByteStdDev">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCJPStatistics.mFirstByteMean">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCJPStatistics.mFirstByteWeight">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCJPStatistics.mSecondByteFreq">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCJPStatistics.mSecondByteStdDev">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCJPStatistics.mSecondByteMean">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCJPStatistics.mSecondByteWeight">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCJPStatistics.#ctor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove.CharsetDetector.EUCJPVerifier">
            <summary>
            Description of EUCJPVerifier.
            </summary>
        </member>
        <member name="M:Shove.CharsetDetector.EUCJPVerifier.cclass">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCJPVerifier.states">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCJPVerifier.stFactor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCJPVerifier.charset">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCJPVerifier.#ctor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCJPVerifier.isUCS2">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove.CharsetDetector.EUCKRStatistics">
            <summary>
            Description of EUCKRStatistics.
            </summary>
        </member>
        <member name="M:Shove.CharsetDetector.EUCKRStatistics.mFirstByteFreq">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCKRStatistics.mFirstByteStdDev">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCKRStatistics.mFirstByteMean">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCKRStatistics.mFirstByteWeight">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCKRStatistics.mSecondByteFreq">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCKRStatistics.mSecondByteStdDev">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCKRStatistics.mSecondByteMean">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCKRStatistics.mSecondByteWeight">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCKRStatistics.#ctor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove.CharsetDetector.EUCKRVerifier">
            <summary>
            Description of EUCKRVerifier.
            </summary>
        </member>
        <member name="M:Shove.CharsetDetector.EUCKRVerifier.cclass">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCKRVerifier.states">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCKRVerifier.stFactor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCKRVerifier.charset">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCKRVerifier.#ctor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCKRVerifier.isUCS2">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove.CharsetDetector.EUCSampler">
            <summary>
            Description of EUCSampler.
            </summary>
        </member>
        <member name="F:Shove.CharsetDetector.EUCSampler.mFirstByteCnt">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="F:Shove.CharsetDetector.EUCSampler.mSecondByteCnt">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="F:Shove.CharsetDetector.EUCSampler.mFirstByteFreq">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="F:Shove.CharsetDetector.EUCSampler.mSecondByteFreq">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCSampler.#ctor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCSampler.Reset">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCSampler.EnoughData">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCSampler.GetSomeData">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCSampler.Sample(System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCSampler.CalFreq">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCSampler.GetScore(System.Single[],System.Single,System.Single[],System.Single)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCSampler.GetScore(System.Single[],System.Single[])">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove.CharsetDetector.EUCStatistics">
            <summary>
            Description of EUCStatistics.
            </summary>
        </member>
        <member name="M:Shove.CharsetDetector.EUCStatistics.mFirstByteFreq">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCStatistics.mFirstByteStdDev">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCStatistics.mFirstByteMean">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCStatistics.mFirstByteWeight">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCStatistics.mSecondByteFreq">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCStatistics.mSecondByteStdDev">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCStatistics.mSecondByteMean">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCStatistics.mSecondByteWeight">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCStatistics.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Shove.CharsetDetector.EUCTWStatistics">
            <summary>
            Description of EUCTWStatistics.
            </summary>
        </member>
        <member name="M:Shove.CharsetDetector.EUCTWStatistics.mFirstByteFreq">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCTWStatistics.mFirstByteStdDev">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCTWStatistics.mFirstByteMean">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCTWStatistics.mFirstByteWeight">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCTWStatistics.mSecondByteFreq">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCTWStatistics.mSecondByteStdDev">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCTWStatistics.mSecondByteMean">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCTWStatistics.mSecondByteWeight">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCTWStatistics.#ctor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove.CharsetDetector.EUCTWVerifier">
            <summary>
            Description of EUCTWVerifier.
            </summary>
        </member>
        <member name="M:Shove.CharsetDetector.EUCTWVerifier.cclass">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCTWVerifier.states">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCTWVerifier.stFactor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCTWVerifier.charset">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCTWVerifier.#ctor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.EUCTWVerifier.isUCS2">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove.CharsetDetector.GB18030Verifier">
            <summary>
            Description of GB18030Verifier.
            </summary>
        </member>
        <member name="M:Shove.CharsetDetector.GB18030Verifier.cclass">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.GB18030Verifier.states">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.GB18030Verifier.stFactor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.GB18030Verifier.charset">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.GB18030Verifier.#ctor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.GB18030Verifier.isUCS2">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove.CharsetDetector.GB2312Statistics">
            <summary>
            Description of GB2312Statistics.
            </summary>
        </member>
        <member name="M:Shove.CharsetDetector.GB2312Statistics.mFirstByteFreq">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.GB2312Statistics.mFirstByteStdDev">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.GB2312Statistics.mFirstByteMean">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.GB2312Statistics.mFirstByteWeight">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.GB2312Statistics.mSecondByteFreq">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.GB2312Statistics.mSecondByteStdDev">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.GB2312Statistics.mSecondByteMean">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.GB2312Statistics.mSecondByteWeight">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.GB2312Statistics.#ctor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove.CharsetDetector.GB2312Verifier">
            <summary>
            Description of GB2312Verifier.
            </summary>
        </member>
        <member name="M:Shove.CharsetDetector.GB2312Verifier.cclass">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.GB2312Verifier.states">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.GB2312Verifier.stFactor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.GB2312Verifier.charset">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.GB2312Verifier.#ctor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.GB2312Verifier.isUCS2">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove.CharsetDetector.HZVerifier">
            <summary>
            Description of HZVerifier.
            </summary>
        </member>
        <member name="M:Shove.CharsetDetector.HZVerifier.cclass">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.HZVerifier.states">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.HZVerifier.stFactor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.HZVerifier.charset">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.HZVerifier.#ctor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.HZVerifier.isUCS2">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove.CharsetDetector.ICharsetDetectionObserver">
            <summary>
            Description of ICharsetDetectionObserver.
            </summary>
        </member>
        <member name="M:Shove.CharsetDetector.ICharsetDetectionObserver.Notify(System.String)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove.CharsetDetector.ICharsetDetector">
            <summary>
            Description of ICharsetDetector.
            </summary>
        </member>
        <member name="M:Shove.CharsetDetector.ICharsetDetector.Init(Shove.CharsetDetector.ICharsetDetectionObserver)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.ICharsetDetector.DoIt(System.Byte[],System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.ICharsetDetector.Done">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove.CharsetDetector.ISO2022CNVerifier">
            <summary>
            Description of ISO2022CNVerifier.
            </summary>
        </member>
        <member name="M:Shove.CharsetDetector.ISO2022CNVerifier.cclass">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.ISO2022CNVerifier.states">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.ISO2022CNVerifier.stFactor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.ISO2022CNVerifier.charset">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.ISO2022CNVerifier.#ctor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.ISO2022CNVerifier.isUCS2">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove.CharsetDetector.ISO2022JPVerifier">
            <summary>
            Description of ISO2022JPVerifier.
            </summary>
        </member>
        <member name="M:Shove.CharsetDetector.ISO2022JPVerifier.cclass">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.ISO2022JPVerifier.states">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.ISO2022JPVerifier.stFactor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.ISO2022JPVerifier.charset">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.ISO2022JPVerifier.#ctor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.ISO2022JPVerifier.isUCS2">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove.CharsetDetector.ISO2022KRVerifier">
            <summary>
            Description of ISO2022KRVerifier.
            </summary>
        </member>
        <member name="M:Shove.CharsetDetector.ISO2022KRVerifier.cclass">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.ISO2022KRVerifier.states">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.ISO2022KRVerifier.stFactor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.ISO2022KRVerifier.charset">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.ISO2022KRVerifier.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.CharsetDetector.ISO2022KRVerifier.isUCS2">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove.CharsetDetector.MyCharsetDetectionObserver">
            <summary>
            Description of MyCharsetDetectionObserver.
            </summary>
        </member>
        <member name="F:Shove.CharsetDetector.MyCharsetDetectionObserver.Charset">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.MyCharsetDetectionObserver.Notify(System.String)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove.CharsetDetector.PSMDetector">
            <summary>
            Description of PSMDetector.
            </summary>
        </member>
        <member name="F:Shove.CharsetDetector.PSMDetector.ALL">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="F:Shove.CharsetDetector.PSMDetector.JAPANESE">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="F:Shove.CharsetDetector.PSMDetector.CHINESE">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="F:Shove.CharsetDetector.PSMDetector.SIMPLIFIED_CHINESE">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="F:Shove.CharsetDetector.PSMDetector.TRADITIONAL_CHINESE">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="F:Shove.CharsetDetector.PSMDetector.KOREAN">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="F:Shove.CharsetDetector.PSMDetector.NO_OF_LANGUAGES">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="F:Shove.CharsetDetector.PSMDetector.MAX_VERIFIERS">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="F:Shove.CharsetDetector.PSMDetector.mDone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="F:Shove.CharsetDetector.PSMDetector.mRunSampler">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="F:Shove.CharsetDetector.PSMDetector.mClassRunSampler">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.PSMDetector.#ctor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.PSMDetector.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.PSMDetector.#ctor(System.Int32,Shove.CharsetDetector.Verifier[],Shove.CharsetDetector.EUCStatistics[])">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.PSMDetector.Reset">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.PSMDetector.initVerifiers(System.Int32)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.PSMDetector.Report(System.String)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.PSMDetector.HandleData(System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.PSMDetector.DataEnd">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.PSMDetector.Sample(System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.PSMDetector.Sample(System.Byte[],System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.PSMDetector.getProbableCharsets">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove.CharsetDetector.SJISVerifier">
            <summary>
            Description of SJISVerifier.
            </summary>
        </member>
        <member name="M:Shove.CharsetDetector.SJISVerifier.cclass">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.SJISVerifier.states">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.SJISVerifier.stFactor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.SJISVerifier.charset">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.SJISVerifier.#ctor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.SJISVerifier.isUCS2">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove.CharsetDetector.UCS2BEVerifier">
            <summary>
            Description of UCS2BEVerifier.
            </summary>
        </member>
        <member name="M:Shove.CharsetDetector.UCS2BEVerifier.cclass">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.UCS2BEVerifier.states">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.UCS2BEVerifier.stFactor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.UCS2BEVerifier.charset">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.UCS2BEVerifier.#ctor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.UCS2BEVerifier.isUCS2">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove.CharsetDetector.UCS2LEVerifier">
            <summary>
            Description of UCS2LEVerifier.
            </summary>
        </member>
        <member name="M:Shove.CharsetDetector.UCS2LEVerifier.cclass">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.UCS2LEVerifier.states">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.UCS2LEVerifier.stFactor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.UCS2LEVerifier.charset">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.UCS2LEVerifier.#ctor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.UCS2LEVerifier.isUCS2">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove.CharsetDetector.UTF8Verifier">
            <summary>
            Description of UTF8Verifier.
            </summary>
        </member>
        <member name="M:Shove.CharsetDetector.UTF8Verifier.cclass">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.UTF8Verifier.states">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.UTF8Verifier.stFactor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.UTF8Verifier.charset">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.UTF8Verifier.#ctor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.UTF8Verifier.isUCS2">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove.CharsetDetector.Verifier">
            <summary>
            Description of Verifier.
            </summary>
        </member>
        <member name="M:Shove.CharsetDetector.Verifier.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.CharsetDetector.Verifier.charset">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.Verifier.stFactor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.Verifier.cclass">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.Verifier.states">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.Verifier.isUCS2">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.CharsetDetector.Verifier.getNextState(Shove.CharsetDetector.Verifier,System.Byte,System.Byte)">
            <summary>
            
            </summary>
            <param name="v"></param>
            <param name="b"></param>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="T:Shove._Net.FtpManage.FileZillaServer">
            <summary>
            FileZillaServer 管理接口
            </summary>
        </member>
        <member name="M:Shove._Net.FtpManage.FileZillaServer.#ctor(System.String,System.String)">
            <summary>
            构造
            </summary>
            <param name="ExecuteFileName">FileZilla server.exe 的带完整路径的文件名</param>
            <param name="ConfigFileName">FileZilla server.xml 的带完整路径的文件名</param>
        </member>
        <member name="M:Shove._Net.FtpManage.FileZillaServer.GetUser(System.String,System.String@)">
            <summary>
            获取一个 FTP 用户信息
            </summary>
            <param name="UserName"></param>
            <param name="ReturnDescription"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.FtpManage.FileZillaServer.GetUsers(System.String@)">
            <summary>
            获取全部 FTP 用户列表
            </summary>
            <param name="ReturnDescription"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.FtpManage.FileZillaServer.CreateUser(Shove._Net.FtpManage.FileZillaServerUser,System.String@)">
            <summary>
            创建一个 FTP 用户
            </summary>
            <param name="user"></param>
            <param name="ReturnDescription"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.FtpManage.FileZillaServer.RemoveUser(System.String,System.String@)">
            <summary>
            删除 FTP 用户
            </summary>
            <param name="UserName"></param>
            <param name="ReturnDescription"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.FtpManage.FileZillaServer.EditUser(Shove._Net.FtpManage.FileZillaServerUser,System.String@)">
            <summary>
            编辑 FTP 用户
            </summary>
            <param name="user"></param>
            <param name="ReturnDescription"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.FtpManage.FileZillaServer.QueryUsedSpaceSize(Shove._Net.FtpManage.FileZillaServerUser,System.String@)">
            <summary>
            查询已使用磁盘空间的大小
            </summary>
            <param name="user"></param>
            <param name="ReturnDescription"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.FtpManage.FileZillaServer._ReloadConfig">
            <summary>
            通知服务重新加载配置
            </summary>
        </member>
        <member name="M:Shove._Net.FtpManage.FileZillaServer.StartService">
            <summary>
            启动 FTP 服务
            </summary>
        </member>
        <member name="M:Shove._Net.FtpManage.FileZillaServer._StartService">
            <summary>
            启动 FTP 服务
            </summary>
        </member>
        <member name="M:Shove._Net.FtpManage.FileZillaServer.StopService">
            <summary>
            停止 FTP 服务。本命令是异步操作，停止命令后，需等待数秒，再执行 StartService
            </summary>
        </member>
        <member name="M:Shove._Net.FtpManage.FileZillaServer._StopService">
            <summary>
            停止 FTP 服务。本命令是异步操作，停止命令后，需等待数秒，再执行 StartService
            </summary>
        </member>
        <member name="T:Shove._Net.FtpManage.FileZillaServerUser">
            <summary>
            FileZillaServer 用户信息
            </summary>
        </member>
        <member name="F:Shove._Net.FtpManage.FileZillaServerUser.Name">
            <summary>
            用户名
            </summary>
        </member>
        <member name="F:Shove._Net.FtpManage.FileZillaServerUser.Password">
            <summary>
            密码，复制密码原文后，应立即调用 FileZillaServerUser.HashPassword 的方法进行处理
            </summary>
        </member>
        <member name="F:Shove._Net.FtpManage.FileZillaServerUser.Enabled">
            <summary>
            是否有效
            </summary>
        </member>
        <member name="F:Shove._Net.FtpManage.FileZillaServerUser.Directory">
            <summary>
            FTP 主目录
            </summary>
        </member>
        <member name="M:Shove._Net.FtpManage.FileZillaServerUser.HashPassword(System.String)">
            <summary>
            FileZillaServer 用户密码加密方法
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.FtpManage.FileZillaServerUser.ValidUserInfo(Shove._Net.FtpManage.FileZillaServerUser)">
            <summary>
            校验 FileZillaServer 用户信息是否完整
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="T:Shove._Net.Ftp.Direction">
            <summary>
            FTP 文件传输的方向
            </summary>
        </member>
        <member name="F:Shove._Net.Ftp.Direction.Upload">
            <summary>
            上传
            </summary>
        </member>
        <member name="F:Shove._Net.Ftp.Direction.Download">
            <summary>
            下载
            </summary>
        </member>
        <member name="T:Shove._Net.Ftp.FtpClient">
            <summary>
            FTP上传下载
            </summary>
        </member>
        <member name="E:Shove._Net.Ftp.FtpClient.OnTransfering">
            <summary>
            
            </summary>
        </member>
        <member name="T:Shove._Net.Ftp.FtpClient.TransferEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Shove._Net.Ftp.FtpClient.#ctor(System.String,System.String,System.String)">
            <summary>
            构造
            </summary>
            <param name="Server">服务器 IP 地址或域名</param>
            <param name="UserName">用户名</param>
            <param name="Password">密码</param>
        </member>
        <member name="M:Shove._Net.Ftp.FtpClient.#ctor(System.String,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            构造
            </summary>
            <param name="Server">服务器 IP 地址或域名</param>
            <param name="Port">FTP 端口</param>
            <param name="UserName">用户名</param>
            <param name="Password">密码</param>
            <param name="UseBinary">使用二进制传输</param>
            <param name="UsePassive">使用被动模式</param>
            <param name="EnableSsl">使用SSL</param>
        </member>
        <member name="M:Shove._Net.Ftp.FtpClient.#ctor(System.String,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            构造
            </summary>
            <param name="Server">服务器 IP 地址或域名</param>
            <param name="Port">FTP 端口</param>
            <param name="UserName">用户名</param>
            <param name="Password">密码</param>
            <param name="UseBinary">使用二进制传输</param>
            <param name="UsePassive">使用被动模式</param>
            <param name="EnableSsl">使用SSL</param>
            <param name="TransferBufferSize">每次传输的缓冲区大小</param>
        </member>
        <member name="M:Shove._Net.Ftp.FtpClient.Finalize">
            <summary>
            关闭与 FTP 服务器的链接
            </summary>
        </member>
        <member name="M:Shove._Net.Ftp.FtpClient.Connect">
            <summary>
            连接 FTP 服务器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.Ftp.FtpClient.Disconnect">
            <summary>
            断开连接
            </summary>
        </member>
        <member name="M:Shove._Net.Ftp.FtpClient.AsynchronousDisconnect">
            <summary>
            异步断开连接
            </summary>
        </member>
        <member name="M:Shove._Net.Ftp.FtpClient.Cancel">
            <summary>
            取消连接正在进行的任务
            </summary>
        </member>
        <member name="M:Shove._Net.Ftp.FtpClient.GetFiles(System.String)">
            <summary>
            获取 FTP 服务器的文件列表
            </summary>
            <param name="path">服务器相对路径</param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.Ftp.FtpClient.GetFiles(System.String,System.Collections.Generic.IList{Shove._Net.Ftp.FtpFileInfo})">
            <summary>
            获取 FTP 服务器的文件列表的递归方法
            </summary>
            <param name="path">服务器相对路径</param>
            <param name="files">填充文件名的变量</param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.Ftp.FtpClient.GetDirectorys(System.String)">
            <summary>
            获取 FTP 服务器的目录列表
            </summary>
            <param name="path">服务器相对路径</param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.Ftp.FtpClient.GetDirectorys(System.String,System.Collections.Generic.IList{Shove._Net.Ftp.FtpFileInfo})">
            <summary>
            获取 FTP 服务器的目录列表的递归方法
            </summary>
            <param name="path">服务器相对路径</param>
            <param name="directorys">填充目录名的变量</param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.Ftp.FtpClient.CreateDirectory(System.String)">
            <summary>
            在 FTP 服务器上创建一个目录
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Shove._Net.Ftp.FtpClient.DeleteDirectory(System.String)">
            <summary>
            在 FTP 服务器上删除一个目录，递归删除里面的子目录及文件
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Shove._Net.Ftp.FtpClient.DeleteFile(System.String)">
            <summary>
            在 FTP 服务器上删除一个文件
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Shove._Net.Ftp.FtpClient.Rename(System.String,System.String)">
            <summary>
            在 FTP 服务器上给目录、文件重命名
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.Ftp.FtpClient.FileExists(System.String)">
            <summary>
            判断 FTP 服务器上指定的文件是否存在
            </summary>
            <param name="filename"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.Ftp.FtpClient.GetFileSize(System.String)">
            <summary>
            获取 FTP 上指定文件的长度
            </summary>
            <param name="filename"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.Ftp.FtpClient.DirectoryExists(System.String)">
            <summary>
            判断 FTP 服务器上指定的目录是否存在
            </summary>
            <param name="directoryName"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.Ftp.FtpClient.Update(System.String,System.String,System.Boolean)">
            <summary>
            同步上传文件
            </summary>
            <param name="localFileName"></param>
            <param name="remoteFileName"></param>
            <param name="resume">如果远程文件存在，是否续传</param>
        </member>
        <member name="M:Shove._Net.Ftp.FtpClient.AsynchronousUpdate(System.String,System.String,Shove._Net.Ftp.OverrideMode)">
            <summary>
            异步上传文件
            </summary>
            <param name="localFileName"></param>
            <param name="remoteFileName"></param>
            <param name="mode"></param>
        </member>
        <member name="M:Shove._Net.Ftp.FtpClient._AsynchronousUpdate(System.String,System.String,Shove._Net.Ftp.OverrideMode)">
            <summary>
            异步上传文件
            </summary>
            <param name="localFileName"></param>
            <param name="remoteFileName"></param>
            <param name="mode"></param>
        </member>
        <member name="M:Shove._Net.Ftp.FtpClient.Download(System.String,System.String,System.Boolean)">
            <summary>
            同步下载文件
            </summary>
            <param name="localFileName"></param>
            <param name="remoteFileName"></param>
            <param name="resume">如果本地文件存在，是否续传</param>
        </member>
        <member name="M:Shove._Net.Ftp.FtpClient.AsynchronousDownload(System.String,System.String,Shove._Net.Ftp.OverrideMode)">
            <summary>
            异步下载文件
            </summary>
            <param name="localFileName"></param>
            <param name="remoteFileName"></param>
            <param name="mode"></param>
        </member>
        <member name="M:Shove._Net.Ftp.FtpClient._AsynchronousDownload(System.String,System.String,Shove._Net.Ftp.OverrideMode)">
            <summary>
            异步下载文件
            </summary>
            <param name="localFileName"></param>
            <param name="remoteFileName"></param>
            <param name="mode"></param>
        </member>
        <member name="M:Shove._Net.Ftp.FtpClient.FileUsing(System.String)">
            <summary>
            文件被占用
            </summary>
            <param name="localFileName"></param>
            <returns></returns>
        </member>
        <member name="T:Shove._Net.Ftp.FtpFileInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._Net.Ftp.FtpFileInfo.IsDirectory">
            <summary>
            是否是目录
            </summary>
        </member>
        <member name="F:Shove._Net.Ftp.FtpFileInfo.IsFile">
            <summary>
            是否是文件
            </summary>
        </member>
        <member name="F:Shove._Net.Ftp.FtpFileInfo.Size">
            <summary>
            大小
            </summary>
        </member>
        <member name="F:Shove._Net.Ftp.FtpFileInfo.Name">
            <summary>
            文件名
            </summary>
        </member>
        <member name="F:Shove._Net.Ftp.FtpFileInfo.FullName">
            <summary>
            文件带完整路径名
            </summary>
        </member>
        <member name="F:Shove._Net.Ftp.FtpFileInfo.LastModifiedTime">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="M:Shove._Net.Ftp.FtpFileInfo.#ctor(EnterpriseDT.Net.Ftp.FTPFile,System.String)">
            <summary>
            构造
            </summary>
            <param name="file"></param>
            <param name="path"></param>
        </member>
        <member name="T:Shove._Net.Ftp.Instruct">
            <summary>
            传输指令
            </summary>
        </member>
        <member name="F:Shove._Net.Ftp.Instruct.Start">
            <summary>
            开始
            </summary>
        </member>
        <member name="F:Shove._Net.Ftp.Instruct.Override">
            <summary>
            覆盖
            </summary>
        </member>
        <member name="F:Shove._Net.Ftp.Instruct.Resume">
            <summary>
            续传
            </summary>
        </member>
        <member name="F:Shove._Net.Ftp.Instruct.Cancel">
            <summary>
            取消
            </summary>
        </member>
        <member name="T:Shove._Net.Ftp.OverrideMode">
            <summary>
            覆盖模式
            </summary>
        </member>
        <member name="F:Shove._Net.Ftp.OverrideMode.Wanring">
            <summary>
            警告文件已经存在，终止任务
            </summary>
        </member>
        <member name="F:Shove._Net.Ftp.OverrideMode.Override">
            <summary>
            不警告文件已经存在，直接覆盖
            </summary>
        </member>
        <member name="F:Shove._Net.Ftp.OverrideMode.Resume">
            <summary>
            不警告文件已经存在，直接续传
            </summary>
        </member>
        <member name="T:Shove._Net.Ftp.Status">
            <summary>
            传输状态的枚举
            </summary>
        </member>
        <member name="F:Shove._Net.Ftp.Status.Waiting">
            <summary>
            尚未开始传输，任务等待中
            </summary>
        </member>
        <member name="F:Shove._Net.Ftp.Status.Connecting">
            <summary>
            连接 FTP 服务器中
            </summary>
        </member>
        <member name="F:Shove._Net.Ftp.Status.Transfering">
            <summary>
            正在传输中
            </summary>
        </member>
        <member name="F:Shove._Net.Ftp.Status.Finished">
            <summary>
            传输结束，成功了
            </summary>
        </member>
        <member name="F:Shove._Net.Ftp.Status.Failed">
            <summary>
            传输失败(网络故障等其他原因)
            </summary>
        </member>
        <member name="F:Shove._Net.Ftp.Status.Using">
            <summary>
            传输失败(文件被占用)
            </summary>
        </member>
        <member name="F:Shove._Net.Ftp.Status.Exists">
            <summary>
            文件已经存在，等待下一指令
            </summary>
        </member>
        <member name="F:Shove._Net.Ftp.Status.Canceled">
            <summary>
            操作被取消
            </summary>
        </member>
        <member name="T:Shove._Net.Ftp.Task">
            <summary>
            FTP 任务集合
            </summary>
        </member>
        <member name="F:Shove._Net.Ftp.Task.MaxRuningTaskNumber">
            <summary>
            同时传输的最大任务数量
            </summary>
        </member>
        <member name="P:Shove._Net.Ftp.Task.Count">
            <summary>
            当面任务总数
            </summary>
        </member>
        <member name="M:Shove._Net.Ftp.Task.Add(Shove._Net.Ftp.TaskItem)">
            <summary>
            增加一条任务
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Shove._Net.Ftp.Task.Remove(System.Int32)">
            <summary>
            删除一条任务
            </summary>
            <param name="i"></param>
        </member>
        <member name="M:Shove._Net.Ftp.Task.Remove(Shove._Net.Ftp.TaskItem)">
            <summary>
            删除一条任务
            </summary>
            <param name="item"></param>
        </member>
        <member name="P:Shove._Net.Ftp.Task.Item(System.Int32)">
            <summary>
            任务索引器
            </summary>
            <param name="Index"></param>
            <returns></returns>
        </member>
        <member name="P:Shove._Net.Ftp.Task.Completed">
            <summary>
            指示列表中的所有任务是否均已经传输结束，注意：错误、失败、暂停、发现有重名文件等等，只要是没在传输，均是传输结束。
            如果需要判断传输完成并且成功，请使用 TaskItem.Finished 逐一进行判断、或使用 Task.Finished 属性判断。
            </summary>
        </member>
        <member name="P:Shove._Net.Ftp.Task.Finished">
            <summary>
            指示列表中的所有人物是否均已经传输成功(完成，并且成功了)，主动取消的任务，也不算成功，所以只能用于比较单纯的全部上传、全部下载，并且均要求成功的场合。
            </summary>
        </member>
        <member name="M:Shove._Net.Ftp.Task.CancelAll">
            <summary>
            取消所有任务
            </summary>
        </member>
        <member name="M:Shove._Net.Ftp.Task.ClearFinished">
            <summary>
            清除任务列表中的已经成功传输完成的任务
            </summary>
        </member>
        <member name="M:Shove._Net.Ftp.Task.ClearAll">
            <summary>
            清除任务列表中的所有的任务
            </summary>
        </member>
        <member name="M:Shove._Net.Ftp.Task.GetEnumerator">
            <summary>
            迭代器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.Ftp.Task.#ctor(System.Int32)">
            <summary>
            构造，启动任务控制线程
            </summary>
            <param name="MaxRuningTaskNumber">同时工作的最大线程数[1-100, 根据网络情况选择，推荐3、4、5]</param>
        </member>
        <member name="M:Shove._Net.Ftp.Task.TaskControler">
            <summary>
            任务控制器，当正在运行的任务没有达到 MaxRuningTaskNumber，则启动新的等待中的任务
            </summary>
        </member>
        <member name="T:Shove._Net.Ftp.TaskItem">
            <summary>
            FTP 任务，每个文件一个任务
            </summary>
        </member>
        <member name="P:Shove._Net.Ftp.TaskItem.Identifiers">
            <summary>
            任务标识符，用于应用程序做标记用
            </summary>
        </member>
        <member name="P:Shove._Net.Ftp.TaskItem.Parent">
            <summary>
            父类，属于哪个 Task 任务集合
            </summary>
        </member>
        <member name="P:Shove._Net.Ftp.TaskItem.LocalFileName">
            <summary>
            本地文件名
            </summary>
        </member>
        <member name="P:Shove._Net.Ftp.TaskItem.RemoteFileName">
            <summary>
            FTP 服务器文件名
            </summary>
        </member>
        <member name="P:Shove._Net.Ftp.TaskItem.TransferDirection">
            <summary>
            传输方向
            </summary>
        </member>
        <member name="P:Shove._Net.Ftp.TaskItem.TransferInstruct">
            <summary>
            传输指令
            </summary>
        </member>
        <member name="P:Shove._Net.Ftp.TaskItem.TransferStatus">
            <summary>
            传输状态
            </summary>
        </member>
        <member name="P:Shove._Net.Ftp.TaskItem.FileSize">
            <summary>
            原文件长度
            </summary>
        </member>
        <member name="P:Shove._Net.Ftp.TaskItem.TransferredSize">
            <summary>
            已传输长度
            </summary>
        </member>
        <member name="P:Shove._Net.Ftp.TaskItem.Exception">
            <summary>
            当状态为 Failed 时，此异常指示了具体原因
            </summary>
        </member>
        <member name="M:Shove._Net.Ftp.TaskItem.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,Shove._Net.Ftp.Direction)">
            <summary>
            构造
            </summary>
            <param name="Identifiers">标识</param>
            <param name="Server">服务器 IP 或名称</param>
            <param name="UserName">用户名</param>
            <param name="Password">密码</param>
            <param name="LocalFileName">本地文件名</param>
            <param name="RemoteFileName">远程文件名</param>
            <param name="TransferDirection">传输方向</param>
        </member>
        <member name="M:Shove._Net.Ftp.TaskItem.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,Shove._Net.Ftp.Direction,Shove._Net.Ftp.Instruct)">
            <summary>
            构造
            </summary>
            <param name="Identifiers">标识</param>
            <param name="Server">服务器 IP 或名称</param>
            <param name="UserName">用户名</param>
            <param name="Password">密码</param>
            <param name="LocalFileName">本地文件名</param>
            <param name="RemoteFileName">远程文件名</param>
            <param name="TransferDirection">传输方向</param>
            <param name="InitializationInstruct">初始化时的默认指令</param>
        </member>
        <member name="M:Shove._Net.Ftp.TaskItem.#ctor(System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,Shove._Net.Ftp.Direction)">
            <summary>
            构造
            </summary>
            <param name="Identifiers">标识</param>
            <param name="Server">服务器 IP 或名称</param>
            <param name="Port">端口</param>
            <param name="UserName">用户名</param>
            <param name="Password">密码</param>
            <param name="LocalFileName">本地文件名</param>
            <param name="RemoteFileName">远程文件名</param>
            <param name="TransferDirection">传输方向</param>
        </member>
        <member name="M:Shove._Net.Ftp.TaskItem.#ctor(System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,Shove._Net.Ftp.Direction,Shove._Net.Ftp.Instruct)">
            <summary>
            构造
            </summary>
            <param name="Identifiers">标识</param>
            <param name="Server">服务器 IP 或名称</param>
            <param name="Port">端口</param>
            <param name="UserName">用户名</param>
            <param name="Password">密码</param>
            <param name="LocalFileName">本地文件名</param>
            <param name="RemoteFileName">远程文件名</param>
            <param name="TransferDirection">传输方向</param>
            <param name="InitializationInstruct">初始化时的默认指令</param>
        </member>
        <member name="M:Shove._Net.Ftp.TaskItem.#ctor(System.String,System.String,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,Shove._Net.Ftp.Direction,Shove._Net.Ftp.Instruct)">
            <summary>
            构造
            </summary>
            <param name="Identifiers">标识</param>
            <param name="Server">服务器 IP 或名称</param>
            <param name="Port">端口</param>
            <param name="UserName">用户名</param>
            <param name="Password">密码</param>
            <param name="UseBinary">二进制传输</param>
            <param name="UsePassive">使用被动模式，注意：一般此变量设置为 false, 用主动模式</param>
            <param name="EnableSsl">使用 SSL 加密传输</param>
            <param name="LocalFileName">本地文件名</param>
            <param name="RemoteFileName">远程文件名</param>
            <param name="TransferDirection">传输方向</param>
            <param name="InitializationInstruct">初始化时的默认指令</param>
        </member>
        <member name="M:Shove._Net.Ftp.TaskItem.#ctor(System.String,System.String,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.String,System.String,Shove._Net.Ftp.Direction,Shove._Net.Ftp.Instruct)">
            <param name="Identifiers">标识</param>
            <param name="Server">服务器 IP 或名称</param>
            <param name="Port">端口</param>
            <param name="UserName">用户名</param>
            <param name="Password">密码</param>
            <param name="UseBinary">二进制传输</param>
            <param name="UsePassive">使用被动模式，注意：一般此变量设置为 false, 用主动模式</param>
            <param name="EnableSsl">使用 SSL 加密传输</param>
            <param name="TransferBufferSize">每次传输的缓冲区大小</param>
            <param name="LocalFileName">本地文件名</param>
            <param name="RemoteFileName">远程文件名</param>
            <param name="TransferDirection">传输方向</param>
            <param name="InitializationInstruct">初始化时的默认指令</param>
        </member>
        <member name="M:Shove._Net.Ftp.TaskItem.Start">
            <summary>
            启动任务
            </summary>
        </member>
        <member name="M:Shove._Net.Ftp.TaskItem.Cancel">
            <summary>
            取消任务
            </summary>
        </member>
        <member name="M:Shove._Net.Ftp.TaskItem.On_Transfering(System.Object,Shove._Net.Ftp.TransferEventArgs)">
            <summary>
            传输过程的委托时间
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Shove._Net.Ftp.TransferEventArgs">
            <summary>
            传输过程回调用的参数
            </summary>
        </member>
        <member name="P:Shove._Net.Ftp.TransferEventArgs.TransferStatus">
            <summary>
            当前实时状态
            </summary>
        </member>
        <member name="P:Shove._Net.Ftp.TransferEventArgs.FileSize">
            <summary>
            原文件长度
            </summary>
        </member>
        <member name="P:Shove._Net.Ftp.TransferEventArgs.TransferredSize">
            <summary>
            已传输长度
            </summary>
        </member>
        <member name="P:Shove._Net.Ftp.TransferEventArgs.Exception">
            <summary>
            FTP 异常
            </summary>
        </member>
        <member name="T:Shove._Net.IIS.AppPoolMethodType">
            <summary>
            对进程池的操作事件
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.AppPoolMethodType.Start">
            <summary>
            启动
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.AppPoolMethodType.Stop">
            <summary>
            停止
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.AppPoolMethodType.Recycle">
            <summary>
            回收
            </summary>
        </member>
        <member name="T:Shove._Net.IIS.AppPoolType">
            <summary>
            应用程序池操作类
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.AppPoolType.Integration">
            <summary>
            集成
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.AppPoolType.Classics">
            <summary>
            经典
            </summary>
        </member>
        <member name="T:Shove._Net.IIS.HostHeader">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.HostHeader.Value">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove._Net.IIS.HostHeader.Add(System.String,System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="ip"></param>
            <param name="port"></param>
            <param name="domainName"></param>
        </member>
        <member name="M:Shove._Net.IIS.HostHeader.Add(System.DirectoryServices.DirectoryEntry)">
            <summary>
            
            </summary>
            <param name="server"></param>
        </member>
        <member name="M:Shove._Net.IIS.HostHeader.Add(System.DirectoryServices.PropertyValueCollection)">
            <summary>
            
            </summary>
            <param name="serverBindings"></param>
        </member>
        <member name="M:Shove._Net.IIS.HostHeader.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="T:Shove._Net.IIS.IISManagement">
            <summary>
            IISManagement 的摘要说明。
            </summary>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.GetIISServerVersion">
            <summary>
            获取 IIS 版本
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.GetIISServerVersion(System.String)">
            <summary>
            获取 IIS 版本
            </summary>
            <param name="MachineName"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.GetIISWebServers">
            <summary>
            获取本机 IIS 下全部站点、虚拟目录集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.GetIISWebServers(System.String)">
            <summary>
            获取指定服务器 IIS 下全部站点、虚拟目录集合，如获取本机，请传入 “localhost”
            </summary>
            <param name="MachineName"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.GetIISWebServer(System.Int32)">
            <summary>
            获取本机 IIS 下指定的 IISWebServer
            </summary>
            <param name="Identify"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.GetIISWebServer(System.String,System.Int32)">
            <summary>
            获取指定的 IISWebServer
            </summary>
            <param name="MachineName">查询本机请传入 localhost</param>
            <param name="Identify"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.GetIISWebServer(System.String)">
            <summary>
            获取本机 IIS 下指定的 IISWebServer
            </summary>
            <param name="ServerComment"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.GetIISWebServer(System.String,System.String)">
            <summary>
            获取指定的 IISWebServer
            </summary>
            <param name="MachineName">查询本机请传入 localhost</param>
            <param name="ServerComment"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.GetIISWebServerExists(System.Int32)">
            <summary>
            判断本机 IIS 站点是否存在
            </summary>
            <param name="Identify"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.GetIISWebServerExists(System.String,System.Int32)">
            <summary>
            判断指定服务器 IIS 站点是否存在
            </summary>
            <param name="MachineName">查询本机请传入 localhost</param>
            <param name="Identify"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.GetIISWebServerExists(System.String)">
            <summary>
            判断本机 IIS 站点是否存在
            </summary>
            <param name="ServerComment"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.GetIISWebServerExists(System.String,System.String)">
            <summary>
            判断指定服务器 IIS 站点是否存在
            </summary>
            <param name="MachineName">查询本机请传入 localhost</param>
            <param name="ServerComment"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.CreateIISWebServer(Shove._Net.IIS.IISWebServer)">
            <summary>
            创建 IIS 站点
            </summary>
            <param name="iisws"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.CreateIISWebServer(System.String,Shove._Net.IIS.IISWebServer)">
            <summary>
            创建 IIS 站点
            </summary>
            <param name="MachineName"></param>
            <param name="iisws"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.DefaultScriptMaps">
            <summary>
            默认ISAPI筛选
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.SetHostHeader(System.Int32,Shove._Net.IIS.HostHeader)">
            <summary>
            设置主机头
            </summary>
            <param name="Identify">站点标识符</param>
            <param name="hostHeader">主机头信息</param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.SetHostHeader(System.String,System.Int32,Shove._Net.IIS.HostHeader)">
            <summary>
            设置主机头
            </summary>
            <param name="MachineName"></param>
            <param name="Identify">站点标识符</param>
            <param name="hostHeader">主机头信息</param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.SetHostHeader(System.String,Shove._Net.IIS.HostHeader)">
            <summary>
            设置主机头
            </summary>
            <param name="ServerComment">站点名称</param>
            <param name="hostHeader">主机头信息</param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.SetHostHeader(System.String,System.String,Shove._Net.IIS.HostHeader)">
            <summary>
            设置主机头
            </summary>
            <param name="MachineName"></param>
            <param name="ServerComment">站点名称</param>
            <param name="hostHeader">主机头信息</param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.SetHostHeader(System.DirectoryServices.DirectoryEntry,Shove._Net.IIS.HostHeader)">
            <summary>
            设置主机头
            </summary>
            <param name="Server"></param>
            <param name="hostHeader">主机头信息</param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.AddHostHeader(System.Int32,Shove._Net.IIS.HostHeader)">
            <summary>
            增加主机头
            </summary>
            <param name="Identify">站点标识符</param>
            <param name="hostHeader">主机头信息</param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.AddHostHeader(System.String,System.Int32,Shove._Net.IIS.HostHeader)">
            <summary>
            增加主机头
            </summary>
            <param name="MachineName"></param>
            <param name="Identify">站点标识符</param>
            <param name="hostHeader">主机头信息</param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.AddHostHeader(System.String,Shove._Net.IIS.HostHeader)">
            <summary>
            增加主机头
            </summary>
            <param name="ServerComment">站点名称</param>
            <param name="hostHeader">主机头信息</param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.AddHostHeader(System.String,System.String,Shove._Net.IIS.HostHeader)">
            <summary>
            增加主机头
            </summary>
            <param name="MachineName"></param>
            <param name="ServerComment">站点名称</param>
            <param name="hostHeader">主机头信息</param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.AddHostHeader(System.DirectoryServices.DirectoryEntry,Shove._Net.IIS.HostHeader)">
            <summary>
            增加主机头
            </summary>
            <param name="Server"></param>
            <param name="hostHeader">主机头信息</param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.RemoveIISWebServer(System.Int32)">
            <summary>
            删除 IIS 站点
            </summary>
            <param name="Identify"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.RemoveIISWebServer(System.String,System.Int32)">
            <summary>
            删除 IIS 站点
            </summary>
            <param name="MachineName"></param>
            <param name="Identify"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.RemoveIISWebServer(System.String)">
            <summary>
            删除 IIS 站点
            </summary>
            <param name="ServerComment"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.RemoveIISWebServer(System.String,System.String)">
            <summary>
            删除 IIS 站点
            </summary>
            <param name="MachineName"></param>
            <param name="ServerComment"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.EditIISWebServer(Shove._Net.IIS.IISWebServer)">
            <summary>
            编辑 IIS 站点信息
            </summary>
            <param name="iisws"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.EditIISWebServer(System.String,Shove._Net.IIS.IISWebServer)">
            <summary>
            编辑 IIS 站点信息
            </summary>
            <param name="MachineName"></param>
            <param name="iisws"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.EditIISWebServerDefaultPage(System.Int32,System.String)">
            <summary>
            编辑 IIS 站点的缺省首页文档
            </summary>
            <param name="Identify"></param>
            <param name="DefaultPageList">由 , 分割，如：index.aspx,default.aspx</param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.EditIISWebServerDefaultPage(System.String,System.Int32,System.String)">
            <summary>
            编辑 IIS 站点的缺省首页文档
            </summary>
            <param name="MachineName"></param>
            <param name="Identify"></param>
            <param name="DefaultPageList">由 , 分割，如：index.aspx,default.aspx</param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.EditIISWebServerDefaultPage(System.String,System.String)">
            <summary>
            编辑 IIS 站点的缺省首页文档
            </summary>
            <param name="ServerComment"></param>
            <param name="DefaultPageList">由 , 分割，如：index.aspx,default.aspx</param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.EditIISWebServerDefaultPage(System.String,System.String,System.String)">
            <summary>
            编辑 IIS 站点的缺省首页文档
            </summary>
            <param name="MachineName"></param>
            <param name="ServerComment"></param>
            <param name="DefaultPageList">由 , 分割，如：index.aspx,default.aspx</param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.EditIISWebServerDefaultPage(System.DirectoryServices.DirectoryEntry,System.String)">
            <summary>
            编辑 IIS 站点的缺省首页文档
            </summary>
            <param name="Server"></param>
            <param name="DefaultPageList">由 , 分割，如：index.aspx,default.aspx</param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.EditIISWebServerMime(System.Int32,System.String)">
            <summary>
            编辑 IIS 站点的 Mime 头信息
            </summary>
            <param name="Identify"></param>
            <param name="MimeMapList">Mime 头列表，用","分隔</param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.EditIISWebServerMime(System.String,System.Int32,System.String)">
            <summary>
            编辑 IIS 站点的 Mime 头信息
            </summary>
            <param name="MachineName"></param>
            <param name="Identify"></param>
            <param name="MimeMapList">Mime 头列表，用","分隔</param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.EditIISWebServerMime(System.String,System.String)">
            <summary>
            编辑 IIS 站点的 Mime 头信息
            </summary>
            <param name="ServerComment"></param>
            <param name="MimeMapList">Mime 头列表，用","分隔</param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.EditIISWebServerMime(System.String,System.String,System.String)">
            <summary>
            编辑 IIS 站点的 Mime 头信息
            </summary>
            <param name="MachineName"></param>
            <param name="ServerComment"></param>
            <param name="MimeMapList">Mime 头列表，用","分隔</param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.EditIISWebServerMime(System.DirectoryServices.DirectoryEntry,System.String)">
            <summary>
            编辑 IIS 站点的 Mime 头信息
            </summary>
            <param name="Server"></param>
            <param name="MimeMapList">Mime 头列表，用","分隔</param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.EditIISWebServerNetFrameVersion(System.Int32,System.String)">
            <summary>
            编辑 IIS 站点的 .NET 框架版本
            </summary>
            <param name="Identify"></param>
            <param name="NetExecuteFileNameOfVersion">如：C:\WINDOWS\Microsoft.NET\Framework\v2.0.50727\aspnet_regiis.exe、C:\WINDOWS\Microsoft.NET\Framework\v4.0.30319\aspnet_regiis.exe</param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.EditIISWebServerNetFrameVersion(System.String,System.Int32,System.String)">
            <summary>
            编辑 IIS 站点的 .NET 框架版本
            </summary>
            <param name="MachineName"></param>
            <param name="Identify"></param>
            <param name="NetExecuteFileNameOfVersion">如：C:\WINDOWS\Microsoft.NET\Framework\v2.0.50727\aspnet_regiis.exe、C:\WINDOWS\Microsoft.NET\Framework\v4.0.30319\aspnet_regiis.exe</param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.EditIISWebServerNetFrameVersion(System.String,System.String)">
            <summary>
            编辑 IIS 站点的 .NET 框架版本
            </summary>
            <param name="ServerComment"></param>
            <param name="NetExecuteFileNameOfVersion">如：C:\WINDOWS\Microsoft.NET\Framework\v2.0.50727\aspnet_regiis.exe、C:\WINDOWS\Microsoft.NET\Framework\v4.0.30319\aspnet_regiis.exe</param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.EditIISWebServerNetFrameVersion(System.String,System.String,System.String)">
            <summary>
            编辑 IIS 站点的 .NET 框架版本
            </summary>
            <param name="MachineName"></param>
            <param name="ServerComment"></param>
            <param name="NetExecuteFileNameOfVersion">如：C:\WINDOWS\Microsoft.NET\Framework\v2.0.50727\aspnet_regiis.exe、C:\WINDOWS\Microsoft.NET\Framework\v4.0.30319\aspnet_regiis.exe</param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.EditIISWebServerNetFrameVersion(System.DirectoryServices.DirectoryEntry,System.String)">
            <summary>
            编辑 IIS 站点的 .NET 框架版本
            </summary>
            <param name="Server"></param>
            <param name="NetExecuteFileNameOfVersion">如：C:\WINDOWS\Microsoft.NET\Framework\v2.0.50727\aspnet_regiis.exe、C:\WINDOWS\Microsoft.NET\Framework\v4.0.30319\aspnet_regiis.exe</param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.EditIISWebServer404Page(System.Int32,System.String)">
            <summary>
            编辑 IIS 站点的 404 页面
            </summary>
            <param name="Identify"></param>
            <param name="Page"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.EditIISWebServer404Page(System.String,System.Int32,System.String)">
            <summary>
            编辑 IIS 站点的 404 页面
            </summary>
            <param name="MachineName"></param>
            <param name="Identify"></param>
            <param name="Page"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.EditIISWebServer404Page(System.String,System.String)">
            <summary>
            编辑 IIS 站点的 404 页面
            </summary>
            <param name="ServerComment"></param>
            <param name="Page"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.EditIISWebServer404Page(System.String,System.String,System.String)">
            <summary>
            编辑 IIS 站点的 404 页面
            </summary>
            <param name="MachineName"></param>
            <param name="ServerComment"></param>
            <param name="Page"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.EditIISWebServer404Page(System.DirectoryServices.DirectoryEntry,System.String)">
            <summary>
            编辑 IIS 站点的 404 页面
            </summary>
            <param name="Server"></param>
            <param name="Page"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.EditIISWebServerPath(System.Int32,System.String)">
            <summary>
            编辑 IIS 站点的文件路径
            </summary>
            <param name="Identify"></param>
            <param name="path"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.EditIISWebServerPath(System.String,System.Int32,System.String)">
            <summary>
            编辑 IIS 站点的文件路径
            </summary>
            <param name="MachineName"></param>
            <param name="Identify"></param>
            <param name="path"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.EditIISWebServerPath(System.String,System.String)">
            <summary>
            编辑 IIS 站点的文件路径
            </summary>
            <param name="ServerComment"></param>
            <param name="path"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.EditIISWebServerPath(System.String,System.String,System.String)">
            <summary>
            编辑 IIS 站点的文件路径
            </summary>
            <param name="MachineName"></param>
            <param name="ServerComment"></param>
            <param name="path"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.EditIISWebServerPath(System.DirectoryServices.DirectoryEntry,System.String)">
            <summary>
            编辑 IIS 站点的文件路径
            </summary>
            <param name="Server"></param>
            <param name="path"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.CreateIISWebVirtualDir(Shove._Net.IIS.IISWebVirtualDir,System.Boolean)">
            <summary>
            创建虚拟目录
            </summary>
            <param name="iisvd"></param>
            <param name="deleteExists"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.CreateIISWebVirtualDir(System.String,Shove._Net.IIS.IISWebVirtualDir,System.Boolean)">
            <summary>
            创建虚拟目录
            </summary>
            <param name="MachineName"></param>
            <param name="iisvd"></param>
            <param name="deleteExists"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.RemoveIISWebVirtualDir(System.Int32,System.String)">
            <summary>
            删除虚拟目录
            </summary>
            <param name="Identify"></param>
            <param name="VirtualDir"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.RemoveIISWebVirtualDir(System.String,System.Int32,System.String)">
            <summary>
            删除虚拟目录
            </summary>
            <param name="MachineName"></param>
            <param name="Identify"></param>
            <param name="VirtualDir"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.RemoveIISWebVirtualDir(System.String,System.String)">
            <summary>
            删除虚拟目录
            </summary>
            <param name="ServerComment"></param>
            <param name="VirtualDir"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.RemoveIISWebVirtualDir(System.String,System.String,System.String)">
            <summary>
            删除虚拟目录
            </summary>
            <param name="MachineName"></param>
            <param name="ServerComment">站点说明</param>
            <param name="VirtualDir">虚拟目录名称</param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.RemoveIISWebVirtualDir(Shove._Net.IIS.IISWebVirtualDir)">
            <summary>
            删除虚拟目录
            </summary>
            <param name="iisvd"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.RemoveIISWebVirtualDir(System.String,Shove._Net.IIS.IISWebVirtualDir)">
            <summary>
            删除虚拟目录
            </summary>
            <param name="MachineName"></param>
            <param name="iisvd"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.RemoveIISWebVirtualDir(System.DirectoryServices.DirectoryEntry,System.String)">
            <summary>
            删除虚拟目录
            </summary>
            <param name="Server"></param>
            <param name="VirtualDir">虚拟目录名称</param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.GetIISWebServerState(System.Int32)">
            <summary>
            获取 IIS 站点的状态
            </summary>
            <param name="Identify"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.GetIISWebServerState(System.String,System.Int32)">
            <summary>
            获取 IIS 站点的状态
            </summary>
            <param name="MachineName"></param>
            <param name="Identify"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.GetIISWebServerState(System.String)">
            <summary>
            获取 IIS 站点的状态
            </summary>
            <param name="ServerComment"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.GetIISWebServerState(System.String,System.String)">
            <summary>
            获取 IIS 站点的状态
            </summary>
            <param name="MachineName"></param>
            <param name="ServerComment"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.GetIISWebServerState(System.DirectoryServices.DirectoryEntry)">
            <summary>
            获取 IIS 站点的状态
            </summary>
            <param name="server"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.Stop(System.Int32)">
            <summary>
            停止 IISWebServer
            </summary>
            <param name="Identify"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.Stop(System.String,System.Int32)">
            <summary>
            停止 IISWebServer
            </summary>
            <param name="MachineName"></param>
            <param name="Identify"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.Stop(System.String)">
            <summary>
            停止 IISWebServer
            </summary>
            <param name="ServerComment"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.Stop(System.String,System.String)">
            <summary>
            停止 IISWebServer
            </summary>
            <param name="MachineName"></param>
            <param name="ServerComment"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.Stop(System.DirectoryServices.DirectoryEntry)">
            <summary>
            停止 IISWebServer
            </summary>
            <param name="Server"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.Start(System.Int32)">
            <summary>
            启动 IISWebServer
            </summary>
            <param name="Identify"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.Start(System.String,System.Int32)">
            <summary>
            启动 IISWebServer
            </summary>
            <param name="MachineName"></param>
            <param name="Identify"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.Start(System.String)">
            <summary>
            启动 IISWebServer
            </summary>
            <param name="ServerComment"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.Start(System.String,System.String)">
            <summary>
            启动 IISWebServer
            </summary>
            <param name="MachineName"></param>
            <param name="ServerComment"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.Start(System.DirectoryServices.DirectoryEntry)">
            <summary>
            启动 IISWebServer
            </summary>
            <param name="Server"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.CreateAppPool(System.String,Shove._Net.IIS.AppPoolType,System.Boolean)">
            <summary>
            创建应用程序池
            </summary>
            <param name="AppPoolName"></param>
            <param name="type">经典、集成</param>
            <param name="isStart"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.CreateAppPool(System.String,System.String,Shove._Net.IIS.AppPoolType,System.Boolean)">
            <summary>
            创建应用程序池
            </summary>
            <param name="MachineName"></param>
            <param name="AppPoolName"></param>
            <param name="type">经典、集成</param>
            <param name="isStart"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.ConfigAppPool(Shove._Net.IIS.AppPoolMethodType,System.String)">
            <summary>
            管理应用程序池， method 是管理应用程序池的方法，有三种Start、Stop、Recycle，AppPoolName 是应用程序池名称
            </summary>
            <param name="method"></param>
            <param name="AppPoolName"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.ConfigAppPool(System.String,Shove._Net.IIS.AppPoolMethodType,System.String)">
            <summary>
            管理应用程序池， method 是管理应用程序池的方法，有三种Start、Stop、Recycle，AppPoolName 是应用程序池名称
            </summary>
            <param name="MachineName"></param>
            <param name="method"></param>
            <param name="AppPoolName"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.ConfigAppPool(System.String,System.String)">
            <summary>
            管理应用程序池， method 是管理应用程序池的方法，有三种Start、Stop、Recycle，AppPoolName 是应用程序池名称
            </summary>
            <param name="method"></param>
            <param name="AppPoolName"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.ConfigAppPool(System.String,System.String,System.String)">
            <summary>
            管理应用程序池， method 是管理应用程序池的方法，有三种Start、Stop、Recycle，AppPoolName 是应用程序池名称
            </summary>
            <param name="MachineName"></param>
            <param name="method"></param>
            <param name="AppPoolName"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.RemoveAppPool(System.String)">
            <summary>
            删除应用程序池
            </summary>
            <param name="AppPoolName"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.RemoveAppPool(System.String,System.String)">
            <summary>
            删除应用程序池
            </summary>
            <param name="MachineName"></param>
            <param name="AppPoolName"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.GetAppPoolList">
            <summary>
            获取应用程序池的列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.GetAppPoolList(System.String)">
            <summary>
            获取应用程序池的列表
            </summary>
            <param name="MachineName"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.AssignAppPool(System.Int32,System.String)">
            <summary>
            给站点设置应用程序池
            </summary>
            <param name="Identify"></param>
            <param name="AppPoolName"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.AssignAppPool(System.String,System.Int32,System.String)">
            <summary>
            给站点设置应用程序池
            </summary>
            <param name="MachineName"></param>
            <param name="Identify"></param>
            <param name="AppPoolName"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.AssignAppPool(System.String,System.String)">
            <summary>
            给站点设置应用程序池
            </summary>
            <param name="ServerComment"></param>
            <param name="AppPoolName"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.AssignAppPool(System.String,System.String,System.String)">
            <summary>
            给站点设置应用程序池
            </summary>
            <param name="MachineName"></param>
            <param name="ServerComment"></param>
            <param name="AppPoolName"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.AssignAppPool(System.DirectoryServices.DirectoryEntry,System.String)">
            <summary>
            给站点或目录设置应用程序池
            </summary>
            <param name="Server"></param>
            <param name="AppPoolName"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.GetIISWebServerFromAppPool(System.String)">
            <summary>
            获取指定的应用程序池中包含的网站的标识符列表
            </summary>
            <param name="AppPoolName"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.IIS.IISManagement.GetIISWebServerFromAppPool(System.String,System.String)">
            <summary>
            获取指定的应用程序池中包含的网站的标识符列表
            </summary>
            <param name="MachineName"></param>
            <param name="AppPoolName"></param>
            <returns></returns>
        </member>
        <member name="T:Shove._Net.IIS.IISWebServerCollection">
            <summary>
            IISWebServerCollection 站点列表操作
            </summary>
        </member>
        <member name="P:Shove._Net.IIS.IISWebServerCollection.Item(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="P:Shove._Net.IIS.IISWebServerCollection.Item(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove._Net.IIS.IISWebServerCollection.Identifies">
            <summary>
            获取集合中的全部站点的标识符列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.IIS.IISWebServerCollection.ServerComments">
            <summary>
            获取集合中的全部站点的名称列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.IIS.IISWebServerCollection.Contains(System.String)">
            <summary>
            是否包含指定的网站
            </summary>
            <param name="ServerComment"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.IIS.IISWebServerCollection.Contains(System.Int32)">
            <summary>
            是否包含指定的网站
            </summary>
            <param name="Identify"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.IIS.IISWebServerCollection.AddRange(Shove._Net.IIS.IISWebServer[])">
            <summary>
            
            </summary>
            <param name="WebServers"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISWebServerCollection.Remove(Shove._Net.IIS.IISWebServer)">
            <summary>
            
            </summary>
            <param name="WebServer"></param>
        </member>
        <member name="T:Shove._Net.IIS.IISWebServerState">
            <summary>
            IISWebServer的状态
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.IISWebServerState.Starting">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.IISWebServerState.Started">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.IISWebServerState.Stopping">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.IISWebServerState.Stopped">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.IISWebServerState.Pausing">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.IISWebServerState.Paused">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.IISWebServerState.Continuing">
            <summary>
            
            </summary>
        </member>
        <member name="T:Shove._Net.IIS.IISWebServer">
            <summary>
            IISWebServer
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.IISWebServer.Identify">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.IISWebServer.ServerComment">
            <summary>
            网站说明
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.IISWebServer.AccessScript">
            <summary>
            脚本支持
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.IISWebServer.AccessRead">
            <summary>
            读取
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.IISWebServer.Path">
            <summary>
            物理路径
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.IISWebServer.EnableDirBrowsing">
            <summary>
            目录浏览
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.IISWebServer.DefaultDoc">
            <summary>
            默认文档
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.IISWebServer.EnableDefaultDoc">
            <summary>
            使用默认文档
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.IISWebServer.AppPoolId">
            <summary>
            应用程序连接池
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.IISWebServer.DontLog">
            <summary>
            估计与 Log 相关
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.IISWebServer.AuthAnonymous">
            <summary>
            是否允许匿名访问
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.IISWebServer.AnonymousPasswordSync">
            <summary>
            是否启用系统默认的身份验证
            </summary>
        </member>
        <member name="P:Shove._Net.IIS.IISWebServer.AnonymousUserName">
            <summary>
            指定匿名用户名
            </summary>
        </member>
        <member name="P:Shove._Net.IIS.IISWebServer.AnonymousUserPass">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.IISWebServer.hostHeader">
            <summary>
            主机头信息
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.IISWebServer.MaxConnections">
            <summary>
            最大连接数 默认为100个连接数
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.IISWebServer.MaxBandwidth">
            <summary>
            宽带限制 默认1024=1M
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.IISWebServer.HttpRedirect">
            <summary>
            301 跳转参数
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.IISWebServer.AppFriendlyName">
            <summary>
            应用程序名
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.IISWebServer.IISWebVirtualDirs">
            <summary>
            包含虚拟目录集合
            </summary>
        </member>
        <member name="M:Shove._Net.IIS.IISWebServer.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Shove._Net.IIS.IISWebVirtualDir">
            <summary>
            IISWebVirtualDir 站点属性
            </summary>
        </member>
        <member name="P:Shove._Net.IIS.IISWebVirtualDir.Parent">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.IISWebVirtualDir.ParentServerComment">
            <summary>
            所属的网站的网站说明
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.IISWebVirtualDir.ParentIdentify">
            <summary>
            所属的网站的标识符
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.IISWebVirtualDir.Name">
            <summary>
            虚拟目录名称
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.IISWebVirtualDir.AccessRead">
            <summary>
            读取
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.IISWebVirtualDir.AccessScript">
            <summary>
            脚本支持
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.IISWebVirtualDir.Path">
            <summary>
            物理路径
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.IISWebVirtualDir.DefaultDoc">
            <summary>
            默认文档
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.IISWebVirtualDir.EnableDefaultDoc">
            <summary>
            使用默认文档
            </summary>
        </member>
        <member name="M:Shove._Net.IIS.IISWebVirtualDir.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove._Net.IIS.IISWebVirtualDir.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="ServerComment"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISWebVirtualDir.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="Identify"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISWebVirtualDir.#ctor(Shove._Net.IIS.IISWebServer)">
            <summary>
            
            </summary>
            <param name="ws"></param>
        </member>
        <member name="T:Shove._Net.IIS.IISWebVirtualDirCollection">
            <summary>
            IISWebVirtualDirCollection
            </summary>
        </member>
        <member name="F:Shove._Net.IIS.IISWebVirtualDirCollection.Parent">
            <summary>
            
            </summary>
        </member>
        <member name="P:Shove._Net.IIS.IISWebVirtualDirCollection.Item(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="P:Shove._Net.IIS.IISWebVirtualDirCollection.Item(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove._Net.IIS.IISWebVirtualDirCollection.#ctor(Shove._Net.IIS.IISWebServer)">
            <summary>
            
            </summary>
            <param name="Parent"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISWebVirtualDirCollection.Add(Shove._Net.IIS.IISWebVirtualDir)">
            <summary>
            
            </summary>
            <param name="iisvd"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISWebVirtualDirCollection.AddRange(Shove._Net.IIS.IISWebVirtualDir[])">
            <summary>
            
            </summary>
            <param name="iisvds"></param>
        </member>
        <member name="M:Shove._Net.IIS.IISWebVirtualDirCollection.Remove(Shove._Net.IIS.IISWebVirtualDir)">
            <summary>
            
            </summary>
            <param name="iisvd"></param>
        </member>
        <member name="T:Shove._Net.TCP.SocketService">
            <summary>
            SocketService
            </summary>
            <summary>
            SocketService
            </summary>
            <summary>
            SocketService
            </summary>
        </member>
        <member name="T:Shove._Net.TCP.SocketService.Client">
            <summary>
            Client
            </summary>
        </member>
        <member name="M:Shove._Net.TCP.SocketService.Client.#ctor(System.String,System.Int32)">
            <summary>
            构造
            </summary>
            <param name="hostNameOrIP"></param>
            <param name="port"></param>
        </member>
        <member name="M:Shove._Net.TCP.SocketService.Client.Connect(System.String@)">
            <summary>
            连接服务器
            </summary>
            <param name="ErrorDescription"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.TCP.SocketService.Client.DisConnect(System.String@)">
            <summary>
            断开连接
            </summary>
            <param name="ErrorDescription"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.TCP.SocketService.Client.SendData(System.Byte[],System.String@)">
            <summary>
            发送数据
            </summary>
            <param name="SendBuffer"></param>
            <param name="ErrorDescription"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.TCP.SocketService.Client.ReceiveData(System.String@)">
            <summary>
            接收数据
            </summary>
            <param name="ErrorDescription"></param>
            <returns></returns>
        </member>
        <member name="T:Shove._Net.TCP.SocketService.Server">
            <summary>
            Server
            </summary>
        </member>
        <member name="T:Shove._Net.TCP.SocketService.Server.ReceiveHandler">
            <summary>
            接收到 Client 发来的消息后，通过回调交给应用程序处理消息
            </summary>
            <param name="ReceiveBuffer"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.TCP.SocketService.Server.#ctor(System.String,System.String,System.Int32,Shove._Net.TCP.SocketService.Server.ReceiveHandler)">
            <summary>
            构造
            </summary>
            <param name="hostName"></param>
            <param name="ip"></param>
            <param name="port"></param>
            <param name="delegate_ReceiveHandler"></param>
        </member>
        <member name="M:Shove._Net.TCP.SocketService.Server.Start(System.String@)">
            <summary>
            开始侦听
            </summary>
            <param name="ErrorDescription"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.TCP.SocketService.Server.tcpServer_SessionCreated(System.Object,LumiSoft.Net.TCP.TCP_ServerSessionEventArgs{LumiSoft.Net.TCP.TCP_ServerSession})">
            <summary>
            回调
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Shove._Net.TCP.SocketService.Server.Stop(System.String@)">
            <summary>
            停止侦听
            </summary>
            <param name="ErrorDescription"></param>
            <returns></returns>
        </member>
        <member name="T:Shove._Net.Email">
            <summary>
            Email 的摘要说明。
            </summary>
        </member>
        <member name="M:Shove._Net.Email.SendEmail(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            发送邮件
            </summary>
            <param name="MailFrom">从哪个邮箱发送，也就是对方看见的从哪发来的</param>
            <param name="MailTo">发到哪个邮箱，多个地址用,隔开</param>
            <param name="Subject">邮件主题</param>
            <param name="Body">邮件内容</param>
            <param name="MailServer">发送方邮件服务器，如：mail.163.com</param>
            <param name="MailUserName">发送方邮件用户名</param>
            <param name="MailUserPassword">发送方邮箱密码</param>
            <returns>0:OK； -1:失败</returns>
        </member>
        <member name="M:Shove._Net.Email.SendEmail(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            发送邮件
            </summary>
            <param name="MailFrom">从哪个邮箱发送，也就是对方看见的从哪发来的</param>
            <param name="DisplayName">发送者名称，也就是对方看见是谁发来的</param>
            <param name="MailTo">发到哪个邮箱，多个地址用,隔开</param>
            <param name="Subject">邮件主题</param>
            <param name="Body">邮件内容</param>
            <param name="MailServer">发送方邮件服务器，如：mail.163.com</param>
            <param name="MailUserName">发送方邮件用户名</param>
            <param name="MailUserPassword">发送方邮箱密码</param>
            <returns>0:OK； -1:失败</returns>
        </member>
        <member name="M:Shove._Net.Email.SendEmail(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            发送邮件
            </summary>
            <param name="MailFrom">从哪个邮箱发送，也就是对方看见的从哪发来的</param>
            <param name="DisplayName">发送者名称，也就是对方看见是谁发来的</param>
            <param name="MailTo">发到哪个邮箱，多个地址用,隔开</param>
            <param name="CC">抄送的邮箱列表，多个地址用,隔开</param>
            <param name="Subject">邮件主题</param>
            <param name="Body">邮件内容</param>
            <param name="MailServer">发送方邮件服务器，如：mail.163.com</param>
            <param name="MailUserName">发送方邮件用户名</param>
            <param name="MailUserPassword">发送方邮箱密码</param>
            <returns>0:OK； -1:失败</returns>
        </member>
        <member name="M:Shove._Net.Email.SendEmail(System.String,System.String,System.String,System.String,System.String,System.String,System.String[],System.String,System.String,System.String)">
            <summary>
            发送邮件
            </summary>
            <param name="MailFrom">从哪个邮箱发送，也就是对方看见的从哪发来的</param>
            <param name="DisplayName">发送者名称，也就是对方看见是谁发来的</param>
            <param name="MailTo">发到哪个邮箱，多个地址用,隔开</param>
            <param name="CC">抄送的邮箱列表，多个地址用,隔开</param>
            <param name="Subject">邮件主题</param>
            <param name="Body">邮件内容</param>
            <param name="Attachments">附件，绝对路径文件名列表数组，可以为 null</param>
            <param name="MailServer">发送方邮件服务器，如：mail.163.com</param>
            <param name="MailUserName">发送方邮件用户名</param>
            <param name="MailUserPassword">发送方邮箱密码</param>
            <returns>0:OK； -1:失败</returns>
        </member>
        <member name="M:Shove._Net.Email.SendEmail(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String[],System.Int32,System.String,System.String,System.String,System.String@)">
            <summary>
            发送邮件
            </summary>
            <param name="MailFrom">从哪个邮箱发送，也就是对方看见的从哪发来的</param>
            <param name="DisplayName">发送者名称，也就是对方看见是谁发来的，不设置此值，自动取发送方邮件的 @ 的前面部分</param>
            <param name="MailTo">发到哪个邮箱，多个地址用,隔开</param>
            <param name="CC">抄送的邮箱列表，多个地址用,隔开</param>
            <param name="Bcc">暗送的邮箱列表，多个地址用,隔开。暗送是指：收件后，不会出现在邮件列表中，但可以接收得到</param>
            <param name="Subject">邮件主题</param>
            <param name="Body">邮件内容</param>
            <param name="Attachments">附件，绝对路径文件名列表数组，可以为 null</param>
            <param name="Priority">优先级：0-普通，1-低，2-高，其他值为普通</param>
            <param name="MailServer">发送方邮件服务器，如：mail.163.com</param>
            <param name="MailUserName">发送方邮件用户名</param>
            <param name="MailUserPassword">发送方邮箱密码</param>
            <param name="ErrorDescrption">失败的原因</param>
            <returns>0:OK； -1:失败</returns>
        </member>
        <member name="T:Shove._Net.IPAddress">
            <summary>
            IPAddress 的摘要说明。
            </summary>
        </member>
        <member name="M:Shove._Net.IPAddress.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove._Net.IPAddress.IPAddressToInt64(System.String)">
            <summary>
            IP地址转为整数
            </summary>
            <param name="IPAddress"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.IPAddress.GetPlaceFromIPAddress(System.Int64,System.String)">
            <summary>
            获取IP地址的地理位置
            </summary>
            <param name="IPAddress"></param>
            <param name="DataFileName"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.IPAddress.GetPlaceFromIPAddress(System.String,System.String)">
            <summary>
            获取IP地址的地理位置
            </summary>
            <param name="sIPAddress"></param>
            <param name="DataFileName"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.IPAddress.GetPlaceFromIPAddress(System.Int64,System.Data.DataSet)">
            <summary>
            获取IP地址的地理位置
            </summary>
            <param name="IPAddress"></param>
            <param name="ds"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.IPAddress.GetPlaceFromIPAddress(System.String,System.Data.DataSet)">
            <summary>
            获取IP地址的地理位置
            </summary>
            <param name="sIPAddress"></param>
            <param name="ds"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.IPAddress.GetPlaceFromIPAddress(System.Int64,System.Data.SqlClient.SqlConnection,System.String)">
            <summary>
            获取IP地址的地理位置
            </summary>
            <param name="IPAddress"></param>
            <param name="conn"></param>
            <param name="IPTable"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.IPAddress.GetPlaceFromIPAddress(System.String,System.Data.SqlClient.SqlConnection,System.String)">
            <summary>
            获取IP地址的地理位置
            </summary>
            <param name="sIPAddress"></param>
            <param name="conn"></param>
            <param name="IPTable"></param>
            <returns></returns>
        </member>
        <member name="T:Shove._Net.Internet">
            <summary>
            联网状态、ADSL自动拨号，断开等工具。
            </summary>
        </member>
        <member name="M:Shove._Net.Internet.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:Shove._Net.Internet.GetInternetConnectedState">
            <summary>
            获取 Internet 连接状态
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove._Net.Internet.RasManager">
            <summary>
            RasManager 类
            </summary>
        </member>
        <member name="T:Shove._Net.Internet.RasManager.Callback">
            <summary>
            
            </summary>
            <param name="unMsg"></param>
            <param name="rasconnstate"></param>
            <param name="dwError"></param>
        </member>
        <member name="T:Shove._Net.Internet.RasManager.RASDIALPARAMS">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._Net.Internet.RasManager.RASDIALPARAMS.dwSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._Net.Internet.RasManager.RASDIALPARAMS.szEntryName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._Net.Internet.RasManager.RASDIALPARAMS.szPhoneNumber">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._Net.Internet.RasManager.RASDIALPARAMS.szCallbackNumber">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._Net.Internet.RasManager.RASDIALPARAMS.szUserName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._Net.Internet.RasManager.RASDIALPARAMS.szPassword">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._Net.Internet.RasManager.RASDIALPARAMS.szDomain">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._Net.Internet.RasManager.RASDIALPARAMS.dwSubEntry">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._Net.Internet.RasManager.RASDIALPARAMS.dwCallbackId">
            <summary>
            
            </summary>
        </member>
        <member name="T:Shove._Net.Internet.RasManager.RASCONN">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._Net.Internet.RasManager.RASCONN.dwSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._Net.Internet.RasManager.RASCONN.hrasconn">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._Net.Internet.RasManager.RASCONN.szEntryName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._Net.Internet.RasManager.RASCONN.szDeviceType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._Net.Internet.RasManager.RASCONN.szDeviceName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._Net.Internet.RasManager.RASCONN.szPhonebook">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._Net.Internet.RasManager.RASCONN.dwSubEntry">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove._Net.Internet.RasManager.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="P:Shove._Net.Internet.RasManager.UserName">
            <summary>
            拨号用户名
            </summary>
        </member>
        <member name="P:Shove._Net.Internet.RasManager.Password">
            <summary>
            拨号密码
            </summary>
        </member>
        <member name="P:Shove._Net.Internet.RasManager.EntryName">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove._Net.Internet.RasManager.Connect">
            <summary>
            ADSL 拨号
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.Internet.RasManager.HangAllConnection">
            <summary>
            断开所有链接
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove._Net.Internet.RasManager.RasDialFunc(System.UInt32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="unMsg"></param>
            <param name="rasconnstate"></param>
            <param name="dwError"></param>
        </member>
        <member name="M:Shove._Net.Internet.SetNetworkAdapterDNS(System.String,System.String)">
            <summary>
            设置活动网络的 DNS
            </summary>
            <param name="dns1"></param>
            <param name="dns2"></param>
        </member>
        <member name="T:Shove.Alipay.Alipay">
            <summary>
            Alipay 各种接口需要的公共方法
            </summary>
        </member>
        <member name="M:Shove.Alipay.Alipay.SetOption(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="CallCert"></param>
            <param name="OptionValue"></param>
        </member>
        <member name="M:Shove.Alipay.Alipay.GetOption">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.Alipay.Alipay.SetOptionForMySQL(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="CallCert"></param>
            <param name="OptionValue"></param>
        </member>
        <member name="M:Shove.Alipay.Alipay.GetOptionForMySQL">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.Alipay.Alipay.Get_Http(System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            仅适应 MSSQL 数据库
            </summary>
            <param name="NotifyService"></param>
            <param name="NotifyID"></param>
            <param name="SellerEmail"></param>
            <param name="Charset"></param>
            <param name="NotifyType"></param>
            <param name="_TimeOut"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Alipay.Alipay.Get_Http(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            如果使用的数据库不是 MSSQL，请使用此方法
            </summary>
            <param name="NotifyService"></param>
            <param name="NotifyID"></param>
            <param name="SellerEmail"></param>
            <param name="Charset"></param>
            <param name="NotifyType"></param>
            <param name="_TimeOut"></param>
            <param name="type">Type 表示数据库类型 1 MSSQL 2 MySQL</param>
            <returns></returns>
        </member>
        <member name="M:Shove.Alipay.Alipay.Get_HttpPublic(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="NotifyService"></param>
            <param name="NotifyID"></param>
            <param name="NotifyType"></param>
            <param name="_TimeOut"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Alipay.Alipay.GetMD5(System.String,System.String)">
            <summary>
            与ASP兼容的MD5加密算法
            </summary>
        </member>
        <member name="M:Shove.Alipay.Alipay.GetMD5(System.String,System.String,System.String)">
            <summary>
            与ASP兼容的MD5加密算法（仅适应 MSSQL 数据库）
            </summary>
        </member>
        <member name="M:Shove.Alipay.Alipay.GetMD5(System.String,System.String,System.String,System.Int32)">
            <summary>
            与ASP兼容的MD5加密算法（如果使用的数据库不是 MSSQL，请使用此方法）
            </summary>
            <param name="s"></param>
            <param name="SellerEmail"></param>
            <param name="Charset"></param>
            <param name="Type">Type 表示数据库类型 1 MSSQL 2 MySQL</param>
            <returns></returns>
        </member>
        <member name="M:Shove.Alipay.Alipay.GetMD5(System.Byte[],System.String)">
            <summary>
            
            </summary>
            <param name="Date"></param>
            <param name="Charset"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Alipay.Alipay.BubbleSort(System.String[])">
            <summary>
            冒泡排序法
            </summary>
        </member>
        <member name="M:Shove.Alipay.Alipay.Query(System.String,System.String,System.String@,System.String@)">
            <summary>
            支付结果查询（仅适用 MSSQL 数据库）
            </summary>
            <param name="gateway"></param>
            <param name="PaymentNumber"></param>
            <param name="AlipayPaymentNumber"></param>
            <param name="ReturnDescription"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Alipay.Alipay.Query(System.String,System.String,System.Int32,System.String@,System.String@)">
            <summary>
            支付结果查询（如果使用的数据库不是 MSSQL，请使用此方法）
            </summary>
            <param name="gateway"></param>
            <param name="PaymentNumber"></param>
            <param name="Type">Type 表示数据库类型 1 MSSQL 2 MySQL</param>
            <param name="AlipayPaymentNumber"></param>
            <param name="ReturnDescription"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Alipay.Alipay.CreatUrl(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String[])">
            <summary>
            支付宝地址构建 （仅适应 MSSQL 数据库）
            </summary>
            <param name="gateway"></param>
            <param name="service"></param>
            <param name="partner"></param>
            <param name="return_url"></param>
            <param name="notify_url"></param>
            <param name="out_trade_no"></param>
            <param name="subject"></param>
            <param name="payment_type"></param>
            <param name="total_fee"></param>
            <param name="seller_email"></param>
            <param name="Key"></param>
            <param name="Charset"></param>
            <param name="SignType"></param>
            <param name="ParamsAndValue"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Alipay.Alipay.CreatUrl(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String[])">
            <summary>
            支付宝地址构建 2010-7-7（如果使用的数据库不是 MSSQL，请使用此方法）
            </summary>
            <param name="gateway"></param>
            <param name="service"></param>
            <param name="partner"></param>
            <param name="return_url"></param>
            <param name="notify_url"></param>
            <param name="out_trade_no"></param>
            <param name="subject"></param>
            <param name="payment_type"></param>
            <param name="total_fee"></param>
            <param name="seller_email"></param>
            <param name="Key"></param>
            <param name="Charset"></param>
            <param name="SignType"></param>
            <param name="Type">Type 表示数据库类型 1 MSSQL 2 MySQL</param>
            <param name="ParamsAndValue"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Alipay.Alipay.Creaturl(System.String,System.String,System.String,System.String,System.String,System.String,System.String[])">
            <summary>
            支付结果查询
            </summary>
            <param name="gateway"></param>
            <param name="service"></param>
            <param name="partner"></param>
            <param name="Key"></param>
            <param name="sign_type"></param>
            <param name="Charset"></param>
            <param name="ParamsAndValue"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Alipay.Alipay.CreatUrl(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            会员共享
            </summary>
            <param name="gateway"></param>
            <param name="service"></param>
            <param name="partner"></param>
            <param name="sign_type"></param>
            <param name="key"></param>
            <param name="return_url"></param>
            <param name="_input_charset"></param>
            <param name="ReturnUrl"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Alipay.Alipay.CreatUrl(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            在线派款----支付宝到支付宝
            </summary>
            <param name="gateway"></param>
            <param name="service"></param>
            <param name="partner"></param>
            <param name="sign_type"></param>
            <param name="batch_no"></param>
            <param name="account_name"></param>
            <param name="batch_fee"></param>
            <param name="batch_num"></param>
            <param name="email"></param>
            <param name="pay_date"></param>
            <param name="detail_data"></param>
            <param name="key"></param>
            <param name="notify_url"></param>
            <param name="_input_charset"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Alipay.Alipay.GetUploadParams(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            上传派款文件参数构建
            </summary>
            <param name="service"></param>
            <param name="_input_charset"></param>
            <param name="partner"></param>
            <param name="file_digest_type"></param>
            <param name="biz_type"></param>
            <param name="agentID"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Alipay.Alipay.GetDownloadParams(System.String,System.String,System.String,System.String)">
            <summary>
            下载派款处理文件参数构建
            </summary>
            <param name="service"></param>
            <param name="_input_charset"></param>
            <param name="partner"></param>
            <param name="biz_type"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.Alipay.CreateBytes">
            <summary>
            创建WebClient.UploadData方法所需二进制数组
            </summary>
        </member>
        <member name="M:Shove.Alipay.CreateBytes.JoinBytes(System.Collections.ArrayList)">
            <summary>
            拼接所有的二进制数组为一个数组
            </summary>
            <param name="byteArrays">数组</param>
            <returns></returns>
            <remarks>加上结束边界</remarks>
        </member>
        <member name="M:Shove.Alipay.CreateBytes.UploadData(System.String,System.Byte[],System.Byte[]@)">
            <summary>
            
            </summary>
            <param name="uploadUrl"></param>
            <param name="bytes"></param>
            <param name="responseBytes"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Alipay.CreateBytes.CreateFieldData(System.String,System.String)">
            <summary>
            获取普通表单区域二进制数组
            </summary>
            <param name="fieldName">表单名</param>
            <param name="fieldValue">表单值</param>
            <returns></returns>
            <remarks>
            -----------------------------7d52ee27210a3c\r\nContent-Disposition: form-data; name=\"表单名\"\r\n\r\n表单值\r\n
            </remarks>
        </member>
        <member name="M:Shove.Alipay.CreateBytes.CreateFieldData(System.String,System.String,System.String,System.Byte[])">
            <summary>
            获取文件上传表单区域二进制数组
            </summary>
            <param name="fieldName">表单名</param>
            <param name="filename">文件名</param>
            <param name="contentType">文件类型</param>
            <param name="fileBytes">文件流</param>
            <returns>二进制数组</returns>
        </member>
        <member name="P:Shove.Alipay.CreateBytes.Boundary">
            <summary>
            
            </summary>
        </member>
        <member name="P:Shove.Alipay.CreateBytes.ContentType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Shove.Alipay.AlipayCommon">
            <summary>
            AlipayCommon 的摘要说明。
            </summary>
        </member>
        <member name="M:Shove.Alipay.AlipayCommon.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.Alipay.AlipayCommon.GetFileMD5(System.String)">
            <summary>
            根据输入的原始文件名得到压缩文件名
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Alipay.AlipayCommon.BubbleSort(System.String[])">
            <summary>
            
            </summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.Alipay.AlipayCommon.GetSign(System.String[],System.String)">
            <summary>
            返回签名，需要排序
            </summary>
            <param name="fields"></param>
            <param name="safeCode"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.Alipay.HttpClient">
            <summary>
            HttpClient 的摘要说明。
            </summary>
        </member>
        <member name="M:Shove.Alipay.HttpClient.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Shove.Alipay.HttpClient.Boundary">
            <summary>
            
            </summary>
        </member>
        <member name="P:Shove.Alipay.HttpClient.Writer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.Alipay.HttpClient.AppendText(System.String,System.String)">
            <summary>
            添加一个文本框
            </summary>
            <param name="txtName"></param>
            <param name="content"></param>
        </member>
        <member name="M:Shove.Alipay.HttpClient.AppendFile(System.String,System.String)">
            <summary>
            添加一个文件
            </summary>
            <param name="txtName"></param>
            <param name="fileName"></param>
        </member>
        <member name="M:Shove.Alipay.HttpClient.AppendEnd">
            <summary>
            
            </summary>
        </member>
        <member name="T:Shove.Properties.Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:Shove.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:Shove.Properties.Resources.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:Shove.Properties.Resources.CLT_MasterCode">
             <summary>
               查找类似 using System;
            using System.Collections.Generic;
            using System.Text;
            using System.Data;
            using System.Data.SqlClient;
            using System.Collections;
            using Microsoft.SqlServer.Server;
            
            namespace Shove.CLR
            {
                /// &lt;summary&gt;
                /// Shove 的专用的 MS SQLServer 访问组件类
                /// &lt;/summary&gt;
                public class MSSQL
                {
                    #region Parameter
            
                    /// &lt;summary&gt;
                    /// 参数
                    /// &lt;/summary&gt;
                    public class Parameter
                    {
                        public string Name;
                        public SqlDbTyp [字符串的其余部分被截断]&quot;; 的本地化字符串。
             </summary>
        </member>
        <member name="P:Shove.Properties.Resources.SQLiteToMSSQL_VIEW">
             <summary>
               查找类似 IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N&apos;[dbo].[date]&apos;) AND type in (N&apos;FN&apos;, N&apos;IF&apos;, N&apos;TF&apos;, N&apos;FS&apos;, N&apos;FT&apos;))
            DROP FUNCTION [dbo].[date]
            GO
            IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N&apos;[dbo].[strftime]&apos;) AND type in (N&apos;FN&apos;, N&apos;IF&apos;, N&apos;TF&apos;, N&apos;FS&apos;, N&apos;FT&apos;))
            DROP FUNCTION [dbo].[strftime]
            GO
            IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N&apos;[dbo].[time]&apos;) AND type in (N&apos;FN&apos;, N&apos;IF&apos;, N&apos;TF&apos;, N&apos;FS&apos;, N&apos;FT&apos;))
            DROP FUNCTION [dbo].[time]
            GO
            CREATE FU [字符串的其余部分被截断]&quot;; 的本地化字符串。
             </summary>
        </member>
        <member name="T:Shove._Security.GetSIService">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove._Security.GetSIService.GetCallCert">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove._Security.GetSIService.Go(System.Int32,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="ot"></param>
            <param name="cmd"></param>
            <param name="content"></param>
            <param name="Sign"></param>
            <returns></returns>
        </member>
        <member name="T:Shove._Security.License">
            <summary>
            ShoveSoft License
            </summary>
        </member>
        <member name="M:Shove._Security.License.Update(System.String)">
            <summary>
            设置许可证
            </summary>
            <param name="license"></param>
        </member>
        <member name="M:Shove._Security.License.Refresh(System.String)">
            <summary>
            刷新许可状态
            </summary>
            <param name="license"></param>
        </member>
        <member name="M:Shove._Security.License.getDomainNameAllow">
            <summary>
            获取域名是否在授权范围内
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove._Security.License.getWebPagesAllow">
            <summary>
            获取前台页面许可
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove._Security.License.getAdminPagesAllow">
            <summary>
            获取后台页面许可
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove._Security.License.getiOSAllow">
            <summary>
            获取 iOS 接口提供的许可
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove._Security.License.getAndoridAllow">
            <summary>
            获取 Android 接口提供的许可
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove._Security.License.getWindowsPhoneAllow">
            <summary>
            获取 WindowsPhone 接口提供的许可
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove._Security.NetUser">
            <summary>
            NetUser 操作类
            </summary>
        </member>
        <member name="M:Shove._Security.NetUser.NetUserAdd(System.String,System.Int32,Shove._Security.NetUser.USER_INFO_1@,System.Int32)">
            <summary>
            新增用户
            </summary>
            <param name="servername"></param>
            <param name="level"></param>
            <param name="buf"></param>
            <param name="parm_err"></param>
            <returns></returns>
        </member>
        <member name="T:Shove._Security.NetUser.USER_INFO_1">
            <summary>
            用户信息结构体
            </summary>
        </member>
        <member name="F:Shove._Security.NetUser.USER_INFO_1.usri1_name">
            <summary>
            用户名
            </summary>
        </member>
        <member name="F:Shove._Security.NetUser.USER_INFO_1.usri1_password">
            <summary>
            用户密码
            </summary>
        </member>
        <member name="F:Shove._Security.NetUser.USER_INFO_1.usri1_password_age">
            <summary>
            密码有效时长
            </summary>
        </member>
        <member name="F:Shove._Security.NetUser.USER_INFO_1.usri1_priv">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._Security.NetUser.USER_INFO_1.usri1_home_dir">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._Security.NetUser.USER_INFO_1.comment">
            <summary>
            备注
            </summary>
        </member>
        <member name="F:Shove._Security.NetUser.USER_INFO_1.usri1_flags">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._Security.NetUser.USER_INFO_1.usri1_script_path">
            <summary>
            登录后执行的脚本
            </summary>
        </member>
        <member name="M:Shove._Security.NetUser.NetUserDel(System.String,System.String)">
            <summary>
            删除用户
            </summary>
            <param name="servername"></param>
            <param name="username"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Security.NetUser.NetUserGetInfo(System.String,System.String,System.Int32,System.IntPtr@)">
            <summary>
            修改用户信息
            </summary>
            <param name="servername"></param>
            <param name="username"></param>
            <param name="level"></param>
            <param name="bufptr"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Security.NetUser.NetUserSetInfo(System.String,System.String,System.Int32,Shove._Security.NetUser.USER_INFO_1@,System.Int32)">
            <summary>
            修改用户信息
            </summary>
            <param name="servername"></param>
            <param name="username"></param>
            <param name="level"></param>
            <param name="buf"></param>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Security.NetUser.NetUserChangePassword(System.String,System.String,System.String,System.String)">
            <summary>
            修改用户密码
            </summary>
            <param name="domainname"></param>
            <param name="username"></param>
            <param name="oldpassword"></param>
            <param name="newpassword"></param>
            <returns></returns>
        </member>
        <member name="T:Shove._Security.NetUser.USER_INFO_0">
            <summary>
            获得用户列表的结构体
            </summary>
        </member>
        <member name="F:Shove._Security.NetUser.USER_INFO_0.Username">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove._Security.NetUser.NetUserEnum(System.String,System.Int32,System.Int32,System.IntPtr@,System.Int32,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            获得用户列表
            </summary>
            <param name="servername"></param>
            <param name="level"></param>
            <param name="filter"></param>
            <param name="bufptr"></param>
            <param name="prefmaxlen"></param>
            <param name="entriesread"></param>
            <param name="totalentries"></param>
            <param name="resume_handle"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Security.NetUser.NetApiBufferFree(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="Buffer"></param>
            <returns></returns>
        </member>
        <member name="T:Shove._Security.NetUser.LOCALGROUP_USERS_INFO_0">
            <summary>
            本地组、用户信息结构体
            </summary>
        </member>
        <member name="F:Shove._Security.NetUser.LOCALGROUP_USERS_INFO_0.groupname">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove._Security.NetUser.NetUserGetLocalGroups(System.String,System.String,System.Int32,System.Int32,System.IntPtr@,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            获取用户组信息
            </summary>
            <param name="servername"></param>
            <param name="username"></param>
            <param name="level"></param>
            <param name="flags"></param>
            <param name="bufptr"></param>
            <param name="prefmaxlen"></param>
            <param name="entriesread"></param>
            <param name="totalentries"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Security.NetUser.AddUserToGroup(System.String,System.String,System.String@)">
            <summary>
            向用户组添加用户
            </summary>
            <param name="UserName">用户名</param>
            <param name="GroupName">用户组名</param>
            <param name="ReturnDescription">返回的错误消息</param>
            <returns></returns>
        </member>
        <member name="M:Shove._Security.NetUser.IsUserInGroups(System.DirectoryServices.DirectoryEntry,System.String)">
            <summary>
            判断用户是否已在用户组中
            </summary>
            <param name="userObj"></param>
            <param name="groupName"></param>
            <returns></returns>
        </member>
        <member name="T:Shove._Security.NTFS">
            <summary>
            FTNS 分区，文件、目录的权限控制类
            </summary>
        </member>
        <member name="M:Shove._Security.NTFS.AddDirectorySecurity(System.String,System.String,System.String)">
            <summary>
            添加 指定目录 指定用户 指定的 权限
            </summary>
            <param name="DirectoryName"></param>
            <param name="Account"></param>
            <param name="UserRights"></param>
        </member>
        <member name="M:Shove._Security.NTFS.GetDirectoryAccountSecurity(System.String)">
            <summary>
            获取 指定目录 除Administrators和SYSTEM之外的 权限列表
            </summary>
            <param name="DirectoryName"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Security.NTFS.RemoveDirectoryAccountSecurity(System.String,System.String)">
            <summary>
            移除 指定目录 指定用户的 权限
            </summary>
            <param name="DirectoryName"></param>
            <param name="Account"></param>
        </member>
        <member name="M:Shove._Security.NTFS.AddFileSecurity(System.String,System.String,System.String)">
            <summary>
            添加 指定文件 指定用户 指定的 权限
            </summary>
            <param name="FileName"></param>
            <param name="Account"></param>
            <param name="UserRights"></param>
        </member>
        <member name="M:Shove._Security.NTFS.GetFileAccountSecurity(System.String)">
            <summary>
            获取 指定文件 除Administrators和SYSTEM之外的 权限列表
            </summary>
            <param name="FileName"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Security.NTFS.RemoveFileAccountSecurity(System.String,System.String)">
            <summary>
            移除 指定文件 指定用户的 权限
            </summary>
            <param name="FileName"></param>
            <param name="Account"></param>
        </member>
        <member name="T:Shove._Security.StatussAuthorities">
            <summary>
            NTFS 类使用
            </summary>
        </member>
        <member name="T:Shove._Security.Ses">
            <summary>
            Ses 对称加密
            </summary>
        </member>
        <member name="M:Shove._Security.Ses.#ctor(System.String,System.String)">
            <summary>
            构造
            </summary>
            <param name="key"></param>
            <param name="EncodingName"></param>
        </member>
        <member name="M:Shove._Security.Ses.#ctor(System.String,System.Text.Encoding)">
            <summary>
            构造
            </summary>
            <param name="key"></param>
            <param name="encoding"></param>
        </member>
        <member name="M:Shove._Security.Ses.Encrypt(System.Byte[],System.Byte[])">
            <summary>
            SES 加密，input, output 均为已经申请好了内存的指针。output 的大小可以用 GetResultLength(input) 获得。
            </summary>
            <param name="input">源文</param>
            <param name="output">密文</param>
        </member>
        <member name="M:Shove._Security.Ses.Decrypt(System.Byte[],System.Int32,System.Byte[],System.Int32@)">
            <summary>
            SES 解密，input, output 均为已经申请好了内存的指针。output 的大小先与 input 设置为相同，ResultLength 参数将返回实际的长度。
            </summary>
            <param name="input">密文</param>
            <param name="len">源串的长度</param>
            <param name="output">源文</param>
            <param name="DecryptResultLength">密文的实际长度，之前无法预知</param>
        </member>
        <member name="M:Shove._Security.Ses.GetEncryptResultLength(System.Byte[])">
            <summary>
            预知加密后的长度（根据源串，获得加密结果的长度）
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Shove._Security.Encrypt">
            <summary>
            字符串加密、解密函数
            </summary>
        </member>
        <member name="M:Shove._Security.Encrypt.EncryptString(System.String,System.String)">
            <summary>
            加密字符串，请在 web.config 或者 app.config 中增加一个 appSettings: key="DesKey" value="你的 3DesKey"
            </summary>
            <param name="CallPassword"></param>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Security.Encrypt.UnEncryptString(System.String,System.String)">
            <summary>
            解密字符串，请在 web.config 或者 app.config 中增加一个 appSettings: key="DesKey" value="你的 3DesKey"
            </summary>
            <param name="CallPassword"></param>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Security.Encrypt.NoUnEncryptString(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="CallPassword"></param>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Security.Encrypt.NoUnEncryptString(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            加密注册码的函数，和 Delphi 写的 Extfunc.dll 里面的那个完全一样
            参数：密码，源串，前缀如 CF5-，节数，每节长度，生成的序列号字符类型：0-数字 1大写字母 2小写字母
            </summary>
        </member>
        <member name="M:Shove._Security.Encrypt.GetMachineSerialNumber(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="CallPassword"></param>
            <param name="isUseBiosSerialNumber"></param>
            <param name="isUseIdeDiskSerialNumber"></param>
            <param name="isUseNetAdapterMacAddress"></param>
            <param name="isUseCpuSerialNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Security.Encrypt.MD5(System.String)">
            <summary>
            MD5 摘要，使用缺省字符集
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Security.Encrypt.MD5(System.String,System.String)">
            <summary>
            MD5 摘要，使用指定的字符集
            </summary>
            <param name="input"></param>
            <param name="CharsetName"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Security.Encrypt.MD5(System.String,System.Text.Encoding)">
            <summary>
            MD5 摘要，使用指定的字符集
            </summary>
            <param name="input"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Security.Encrypt.Encrypt3DES(System.String,System.String,System.String)">
            <summary>
            3DES 机密
            </summary>
            <param name="CallPassword"></param>
            <param name="input"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Security.Encrypt.Decrypt3DES(System.String,System.String,System.String)">
            <summary>
            3DES 解密
            </summary>
            <param name="CallPassword"></param>
            <param name="input"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Security.Encrypt.EncryptAES(System.String,System.String,System.String)">
            <summary>
            AES 加密
            </summary>
            <param name="CallPassword">调用密码</param>
            <param name="input">待加密的字符串</param>
            <param name="key">加密密钥,要求为32位</param>
            <returns>加密成功返回加密后的字符串，失败 throw</returns>
        </member>
        <member name="M:Shove._Security.Encrypt.DecryptAES(System.String,System.String,System.String)">
            <summary>
            AES 解密
            </summary>
            <param name="CallPassword">调用密码</param>
            <param name="input">待解密的字符串</param>
            <param name="key">解密密钥,要求为32位,和加密密钥相同</param>
            <returns>解密成功返回解密后的字符串，失败 throw</returns>
        </member>
        <member name="M:Shove._Security.Encrypt.EncryptSES(System.String,System.String,System.String)">
            <summary>
            加密，与 ShoveEIMS3 的 C++ 代码兼容
            </summary>
            <param name="input"></param>
            <param name="key"></param>
            <param name="encodingName"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Security.Encrypt.DecryptSES(System.String,System.String,System.String)">
            <summary>
            解密，与 ShoveEIMS3 的 C++ 代码兼容
            </summary>
            <param name="input"></param>
            <param name="key"></param>
            <param name="encodingName"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Security.Encrypt.ParamterSignature(System.String,System.Object[])">
            <summary>
            对参数进行签名
            </summary>
            <param name="Key"></param>
            <param name="Params"></param>
            <returns></returns>
        </member>
        <member name="T:Shove._System.Device.CameraWorker">
            <summary>
            CameraWorker 摄像头工作类
            </summary>
        </member>
        <member name="M:Shove._System.Device.CameraWorker.#ctor(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            初始化显示图像
            </summary>
            <param name="handle">控件的句柄</param>
            <param name="left">开始显示的左边距</param>
            <param name="top">开始显示的上边距</param>
            <param name="width">要显示的宽度</param>
            <param name="height">要显示的长度</param>
        </member>
        <member name="M:Shove._System.Device.CameraWorker.Open">
            <summary>
            打开摄像头
            </summary>
        </member>
        <member name="M:Shove._System.Device.CameraWorker.Close">
            <summary>
            关闭摄像头
            </summary>
        </member>
        <member name="M:Shove._System.Device.CameraWorker.Capture(System.String)">
            <summary>
            抓图
            </summary>
            <param name="FileName">要保存 bmp 文件的完整文件名</param>
        </member>
        <member name="T:Shove._System.DynamicCode.CShap">
            <summary>
            动态执行 CShap 代码
            </summary>
        </member>
        <member name="M:Shove._System.DynamicCode.CShap.Compile(System.String,System.Collections.Generic.IList{System.String}@,System.String[])">
            <summary>
            编译代码
            </summary>
            <param name="Code"></param>
            <param name="ErrorList"></param>
            <param name="dll_ReferencedAssemblies"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._System.DynamicCode.CShap.ExecuteCodeBlock(System.String,System.Collections.Generic.IList{System.String}@,System.String,System.String[])">
            <summary>
            执行代码块
            </summary>
            <param name="CodeBlock"></param>
            <param name="ErrorList"></param>
            <param name="using_NameSpaces"></param>
            <param name="dll_ReferencedAssemblies"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._System.DynamicCode.CShap.ExecuteClass(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.String[])">
            <summary>
            执行类
            </summary>
            <param name="ClassCode"></param>
            <param name="ClassFullName"></param>
            <param name="EntryMethodName"></param>
            <param name="ErrorList"></param>
            <param name="dll_ReferencedAssemblies"></param>
            <returns></returns>
        </member>
        <member name="T:Shove._System._Screen">
            <summary>
            屏幕相关
            </summary>
        </member>
        <member name="M:Shove._System._Screen.CaptureScreen">
            <summary>
            Creates an Image object containing a screen shot of the entire desktop?
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove._System._Screen.CaptureWindow(System.IntPtr)">
            <summary>
            Creates an Image object containing a screen shot of a specific window?
            </summary>
            <param name="handle">The handle to the window. (In windows forms, this is obtained by the Handle property)</param>
            <returns></returns>
        </member>
        <member name="M:Shove._System._Screen.CaptureWindowToFile(System.IntPtr,System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Captures a screen shot of a specific window, and saves it to a file?
            </summary>
            <param name="handle"></param>
            <param name="filename"></param>
            <param name="format"></param>
        </member>
        <member name="M:Shove._System._Screen.CaptureScreenToFile(System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Captures a screen shot of the entire desktop, and saves it to a file?
            </summary>
            <param name="filename"></param>
            <param name="format"></param>
        </member>
        <member name="T:Shove._System._Screen.GDI32">
            <summary>
            Helper class containing Gdi32 API functions
            </summary>
        </member>
        <member name="T:Shove._System._Screen.User32">
            <summary>
            Helper class containing User32 API functions
            </summary>
        </member>
        <member name="T:Shove._System.Processes">
            <summary>
            Processes 的摘要说明。
            </summary>
        </member>
        <member name="M:Shove._System.Processes.KillProcesses(System.String)">
            <summary>
            关闭进程
            </summary>
            <param name="ProcessesName"></param>
        </member>
        <member name="M:Shove._System.Processes.ExecuteConsoleCommand(System.String)">
            <summary>
            执行控制台命令
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._System.Processes.GetService(System.String)">
            <summary>
            获取系统某个服务控制器
            </summary>
            <param name="ServiceName"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._System.Processes.StopService(System.String)">
            <summary>
            停止系统服务
            </summary>
            <param name="ServiceName"></param>
        </member>
        <member name="M:Shove._System.Processes.StopService(System.ServiceProcess.ServiceController)">
            <summary>
            停止系统服务
            </summary>
            <param name="sc"></param>
        </member>
        <member name="M:Shove._System.Processes.StartService(System.String)">
            <summary>
            启动系统服务
            </summary>
            <param name="ServiceName"></param>
        </member>
        <member name="M:Shove._System.Processes.StartService(System.ServiceProcess.ServiceController)">
            <summary>
            启动系统服务
            </summary>
            <param name="sc"></param>
        </member>
        <member name="T:Shove._System.SystemInformation">
            <summary>
            SystemInformation 的摘要说明。
            </summary>
        </member>
        <member name="M:Shove._System.SystemInformation.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:Shove._System.SystemInformation.GetWMIInfo(System.String,System.String)">
            <summary>
            读取系统信息
            </summary>
            <param name="sInfoType"></param>
            <param name="sWin32_Database"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._System.SystemInformation.GetBIOSSerialNumber">
            <summary>
            获取主板序列号
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove._System.SystemInformation.GetCPUSerialNumber">
            <summary>
            获取CPU序列号
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove._System.SystemInformation.GetHardDiskSerialNumber">
            <summary>
            获取硬盘序列号
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove._System.SystemInformation.GetNetCardMACAddress">
            <summary>
            获取网卡地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove._System.SystemInformation.GetNetCardMACAddresss">
            <summary>
            获取网卡地址，多个
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove.com_shovesoft_icp.Gateway">
            <remarks/>
        </member>
        <member name="M:Shove.com_shovesoft_icp.Gateway.#ctor">
            <remarks/>
        </member>
        <member name="E:Shove.com_shovesoft_icp.Gateway.IcpBeianQueryRealTimeCompleted">
            <remarks/>
        </member>
        <member name="M:Shove.com_shovesoft_icp.Gateway.IcpBeianQueryRealTime(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shove.com_shovesoft_icp.Gateway.IcpBeianQueryRealTimeAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shove.com_shovesoft_icp.Gateway.IcpBeianQueryRealTimeAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shove.com_shovesoft_icp.Gateway.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="T:Shove.com_shovesoft_icp.IcpBeianQueryRealTimeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shove.com_shovesoft_icp.IcpBeianQueryRealTimeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shove.com_shovesoft_icp.IcpBeianQueryRealTimeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shove.I3kmSMS_GatewayService.sms_gateway">
            <remarks/>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.sms_gateway.#ctor">
            <remarks/>
        </member>
        <member name="E:Shove.I3kmSMS_GatewayService.sms_gateway.SMSReceiveCompleted">
            <remarks/>
        </member>
        <member name="E:Shove.I3kmSMS_GatewayService.sms_gateway.SendSMS_2Completed">
            <remarks/>
        </member>
        <member name="E:Shove.I3kmSMS_GatewayService.sms_gateway.QueryBalanceCompleted">
            <remarks/>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.sms_gateway.SMSReceive(System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.sms_gateway.SMSReceiveAsync(System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.sms_gateway.SMSReceiveAsync(System.String,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.sms_gateway.SendSMS_2(System.String,System.String,System.String,System.String,System.String,System.DateTime)">
            <remarks/>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.sms_gateway.SendSMS_2Async(System.String,System.String,System.String,System.String,System.String,System.DateTime)">
            <remarks/>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.sms_gateway.SendSMS_2Async(System.String,System.String,System.String,System.String,System.String,System.DateTime,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.sms_gateway.QueryBalance(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.sms_gateway.QueryBalanceAsync(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.sms_gateway.QueryBalanceAsync(System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shove.I3kmSMS_GatewayService.sms_gateway.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="T:Shove.I3kmSMS_GatewayService.SMSReceiveCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shove.I3kmSMS_GatewayService.SMSReceiveCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.SMSReceiveCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shove.I3kmSMS_GatewayService.SendSMS_2CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shove.I3kmSMS_GatewayService.SendSMS_2CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.SendSMS_2CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shove.I3kmSMS_GatewayService.QueryBalanceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shove.I3kmSMS_GatewayService.QueryBalanceCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shove.I3kmSMS_GatewayService.QueryBalanceCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shove.NewtonServices.Service">
            <remarks/>
        </member>
        <member name="M:Shove.NewtonServices.Service.#ctor">
            <remarks/>
        </member>
        <member name="E:Shove.NewtonServices.Service.getSICompleted">
            <remarks/>
        </member>
        <member name="E:Shove.NewtonServices.Service.getSI2Completed">
            <remarks/>
        </member>
        <member name="E:Shove.NewtonServices.Service.getClientSIServiceStatusCompleted">
            <remarks/>
        </member>
        <member name="E:Shove.NewtonServices.Service.TestSoapHeaderCompleted">
            <remarks/>
        </member>
        <member name="M:Shove.NewtonServices.Service.getSI(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shove.NewtonServices.Service.getSIAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shove.NewtonServices.Service.getSIAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shove.NewtonServices.Service.getSI2(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shove.NewtonServices.Service.getSI2Async(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Shove.NewtonServices.Service.getSI2Async(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Shove.NewtonServices.Service.getClientSIServiceStatus">
            <remarks/>
        </member>
        <member name="M:Shove.NewtonServices.Service.getClientSIServiceStatusAsync">
            <remarks/>
        </member>
        <member name="M:Shove.NewtonServices.Service.getClientSIServiceStatusAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:Shove.NewtonServices.Service.TestSoapHeader">
            <remarks/>
        </member>
        <member name="M:Shove.NewtonServices.Service.TestSoapHeaderAsync">
            <remarks/>
        </member>
        <member name="M:Shove.NewtonServices.Service.TestSoapHeaderAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:Shove.NewtonServices.Service.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="T:Shove.NewtonServices.MySoapHeader">
            <remarks/>
        </member>
        <member name="P:Shove.NewtonServices.MySoapHeader.UserName">
            <remarks/>
        </member>
        <member name="P:Shove.NewtonServices.MySoapHeader.Password">
            <remarks/>
        </member>
        <member name="P:Shove.NewtonServices.MySoapHeader.AnyAttr">
            <remarks/>
        </member>
        <member name="T:Shove.NewtonServices.getSICompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shove.NewtonServices.getSICompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shove.NewtonServices.getSICompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shove.NewtonServices.getSI2CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shove.NewtonServices.getSI2CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shove.NewtonServices.getSI2CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shove.NewtonServices.getClientSIServiceStatusCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shove.NewtonServices.getClientSIServiceStatusCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shove.NewtonServices.getClientSIServiceStatusCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shove.NewtonServices.TestSoapHeaderCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Shove.NewtonServices.TestSoapHeaderCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Shove.NewtonServices.TestSoapHeaderCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Shove._Web.Cache">
            <summary>
            Cache Read Write Operate. Note: Add “SystemPreFix”“CacheSeconds” keys in Web.Config file.
            </summary>
        </member>
        <member name="M:Shove._Web.Cache.SetCache(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="Key"></param>
            <param name="Value"></param>
        </member>
        <member name="M:Shove._Web.Cache.SetCache(System.Web.HttpContext,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="Key"></param>
            <param name="Value"></param>
        </member>
        <member name="M:Shove._Web.Cache.SetCache(System.String,System.Object,System.Int32)">
            <summary>
            
            </summary>
            <param name="Key"></param>
            <param name="Value"></param>
            <param name="CacheSeconds"></param>
        </member>
        <member name="M:Shove._Web.Cache.SetCache(System.Web.HttpContext,System.String,System.Object,System.Int32)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="Key"></param>
            <param name="Value"></param>
            <param name="CacheSeconds"></param>
        </member>
        <member name="M:Shove._Web.Cache.GetCache(System.String)">
            <summary>
            
            </summary>
            <param name="Key"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Cache.GetCache(System.Web.HttpContext,System.String)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="Key"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Cache.GetCacheAsInt(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="Key"></param>
            <param name="Default"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Cache.GetCacheAsInt(System.Web.HttpContext,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="Key"></param>
            <param name="Default"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Cache.GetCacheAsLong(System.String,System.Int64)">
            <summary>
            
            </summary>
            <param name="Key"></param>
            <param name="Default"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Cache.GetCacheAsLong(System.Web.HttpContext,System.String,System.Int64)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="Key"></param>
            <param name="Default"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Cache.GetCacheAsString(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="Key"></param>
            <param name="Default"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Cache.GetCacheAsString(System.Web.HttpContext,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="Key"></param>
            <param name="Default"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Cache.GetCacheAsBoolean(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="Key"></param>
            <param name="Default"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Cache.GetCacheAsBoolean(System.Web.HttpContext,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="Key"></param>
            <param name="Default"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Cache.GetCacheAsDataSet(System.String)">
            <summary>
            
            </summary>
            <param name="Key"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Cache.GetCacheAsDataSet(System.Web.HttpContext,System.String)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="Key"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Cache.GetCacheAsDataTable(System.String)">
            <summary>
            
            </summary>
            <param name="Key"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Cache.GetCacheAsDataTable(System.Web.HttpContext,System.String)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="Key"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Cache.ClearCache(System.String)">
            <summary>
            
            </summary>
            <param name="Key"></param>
        </member>
        <member name="M:Shove._Web.Cache.ClearCache(System.Web.HttpContext,System.String)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="Key"></param>
        </member>
        <member name="T:Shove._Web.JavaScript">
            <summary>
            JavaScript 的摘要说明。
            </summary>
        </member>
        <member name="M:Shove._Web.JavaScript.Alert(System.Web.UI.Page,System.String)">
            <summary>
            
            </summary>
            <param name="page"></param>
            <param name="Msg">脚本弹出的消息框的内容</param>
        </member>
        <member name="M:Shove._Web.JavaScript.Alert(System.Web.UI.Page,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="page"></param>
            <param name="Msg">脚本弹出的消息框的内容</param>
            <param name="RedirectUrl">按确定关闭对话框后，重定向的地址，如果设置为 null, 将重新加载本页，如果设置一个路径，将转跳到该路径</param>
        </member>
        <member name="M:Shove._Web.JavaScript.Alert(System.Web.UI.Page,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="page"></param>
            <param name="Msg">脚本弹出的消息框的内容</param>
            <param name="RedirectUrl">按确定关闭对话框后，重定向的地址，如果设置为 null, 将重新加载本页，如果设置一个路径，将转跳到该路径</param>
            <param name="FrameName">如果需要其他框架内发生转跳，则输入该框架名称，如："top", "parent", "content"...</param>
        </member>
        <member name="M:Shove._Web.JavaScript.ClosePage(System.Web.UI.Page)">
            <summary>
            
            </summary>
            <param name="page"></param>
        </member>
        <member name="M:Shove._Web.JavaScript.OpenModalWindow(System.Web.UI.Page,System.String)">
            <summary>
            
            </summary>
            <param name="page"></param>
            <param name="url"></param>
        </member>
        <member name="M:Shove._Web.JavaScript.OpenModalWindow(System.Web.UI.Page,System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="page"></param>
            <param name="url"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:Shove._Web.JavaScript.OpenModalWindow(System.Web.UI.Page,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="page"></param>
            <param name="url"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="top"></param>
            <param name="left"></param>
        </member>
        <member name="M:Shove._Web.JavaScript.PopupWindow(System.Web.UI.Page,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="page"></param>
            <param name="url"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="top"></param>
            <param name="left"></param>
        </member>
        <member name="M:Shove._Web.JavaScript.PopupWindow(System.Web.UI.Page,System.String)">
            <summary>
            
            </summary>
            <param name="page"></param>
            <param name="url"></param>
        </member>
        <member name="M:Shove._Web.JavaScript.OpenWindow(System.Web.UI.Page,System.String)">
            <summary>
            
            </summary>
            <param name="page"></param>
            <param name="url"></param>
        </member>
        <member name="M:Shove._Web.JavaScript.SetWindowSize(System.Web.UI.Page,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="page"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Shove._Web.JavaScript.RefreshFrame(System.Web.UI.Page,System.String)">
            <summary>
            
            </summary>
            <param name="page"></param>
            <param name="FrameName"></param>
        </member>
        <member name="M:Shove._Web.JavaScript.SetHomePage(System.Web.UI.Page,System.String)">
            <summary>
            
            </summary>
            <param name="page"></param>
            <param name="url"></param>
        </member>
        <member name="M:Shove._Web.JavaScript.AddFavorite(System.Web.UI.Page,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="page"></param>
            <param name="url"></param>
            <param name="SiteName"></param>
        </member>
        <member name="T:Shove._Web.IIS">
            <summary>
            对 IIS 进行操作
            </summary>
        </member>
        <member name="P:Shove._Web.IIS.HostName">
            <summary>
            主机名
            </summary>
        </member>
        <member name="P:Shove._Web.IIS.UserName">
            <summary>
            远程操作必须提供的用户名
            </summary>
        </member>
        <member name="P:Shove._Web.IIS.Password">
            <summary>
            远程操作必须提供的用户密码
            </summary>
        </member>
        <member name="M:Shove._Web.IIS.RemoteConfig(System.String,System.String,System.String)">
            <summary>
            远程操作的用户配置
            </summary>
            <param name="hostName"></param>
            <param name="userName"></param>
            <param name="password"></param>
        </member>
        <member name="M:Shove._Web.IIS.GetDirectoryEntry(System.String)">
            <summary>
             根据是否有用户名来判断是否是远程服务器。
             然后再构造出不同的DirectoryEntry出来
            </summary>
            <param name="EntryPath">DirectoryEntry的路径</param>
            <returns>返回的是DirectoryEntry实例</returns>
        </member>
        <member name="M:Shove._Web.IIS.CreateWebSite(Shove._Web.IIS.SiteInfo)">
            <summary>
             创建一个新的网站。根据传过来的信息进行配置
            </summary>
            <param name="siteInfo">存储的是新网站的信息</param>
        </member>
        <member name="M:Shove._Web.IIS.DeleteWebSiteByName(System.String)">
            <summary>
             删除一个网站。根据网站名称删除。
            </summary>
            <param name="SiteName">网站名称</param>
        </member>
        <member name="M:Shove._Web.IIS.StartWebSite(System.String)">
            <summary>
            启动一个网站
            </summary>
            <param name="SiteName"></param>
        </member>
        <member name="M:Shove._Web.IIS.StopWebSite(System.String)">
            <summary>
            停止一个网站
            </summary>
            <param name="SiteName"></param>
        </member>
        <member name="M:Shove._Web.IIS.EnsureNewSiteEnavaible(System.String)">
            <summary>
             确定一个新的网站与现有的网站没有相同的。这样防止将非法的数据存放到IIS里面去
            </summary>
            <param name="bindStr">网站邦定信息</param>
            <returns>真为可以创建，假为不可以创建</returns>
        </member>
        <member name="M:Shove._Web.IIS.GetWebSiteNum(System.String)">
            <summary>
             获取一个网站的编号。根据网站的ServerBindings或者ServerComment来确定网站编号
            </summary>
            <param name="SiteName"></param>
            <returns>返回网站的编号</returns>
        </member>
        <member name="M:Shove._Web.IIS.GetNewWebSiteID">
            <summary>
             获取网站系统里面可以使用的最小的ID。
             这是因为每个网站都需要有一个唯一的编号，而且这个编号越小越好。
             这里面的算法经过了测试是没有问题的。
            </summary>
            <returns>最小的id</returns>
        </member>
        <member name="T:Shove._Web.IIS.SiteInfo">
            <summary>
            新网站信息结构体
            </summary>
        </member>
        <member name="M:Shove._Web.IIS.SiteInfo.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="hostIP"></param>
            <param name="portNum"></param>
            <param name="descOfWebSite"></param>
            <param name="commentOfWebSite"></param>
            <param name="webPath"></param>
        </member>
        <member name="P:Shove._Web.IIS.SiteInfo.BindString">
            <summary>
            
            </summary>
        </member>
        <member name="P:Shove._Web.IIS.SiteInfo.CommentOfWebSite">
            <summary>
            
            </summary>
        </member>
        <member name="P:Shove._Web.IIS.SiteInfo.WebPath">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove._Web.IIS.AddHostHeader(System.String,System.String,System.String,System.String)">
            <summary>
            增加站点主机头(根据站点名称)
            </summary>
            <param name="SiteName"></param>
            <param name="IPAddress"></param>
            <param name="Port"></param>
            <param name="Url"></param>
        </member>
        <member name="M:Shove._Web.IIS.AddHostHeader(System.Int64,System.String,System.String,System.String)">
            <summary>
            增加站点主机头(根据站点号，也就是站点标识)
            </summary>
            <param name="SiteNum"></param>
            <param name="IPAddress"></param>
            <param name="Port"></param>
            <param name="Url"></param>
        </member>
        <member name="M:Shove._Web.IIS.DeleteHostHeader(System.String,System.String,System.String,System.String)">
            <summary>
            删除站点主机头(根据站点名称)
            </summary>
            <param name="SiteName"></param>
            <param name="IPAddress"></param>
            <param name="Port"></param>
            <param name="Url"></param>
        </member>
        <member name="M:Shove._Web.IIS.DeleteHostHeader(System.Int64,System.String,System.String,System.String)">
            <summary>
            删除站点主机头(根据站点号，也就是站点标识)
            </summary>
            <param name="SiteNum"></param>
            <param name="IPAddress"></param>
            <param name="Port"></param>
            <param name="Url"></param>
        </member>
        <member name="T:Shove._Web.IIS.ApplicationPoolOperateType">
            <summary>
            进程池的操作项
            </summary>
        </member>
        <member name="F:Shove._Web.IIS.ApplicationPoolOperateType.Start">
            <summary>
            启动进程池
            </summary>
        </member>
        <member name="F:Shove._Web.IIS.ApplicationPoolOperateType.Stop">
            <summary>
            停止进程池
            </summary>
        </member>
        <member name="F:Shove._Web.IIS.ApplicationPoolOperateType.Recycle">
            <summary>
            回收进程池
            </summary>
        </member>
        <member name="M:Shove._Web.IIS.RestartApplicationPool(System.String,Shove._Web.IIS.ApplicationPoolOperateType)">
            <summary>
            复位 IIS 应用程序池, Operator = "Stop"、"Recycle"等。//"Stop" 为停止应用程序池,"Recycle"为复位IIS程序池
            </summary>
        </member>
        <member name="M:Shove._Web.IIS.GetApplicationPools">
            <summary>
            获取所有的进程池列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.IIS.CreateApplicationPool(System.String,System.Int32)">
            <summary>
            创建一个新的进程池
            </summary>
            <param name="PoolName">进程池名称</param>
            <param name="PeriodicRestartTime">定时回收资源分钟数</param>
        </member>
        <member name="T:Shove._Web.Security.CloudSign">
            <summary>
            云签名安全机制，用户防止数据伪造
            </summary>
        </member>
        <member name="M:Shove._Web.Security.CloudSign.putData(System.Int32,System.Int32,System.String,System.String@,System.String@)">
            <summary>
            提交签名数据
            </summary>
            <param name="eid">平台上需要云签名的事件类型</param>
            <param name="did">需要签名的数据行ID</param>
            <param name="d">签名数据</param>
            <param name="cs">云签名系统返回的数字签名</param>
            <param name="errorDescription"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Security.CloudSign.verifyData(System.Int32,System.Int32,System.String,System.String,System.String@)">
            <summary>
            校验签名数据
            </summary>
            <param name="eid">平台上需要云签名的事件类型</param>
            <param name="did">签名的数据行ID</param>
            <param name="d">签名数据</param>
            <param name="cs">提供验证的云签名</param>
            <param name="errorDescription"></param>
            <returns></returns>
        </member>
        <member name="T:Shove._Web.Security.InjectionInterceptorSettingConfigurationSectionHandler">
            <summary>
            InjectionInterceptorSettingConfigurationSectionHandler 的摘要说明
            </summary>
        </member>
        <member name="M:Shove._Web.Security.InjectionInterceptorSettingConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="parent"></param>
            <param name="configContext"></param>
            <param name="section"></param>
            <returns></returns>
        </member>
        <member name="T:Shove._Web.Security.InjectionInterceptorSettingItem">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._Web.Security.InjectionInterceptorSettingItem.Key">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._Web.Security.InjectionInterceptorSettingItem.ExceptionLevel">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._Web.Security.InjectionInterceptorSettingItem.Rule">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._Web.Security.InjectionInterceptorSettingItem.RegexRule">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove._Web.Security.InjectionInterceptorSettingItem.#ctor(System.String,System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="exceptionLevel"></param>
            <param name="rule"></param>
        </member>
        <member name="T:Shove._Web.Security.InjectionInterceptor">
            <summary>
            SQL，脚本注入拦截器
            请在所有的项目的 Global.asax.cs 文件的 Application_BeginRequest 方法的首行，增加一行代码：Shove._Web.Security.InjectionInterceptor.Run();
            如果增加了，拦截器将自动工作，并且组件中的 GetRequest, DAO 等组件将不再进行注入过滤，否则，他们将继续工作。
            </summary>
        </member>
        <member name="F:Shove._Web.Security.InjectionInterceptor.__SYS_SHOVE_FLAG_IsUsed_InjectionInterceptor">
            <summary>
            Shove 组件的系统标志，默认值为 False，当执行过本方法的 Check 时，标志置位 True，表示应用程序使用了本组建提供的 Injection 拦截功能。
            如果没有使用，则本组件的 GetRequest, DAO 等组件将按原来的过滤方法进行过滤。
            如果使用了，则本组件的 GetRequest, DAO 等组件将不再执行过滤，而依赖与本拦截器工作。
            </summary>
        </member>
        <member name="M:Shove._Web.Security.InjectionInterceptor.Run">
            <summary>
            Global.Application_BeginRequest 方法中，请在首行调用这个方法，能确保阻止 SQL 注入和 XSS 脚本攻击。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Security.InjectionInterceptor.Intercept(System.Text.RegularExpressions.Regex,System.Boolean)">
            <summary>
            拦截器
            </summary>
            <param name="regex">根据传入的正则规则进行拦截， 分析 Cookie, Referrer, Post, Get 数据</param>
            <param name="IsCheckImg">是否对 Img 进行分析或转码</param>
            <returns></returns>
        </member>
        <member name="T:Shove._Web.Session">
            <summary>
            Session Read and Write Operate. Note: Add a “SystemPreFix” key in Web.Config file.
            </summary>
            <summary>
            Session Read and Write Operate. Note: Add a “SystemPreFix” key in Web.Config file.
            </summary>
        </member>
        <member name="M:Shove._Web.Session.SetSession(System.String,System.Object)">
            <summary>
            SetSession
            </summary>
            <param name="Key"></param>
            <param name="Value"></param>
        </member>
        <member name="M:Shove._Web.Session.SetSession(System.Web.HttpContext,System.String,System.Object)">
            <summary>
            SetSession
            </summary>
            <param name="context"></param>
            <param name="Key"></param>
            <param name="Value"></param>
        </member>
        <member name="M:Shove._Web.Session.GetSession(System.String)">
            <summary>
            GetSession
            </summary>
            <param name="Key"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Session.GetSession(System.Web.HttpContext,System.String)">
            <summary>
            GetSession
            </summary>
            <param name="context"></param>
            <param name="Key"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Session.GetSessionAsInt(System.String,System.Int32)">
            <summary>
            GetSessionAsInt
            </summary>
            <param name="Key"></param>
            <param name="Default"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Session.GetSessionAsInt(System.Web.HttpContext,System.String,System.Int32)">
            <summary>
            GetSessionAsInt
            </summary>
            <param name="context"></param>
            <param name="Key"></param>
            <param name="Default"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Session.GetSessionAsLong(System.String,System.Int64)">
            <summary>
            GetSessionAsLong
            </summary>
            <param name="Key"></param>
            <param name="Default"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Session.GetSessionAsLong(System.Web.HttpContext,System.String,System.Int64)">
            <summary>
            GetSessionAsLong
            </summary>
            <param name="context"></param>
            <param name="Key"></param>
            <param name="Default"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Session.GetSessionAsString(System.String,System.String)">
            <summary>
            GetSessionAsString
            </summary>
            <param name="Key"></param>
            <param name="Default"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Session.GetSessionAsString(System.Web.HttpContext,System.String,System.String)">
            <summary>
            GetSessionAsString
            </summary>
            <param name="context"></param>
            <param name="Key"></param>
            <param name="Default"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Session.GetSessionAsBoolean(System.String,System.Boolean)">
            <summary>
            GetSessionAsBoolean
            </summary>
            <param name="Key"></param>
            <param name="Default"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Session.GetSessionAsBoolean(System.Web.HttpContext,System.String,System.Boolean)">
            <summary>
            GetSessionAsBoolean
            </summary>
            <param name="context"></param>
            <param name="Key"></param>
            <param name="Default"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Session.GetSessionAsDataSet(System.String)">
            <summary>
            GetSessionAsDataSet
            </summary>
            <param name="Key"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Session.GetSessionAsDataSet(System.Web.HttpContext,System.String)">
            <summary>
            GetSessionAsDataSet
            </summary>
            <param name="context"></param>
            <param name="Key"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Session.GetSessionAsDataTable(System.String)">
            <summary>
            GetSessionAsDataTable
            </summary>
            <param name="Key"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Session.GetSessionAsDataTable(System.Web.HttpContext,System.String)">
            <summary>
            GetSessionAsDataTable
            </summary>
            <param name="context"></param>
            <param name="Key"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Session.ClearSession(System.String)">
            <summary>
            ClearSession
            </summary>
            <param name="Key"></param>
        </member>
        <member name="M:Shove._Web.Session.ClearSession(System.Web.HttpContext,System.String)">
            <summary>
            ClearSession
            </summary>
            <param name="context"></param>
            <param name="Key"></param>
        </member>
        <member name="T:Shove._Web.Session.SQLServerSession">
            <summary>
            对存放于 SQLServer 中的 Session 进行自定义读写
            P_修改了以下存储过程
            1 TempGetAppID: 把 SET @appId = NULL 改为 SET @appId = 12345678 return 0
            2 TempGetStateItem, TmpGetStateItem2, TmpGetStateItem3,
              TempGetStateItemExclusive, TempGetStateItemExclusive2, TempGetStateItemExclusive3,
              TempInsertStatrItemLong, TempInsertStatrItemShort,
              TempInsertUninitializedItem,
              TempReleaseStatItemExclusive,
              TempRemoveStateItem,
              TempResetTimeout,
              TempUpdateStateItemLong, TempUpdateStateItemLongNullShort,
              TempUpdateStateItemShort, TempUpdateStateItemShortNullLong
              以上存储过程 AS 后面加了一句：set @id = substring(@id, 1, 24)
            </summary>
        </member>
        <member name="M:Shove._Web.Session.SQLServerSession.#ctor(System.String,System.String,System.Int32)">
            <summary>
            构造器
            </summary>
            <param name="_ConnectionString"></param>
            <param name="_SessionID"></param>
            <param name="_TimeOut"></param>
        </member>
        <member name="P:Shove._Web.Session.SQLServerSession.Item(System.String)">
            <summary>
            对 Key 的 Session 值进行读写
            </summary>
            <param name="Key"></param>
            <returns></returns>
        </member>
        <member name="T:Shove._Web.Snapshot.GetImage">
            <summary>
            根据 Url 获取页面快照
            </summary>
        </member>
        <member name="M:Shove._Web.Snapshot.GetImage.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            构造
            </summary>
            <param name="WebSite"></param>
            <param name="ScreenWidth"></param>
            <param name="ScreenHeight"></param>
            <param name="ImageWidth"></param>
            <param name="ImageHeight"></param>
        </member>
        <member name="M:Shove._Web.Snapshot.GetImage.GetBitmap">
            <summary>
            获取快照
            </summary>
            <returns></returns>
        </member>
        <member name="P:Shove._Web.Snapshot.GetImage.ImageHeight">
            <summary>
            
            </summary>
        </member>
        <member name="P:Shove._Web.Snapshot.GetImage.ImageWidth">
            <summary>
            
            </summary>
        </member>
        <member name="P:Shove._Web.Snapshot.GetImage.ScreenHeight">
            <summary>
            
            </summary>
        </member>
        <member name="P:Shove._Web.Snapshot.GetImage.ScreenWidth">
            <summary>
            
            </summary>
        </member>
        <member name="P:Shove._Web.Snapshot.GetImage.WebSite">
            <summary>
            
            </summary>
        </member>
        <member name="T:Shove._Web.Snapshot.Snapshot">
            <summary>
            Web 快照
            </summary>
        </member>
        <member name="M:Shove._Web.Snapshot.Snapshot.TakeSnapshot(System.Object,System.Drawing.Rectangle)">
            <summary>
            
            </summary>
            <param name="pUnknown"></param>
            <param name="bmpRect"></param>
            <returns></returns>
        </member>
        <member name="T:Shove._Web.Snapshot._WebPageSnapshot">
            <summary>
            WebPage 快照
            </summary>
        </member>
        <member name="M:Shove._Web.Snapshot._WebPageSnapshot.Dispose">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:Shove._Web.Snapshot._WebPageSnapshot.InitComobject">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove._Web.Snapshot._WebPageSnapshot.TakeSnapshot">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Shove._Web.Snapshot._WebPageSnapshot.Height">
            <summary>
            
            </summary>
        </member>
        <member name="P:Shove._Web.Snapshot._WebPageSnapshot.Url">
            <summary>
            
            </summary>
        </member>
        <member name="P:Shove._Web.Snapshot._WebPageSnapshot.Width">
            <summary>
            
            </summary>
        </member>
        <member name="T:Shove._Web.Snapshot.WebPageSnapshot">
            <summary>
            WebPage 快照
            </summary>
        </member>
        <member name="M:Shove._Web.Snapshot.WebPageSnapshot.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            构造
            </summary>
            <param name="Url"></param>
            <param name="Width"></param>
            <param name="Height"></param>
        </member>
        <member name="M:Shove._Web.Snapshot.WebPageSnapshot.Capture(System.String,System.String@)">
            <summary>
            捕捉图像
            </summary>
            <param name="TargetFileFullName">带路径的完整目标文件名</param>
            <param name="ErrorDescription">如果方法返回 false, 则此变量包含错误描述</param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Snapshot.WebPageSnapshot.Capture(System.String,System.Drawing.Imaging.ImageFormat,System.String@)">
            <summary>
            捕捉图像
            </summary>
            <param name="TargetFileFullName">带路径的完整目标文件名</param>
            <param name="imageFormat">要保存的图片的文件的图形格式，不指定此参数，则保存为 png 格式</param>
            <param name="ErrorDescription">如果方法返回 false, 则此变量包含错误描述</param>
            <returns></returns>
        </member>
        <member name="T:Shove._Web.Utility">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove._Web.Utility.GetUrl">
            <summary>
            获取当前站点的域名
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Utility.GetUrl(System.Web.HttpContext)">
            <summary>
            获取当前站点的域名
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Utility.GetUrlWithoutHttp">
            <summary>
            获取当前站点的域名，但不附带前面的 http://
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Utility.GetUrlWithoutHttp(System.Web.HttpContext)">
            <summary>
            获取当前站点的域名，但不附带前面的 http://
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Utility.GetRequest(System.String)">
            <summary>
            获取 Url Request 参数，并过滤SQL注入
            </summary>
            <param name="Key">参数的Key</param>
            <returns>经过过滤后的参数值</returns>
        </member>
        <member name="M:Shove._Web.Utility.GetRequest(System.Web.HttpContext,System.String)">
            <summary>
            获取 Url Request 参数，并过滤SQL注入
            </summary>
            <param name="context"></param>
            <param name="Key">参数的Key</param>
            <returns>经过过滤后的参数值</returns>
        </member>
        <member name="M:Shove._Web.Utility.FilteSqlInfusion(System.String)">
            <summary>
            过滤Sql注入，html 编辑器的恶意代码注入
            </summary>
            <param name="input">SQL 语句或构成语句的某个部分的字符串</param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Utility.FilteSqlInfusion(System.String,System.Boolean)">
            <summary>
            过滤Sql注入，html 编辑器的恶意代码注入
            如果 Web.Config 的 AppSetting 中包含 <add key="IsCloseMethod_Shove_FilteSqlInfusion" value="true" />, 则此方法不工作。
            </summary>
            <param name="input">SQL 语句或构成语句的某个部分的字符串</param>
            <param name="ReplaceSingleQuoteMark">是否替换单引号</param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Utility.GetPageFileName">
            <summary>
            获取当前页面的实际文件名
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Utility.GetPageFileName(System.Web.HttpContext)">
            <summary>
            获取当前页面的实际文件名
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Utility.GetRequestKeyAndSort">
            <summary>
            获取冒泡排序法后的 Request Key。
            </summary>
        </member>
        <member name="M:Shove._Web.Utility.BuildUrlParamtersAndSignature(System.String[],System.String,System.String)">
            <summary>
            构建 REST 模式的网关 Url 的参数，将参数数组进行排序，签名，返回签名后的串
            </summary>
            <param name="Paramters"></param>
            <param name="Key"></param>
            <param name="SignatureParamteName"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Utility.GetUrlParamtersAndVasidSignature(System.String,System.String,System.String@)">
            <summary>
            解析 REST 模式的网关 Url 的参数，检验 Sign，并返回获取到的参数
            </summary>
            <param name="Key"></param>
            <param name="SignatureParamteName"></param>
            <param name="ErrorDescription"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Utility.Sort(System.String[],System.Char)">
            <summary>
            字符串数组排序
            </summary>
            <param name="input"></param>
            <param name="SplitChar"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.Utility.Post(System.String,System.String,System.Int32)">
            <summary>
            Post 提交
            </summary>
            <param name="Url"></param>
            <param name="encodeing"></param>
            <param name="TimeoutSeconds"></param>
            <returns></returns>
        </member>
        <member name="T:Shove._Web.WebConfig">
            <summary>
            Web.config 操作类
            定义为不可继承性
            </summary>
        </member>
        <member name="M:Shove._Web.WebConfig.GetAppSettingsString(System.String)">
            <summary>
            GetAppSettingsString
            </summary>
            <param name="Key"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.WebConfig.GetAppSettingsBool(System.String)">
            <summary>
            GetAppSettingsBool
            </summary>
            <param name="Key"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.WebConfig.GetAppSettingsBool(System.String,System.Boolean)">
            <summary>
            GetAppSettingsBool
            </summary>
            <param name="Key"></param>
            <param name="Default"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.WebConfig.GetAppSettingsInt(System.String)">
            <summary>
            GetAppSettingsInt
            </summary>
            <param name="Key"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.WebConfig.GetAppSettingsInt(System.String,System.Int32)">
            <summary>
            GetAppSettingsInt
            </summary>
            <param name="Key"></param>
            <param name="Default"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.WebConfig.GetAppSettingsDouble(System.String)">
            <summary>
            GetAppSettingsDouble
            </summary>
            <param name="Key"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.WebConfig.GetAppSettingsDouble(System.String,System.Double)">
            <summary>
            GetAppSettingsDouble
            </summary>
            <param name="Key"></param>
            <param name="Defalut"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.WebConfig.GetConfigString(System.String,System.String)">
            <summary>
            GetConfigString
            </summary>
            <param name="SectionName"></param>
            <param name="Key"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.WebConfig.GetConfigDecimal(System.String,System.String)">
            <summary>
            得到配置文件中的配置decimal信息
            </summary>
            <param name="SectionName"></param>
            <param name="Key"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.WebConfig.GetConfigInt(System.String,System.String)">
            <summary>
            得到配置文件中的配置 int 信息
            </summary>
            <param name="SectionName"></param>
            <param name="Key"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.WebConfig.SetConfigKeyValue(System.String,System.String,System.String)">
            <summary>
            写入配置文件
            </summary>
            <param name="SectionName"></param>
            <param name="Key"></param>
            <param name="Value"></param>
        </member>
        <member name="M:Shove._Web.WebConfig.SetConfigKeyValue(System.String,System.String,System.String,System.String)">
            <summary>
            写入配置文件
            </summary>
            <param name="ConfigFileName"></param>
            <param name="SectionName"></param>
            <param name="Key"></param>
            <param name="Value"></param>
        </member>
        <member name="M:Shove._Web.WebConfig.RemoveSectionKey(System.String,System.String)">
            <summary>
            RemoveSectionKey
            </summary>
            <param name="SectionName"></param>
            <param name="Key"></param>
        </member>
        <member name="M:Shove._Web.WebConfig.RemoveSectionKey(System.String,System.String,System.String)">
            <summary>
            RemoveSectionKey
            </summary>
            <param name="ConfigFileName"></param>
            <param name="SectionName"></param>
            <param name="Key"></param>
        </member>
        <member name="T:Shove._Web.WebServiceCallResult">
             <summary>
            WebServiceCallResult 的摘要说明
             </summary>
        </member>
        <member name="F:Shove._Web.WebServiceCallResult.Result">
            <summary>
            Result
            </summary>
        </member>
        <member name="F:Shove._Web.WebServiceCallResult.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="F:Shove._Web.WebServiceCallResult.Additional">
            <summary>
            Additional
            </summary>
        </member>
        <member name="M:Shove._Web.WebServiceCallResult.#ctor">
            <summary>
            构造器
            </summary>
        </member>
        <member name="M:Shove._Web.WebServiceCallResult.#ctor(System.Int64)">
            <summary>
            构造器
            </summary>
            <param name="result"></param>
        </member>
        <member name="M:Shove._Web.WebServiceCallResult.#ctor(System.Int64,System.String)">
            <summary>
            构造器
            </summary>
            <param name="result"></param>
            <param name="description"></param>
        </member>
        <member name="M:Shove._Web.WebServiceCallResult.#ctor(System.Int64,System.String,System.Object[])">
            <summary>
            构造器
            </summary>
            <param name="result"></param>
            <param name="description"></param>
            <param name="additional"></param>
        </member>
        <member name="M:Shove._Web.WebServiceCallResult.Serialize">
            <summary>
            将 WebServiceCallResult 类序列化
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove._Web.WebServiceCallResult.Deserialize(System.Byte[])">
            <summary>
            从 WebService 返回的二进制值转换到 WebServiceCallResult 类。
            </summary>
            <param name="Buffer"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.ControlExt">
            <summary>
            ControlExt 的摘要说明。
            </summary>
        </member>
        <member name="M:Shove.ControlExt.FillDropDownList(System.Web.UI.WebControls.DropDownList,System.Data.DataTable,System.String,System.String)">
            <summary>
            填充 DropDownList 控件
            </summary>
        </member>
        <member name="M:Shove.ControlExt.FillDropDownList(System.Web.UI.WebControls.DropDownList,System.Data.DataTable,System.String,System.String,System.String,System.Int64)">
            <summary>
            递归填充 DropDownList 控件，用于具有 ParentID 指向 ID 的表
            </summary>
        </member>
        <member name="M:Shove.ControlExt.FillDropDownList_Sub(System.Web.UI.WebControls.DropDownList,System.Data.DataTable,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            上面一个方法的递归子方法
            </summary>
        </member>
        <member name="M:Shove.ControlExt.SetDownListBoxText(System.Web.UI.WebControls.DropDownList,System.String)">
            <summary>
            设置下拉文本，return -1：下拉无项目。-2：下拉无此项目
            </summary>
        </member>
        <member name="M:Shove.ControlExt.SetDownListBoxTextFromValue(System.Web.UI.WebControls.DropDownList,System.String)">
            <summary>
            根据Item的Value设置下拉文本，return -1：下拉无项目。-2：下拉无此项目
            </summary>
        </member>
        <member name="M:Shove.ControlExt.FillListBox(System.Web.UI.WebControls.ListBox,System.Data.DataTable,System.String,System.String)">
            <summary>
            填充 ListBox 控件
            </summary>
        </member>
        <member name="M:Shove.ControlExt.SetListBoxText(System.Web.UI.WebControls.ListBox,System.String)">
            <summary>
            设置ListBox，return -1：无项目。-2：无此项目
            </summary>
        </member>
        <member name="M:Shove.ControlExt.SetListBoxTextFromValue(System.Web.UI.WebControls.ListBox,System.String)">
            <summary>
            根据Item的Value设置 ListBox 文本，return -1：下拉无项目。-2：下拉无此项目
            </summary>
        </member>
        <member name="M:Shove.ControlExt.SetTreeViewSelected(System.Web.UI.WebControls.TreeView,System.String)">
            <summary>
            根据值设置 CheryTreeView 的选中节点
            </summary>
        </member>
        <member name="M:Shove.ControlExt.SetTreeViewSelectedFromValue(System.Web.UI.WebControls.TreeView,System.String)">
            <summary>
            根据值设置 CheryTreeView 的选中节点
            </summary>
        </member>
        <member name="T:Shove.ControlExt.Item">
            <summary>
            WinForm 中 ListItem, DropdownList 的 Item，可以记录 value
            </summary>
        </member>
        <member name="F:Shove.ControlExt.Item.Text">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.ControlExt.Item.Value">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.ControlExt.Item.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.ControlExt.Item.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Shove.ControlExt.Item.#ctor(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="value"></param>
        </member>
        <member name="M:Shove.ControlExt.Item.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove._Convert">
            <summary>
            常用的字符，Asc的转换以及其他转换工具。
            </summary>
        </member>
        <member name="M:Shove._Convert.StrToShort(System.String,System.Int16)">
            <summary>
            字符串转 Short
            </summary>
            <param name="str"></param>
            <param name="Default"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Convert.StrToInt(System.String,System.Int32)">
            <summary>
            字符串转 Int
            </summary>
            <param name="str"></param>
            <param name="Default"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Convert.StrToLong(System.String,System.Int64)">
            <summary>
            字符串转 Long
            </summary>
            <param name="str"></param>
            <param name="Default"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Convert.StrToDouble(System.String,System.Double)">
            <summary>
            字符串转 Double
            </summary>
            <param name="str"></param>
            <param name="Default"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Convert.StrToFloat(System.String,System.Single)">
            <summary>
            字符串转 Float
            </summary>
            <param name="str"></param>
            <param name="Default"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Convert.StrToBool(System.String,System.Boolean)">
            <summary>
            字符串转 Boolean
            </summary>
            <param name="str"></param>
            <param name="Default"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Convert.StrToDateTime(System.String,System.String)">
            <summary>
            字符串转时间格式
            </summary>
            <param name="str"></param>
            <param name="Default"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Convert.Asc(System.Char)">
            <summary>
            字符转ASCII
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Convert.Chr(System.Int32)">
            <summary>
            ASCII 转字符
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Convert.ToHtmlCode(System.String)">
            <summary>
            普通 TextBox 的文本，需要通过这个转换后，Label 显示才会不丢失“回车”、“空格”等格式。
            </summary>
            <param name="sourceStr"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Convert.ToTextCode(System.String)">
            <summary>
            如果经过 ToHtmlCode 转换过，可以让 Label 显示，但要 TextBox 显示，则应该用这个函数转换回来，再赋值给 TextBox 控件显示。
            </summary>
            <param name="sourceStr"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Convert.ToSBC(System.String)">
             <summary>
             转全角的函数(SBC case)
             </summary>
             <param name="input">任意字符串</param>
             <returns>全角字符串</returns>
            <remarks>
            全角空格为12288，半角空格为32
            其他字符半角(33-126)与全角(65281-65374)的对应关系是：均相差65248
            </remarks>        
        </member>
        <member name="M:Shove._Convert.ToDBC(System.String)">
             <summary>
             转半角的函数(DBC case)
             </summary>
             <param name="input">任意字符串</param>
             <returns>半角字符串</returns>
            <remarks>
            全角空格为12288，半角空格为32
            其他字符半角(33-126)与全角(65281-65374)的对应关系是：均相差65248
            </remarks>
        </member>
        <member name="T:Shove._Convert.ChineseMoney">
            <summary>
            中文大写金额转换
            </summary>
        </member>
        <member name="F:Shove._Convert.ChineseMoney.Yuan">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._Convert.ChineseMoney.Jiao">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove._Convert.ChineseMoney.Fen">
            <summary>
            
            </summary>
        </member>
        <member name="P:Shove._Convert.ChineseMoney.ZeroString">
            <summary>
            只读属性: "零元"
            </summary>
        </member>
        <member name="M:Shove._Convert.ChineseMoney.#ctor(System.Decimal)">
            <summary>
            
            </summary>
            <param name="money"></param>
        </member>
        <member name="M:Shove._Convert.ChineseMoney.ToString">
            <summary>
            重载 ToString() 方法，返回大写金额字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:Shove._Convert.Chinese">
            <summary>
            汉字相关
            </summary>
        </member>
        <member name="M:Shove._Convert.Chinese.ToTraditional(System.String)">
            <summary>
            转换到繁体
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Convert.Chinese.ToSimplified(System.String)">
            <summary>
            转换到简体
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Convert.Chinese.ToPinYin(System.String)">
            <summary>
            转换汉字到拼音
            </summary>
            <param name="input">输入的汉字字串</param>
            <returns></returns>
        </member>
        <member name="M:Shove._Convert.Chinese.ToPinYinFirstCharacter(System.String)">
            <summary>
            转换汉字到拼音首字母
            </summary>
            <param name="input">输入的汉字字串</param>
            <returns></returns>
        </member>
        <member name="M:Shove._Convert.Chinese.ToPinYinFull(System.String)">
            <summary>
            转换汉字到完整拼音(带声调)
            </summary>
            <param name="input">输入的汉字字串</param>
            <returns></returns>
        </member>
        <member name="M:Shove._Convert.Chinese.ToPinYin(System.String,System.Int32)">
            <summary>
            转换汉字到拼音
            </summary>
            <param name="input"></param>
            <param name="type">1 全拼 2 声母 3 原始完整（带声调）</param>
            <returns></returns>
        </member>
        <member name="M:Shove._Convert.DataTableToXML(System.Data.DataTable)">
            <summary>
            DataTable 转换到 XML 字符串
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Convert.XMLToDataTable(System.String)">
            <summary>
            Xml 数据转为 DataTable
            </summary>
            <param name="Xml"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Convert.UnicodeToChinese(System.String)">
            <summary>
            Unicode \u1234 类型的编码转为汉字
            </summary>
            <param name="input">为 \u1234\u2345\u2345 类型的 Unicode 汉字编码字符串</param>
            <returns>返回为汉字字符串</returns>
        </member>
        <member name="T:Shove.HTML.HTML">
            <summary>
            HTML 的摘要说明。
            </summary>
        </member>
        <member name="M:Shove.HTML.HTML.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.HTML.HTML.GetHTML(System.String)">
            <summary>
            获取 Url 的相应 html
            </summary>
            <param name="Url"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.HTML.HTML.GetHTML(System.String,System.Int32)">
            <summary>
            获取 Url 的相应 html
            </summary>
            <param name="Url"></param>
            <param name="Timeout">超时毫秒</param>
            <returns></returns>
        </member>
        <member name="M:Shove.HTML.HTML.GetHTML(System.String,System.Int32@,System.DateTime@,System.String@)">
            <summary>
            获取 Url 的相应 html
            </summary>
            <param name="Url"></param>
            <param name="Type"></param>
            <param name="LastModifiedTime"></param>
            <param name="HostAbsolutePath"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.HTML.HTML.ReBuildUrl(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="Url"></param>
            <param name="HostAbsolutePath"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.HTML.HTML.GetHTMLUrls(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            获取 html 包含的所有的链接地址
            </summary>
            <param name="Page"></param>
            <param name="HostAbsolutePath"></param>
            <param name="MaxLen"></param>
            <param name="FindUrlLevel"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.HTML.HTML.GetHTMLUrlsWithDescription(System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            获取 html 包含的所有的链接地址以及链接的 Title
            </summary>
            <param name="Page"></param>
            <param name="HostAbsolutePath"></param>
            <param name="HrefMaxLen"></param>
            <param name="DescriptionMaxLen"></param>
            <param name="FindUrlLevel"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.HTML.HTML.StandardizationHTML(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            将 html 代码规范化，如果没有 html /html 作为开头、结尾，将自动补齐。
            </summary>
            <param name="html"></param>
            <param name="isClearCommentary"></param>
            <param name="isClearScript"></param>
            <param name="isClearStyle"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.HTML.HTML.StandardizationHTML(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            将 html 代码规范化
            </summary>
            <param name="html"></param>
            <param name="isClearCommentary"></param>
            <param name="isClearScript"></param>
            <param name="isClearStyle"></param>
            <param name="isReplenishHtmlTag">是否补上首尾的 html /html 标记></param>
            <returns></returns>
        </member>
        <member name="M:Shove.HTML.HTML.GetTitle(System.String,System.Int32)">
            <summary>
            获取 Html 文档的 Title 部分
            </summary>
            <param name="html"></param>
            <param name="MaxLen"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.HTML.HTML.GetKeywords(System.String,System.Int32)">
            <summary>
            获取 Html 文档的 Keyword 部分
            </summary>
            <param name="html"></param>
            <param name="MaxLen"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.HTML.HTML.GetDescription(System.String,System.Int32)">
            <summary>
            获取 Html 文档的 Description 部分
            </summary>
            <param name="html"></param>
            <param name="MaxLen"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.HTML.HTML.GetText(System.String,System.Int32)">
            <summary>
            获取 Html 文档的纯文字部分，使用前需要用 StandardizationHTML 规范化
            </summary>
            <param name="html"></param>
            <param name="MaxLen"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.HTML.HTML.GetBody(System.String,System.Boolean)">
            <summary>
            获取 Html 文档的 Body 部分，使用前需要用 StandardizationHTML 规范化
            </summary>
            <param name="html"></param>
            <param name="WithBodyTag"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.HTML.HTML.ClearReplace(System.String)">
            <summary>
            清除 Html 文档中的某部分
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.HTML.HTML.ClearScript(System.String)">
            <summary>
            清除 Html 文档中的 Script 部分
            </summary>
            <param name="html"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.HTML.HTML.ClearStyle(System.String)">
            <summary>
            清除 Html 文档中的 Style 部分
            </summary>
            <param name="html"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.HTML.HTML.ClearCommentary(System.String)">
            <summary>
            清除 Html 文档中的 Commentary 部分
            </summary>
            <param name="html"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.HTML.HTML.SetTextKeywordsHighLight(System.String,System.String[],System.String)">
            <summary>
            将 Html 文档中的关键词用 Color 进行高亮
            </summary>
            <param name="Text"></param>
            <param name="Keywords"></param>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="T:Shove._String">
            <summary>
            字符串相关。
            </summary>
        </member>
        <member name="M:Shove._String.StringAt(System.String,System.Char)">
            <summary>
            字符 ch 在 字符串 str 中出现的次数
            </summary>
            <param name="str"></param>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._String.ReplaceAt(System.String,System.Char,System.Int32)">
            <summary>
            替换字符串中的某个字符
            </summary>
            <param name="input"></param>
            <param name="ch"></param>
            <param name="pos"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._String.Reverse(System.String)">
            <summary>
            翻转字符串
            </summary>
            <param name="sSourceStr"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._String.Cut(System.String,System.Int32)">
            <summary>
            字串截取(考虑汉字)
            </summary>
            <param name="Input">要截取的字符串</param>
            <param name="Length">要截取的字符串长度</param>
            <returns></returns>
        </member>
        <member name="M:Shove._String.HtmlTextCut(System.String,System.Int32)">
            <summary>
            HTML 格式字串截取
            </summary>
            <param name="Input">要截取的字符</param>
            <param name="Length">要截取的字符长度</param>
            <returns></returns>
        </member>
        <member name="M:Shove._String.Split(System.String,System.Int32)">
            <summary>
            根据长度拆分字符串，不拆短汉字而产生乱码
            </summary>
            <param name="Input">输入的字符串</param>
            <param name="PartLength">每部分的长度</param>
            <returns>返回被拆分的多部分字符串数组</returns>
        </member>
        <member name="M:Shove._String.Split(System.String,System.Int32,System.Int32)">
            <summary>
            根据长度拆分字符串，不拆短汉字而产生乱码
            </summary>
            <param name="Input">输入的字符串</param>
            <param name="PartLength">每部分的长度</param>
            <param name="MaxPartNum">最多只返回几个部分，右边多余的部分截取</param>
            <returns>返回被拆分的多部分字符串数组</returns>
        </member>
        <member name="M:Shove._String.BytesToHexString(System.Byte[])">
            <summary>
            Byte[] 转换成16进制字符串，结果带 0x 前缀。 _Byte 中有此方法，但结果不带 0x 前缀
            </summary>
            <param name="Input">input bytes[]</param>
            <returns>16进制字符串：0x......</returns>
        </member>
        <member name="M:Shove._String.GetLength(System.String)">
            <summary> 
            检测含有中文字符串的实际长度 ，一个汉字或全角字符算 2 个长度
            </summary> 
            <param name="str">字符串</param> 
        </member>
        <member name="M:Shove._String.GetBytesLength(System.String)">
            <summary> 
            检测含有中文字符串的实际长度，使用指定的字符集
            </summary> 
            <param name="str">字符串</param> 
        </member>
        <member name="M:Shove._String.GetBytesLength(System.String,System.Text.Encoding)">
            <summary>
            检测含有中文字符串的实际长度，使用指定的字符集
            </summary>
            <param name="str"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._String.isChineseCharacters(System.Char)">
            <summary>
            是否汉字
            </summary>
        </member>
        <member name="M:Shove._String.isDBCCharacters(System.Char)">
            <summary>
            是否全角字符
            </summary>
        </member>
        <member name="M:Shove._String.StandardizationIdentifier(System.String)">
            <summary>
            将字符串转化为标准的“标识符”
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._String.Compress(System.String)">
            <summary>
            字符串压缩
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._String.Decompress(System.Byte[])">
            <summary>
            字符串解压缩
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._String.EncodeBase64(System.String)">
            <summary>
            将字符串转为 Base64 编码
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._String.DecodeBase64(System.String)">
            <summary>
            将 Base64 编码转为字符串
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._String.BytesToString(System.Byte[])">
            <summary>
            Byte[] 转换成16进制字符串
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._String.ConvertEncoding(System.String,System.String,System.String)">
            <summary>
            字符串转换编码
            </summary>
            <param name="input"></param>
            <param name="srcEncoding"></param>
            <param name="tarEncoding"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._String.ConvertEncoding(System.String,System.Text.Encoding,System.Text.Encoding)">
            <summary>
            字符串转换编码
            </summary>
            <param name="input"></param>
            <param name="srcEncoding"></param>
            <param name="tarEncoding"></param>
            <returns></returns>
        </member>
        <member name="T:Shove._String.Valid">
            <summary>
            校验相关
            </summary>
        </member>
        <member name="M:Shove._String.Valid.isEmail(System.String)">
            <summary>
            校验 Email 格式
            </summary>
            <param name="Email"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._String.Valid.isIDCardNumber(System.String)">
            <summary>
            校验身份证格式_大陆
            </summary>
            <param name="IDCardNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._String.Valid.isIDCardNumber_Taiwan(System.String)">
            <summary>
            校验身份证格式_台湾
            </summary>
            <param name="IDCardNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._String.Valid.isIDCardNumber_Hongkong(System.String)">
            <summary>
            校验身份证格式_香港
            </summary>
            <param name="IDCardNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._String.Valid.isIDCardNumber_Singapore(System.String)">
            <summary>
            校验身份证格式_新加坡
            </summary>
            <param name="IDCardNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._String.Valid.isIDCardNumber_Macau(System.String)">
            <summary>
            校验身份证格式_澳门
            </summary>
            <param name="IDCardNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._String.Valid.isBankCardNumber(System.String)">
            <summary>
            校验银行卡格式
            </summary>
            <param name="BankCardNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._String.Valid.isDateTime(System.String)">
            <summary>
            校验日期时间格式
            </summary>
            <param name="DateTimeString"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._String.Valid.isDate(System.String)">
            <summary>
            校验日期格式
            </summary>
            <param name="DateString"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._String.Valid.isIPAddress(System.String)">
            <summary>
            校验 IP 地址格式
            </summary>
            <param name="Address"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._String.Valid.isUrl(System.String)">
            <summary>
            校验域名格式，格式要求域名带 http://  ftp://  https:// 等等前缀
            </summary>
            <param name="Url"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._String.Valid.isUrl(System.String,System.Boolean)">
            <summary>
            校验域名格式
            </summary>
            <param name="Url"></param>
            <param name="WithPreFix">是否需要代 http:// ftp:// https:// 等前缀</param>
            <returns></returns>
        </member>
        <member name="M:Shove._String.Valid.isMobile(System.String)">
            <summary>
            校验手机号码
            </summary>
            <param name="MobileNumber"></param>
            <returns></returns>
        </member>
        <member name="T:Shove.WordSplit.WordsList">
            <summary>
            WordsList
            </summary>
        </member>
        <member name="F:Shove.WordSplit.WordsList.m_List">
            <summary>
            
            </summary>
        </member>
        <member name="T:Shove.WordSplit.Dictionary">
            <summary>
            Dictionary
            </summary>
        </member>
        <member name="F:Shove.WordSplit.Dictionary.m_WordsList">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.WordSplit.Dictionary.m_isOpen">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.WordSplit.Dictionary.m_FlagNum">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.WordSplit.Dictionary.m_WordMaxLen">
            <summary>
            
            </summary>
        </member>
        <member name="F:Shove.WordSplit.Dictionary.ChineseDictionaryFileName">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.WordSplit.Dictionary.#ctor">
            <summary>
            Dictionary
            </summary>
        </member>
        <member name="M:Shove.WordSplit.Dictionary.#ctor(System.String)">
            <summary>
            Dictionary
            </summary>
            <param name="chineseDictionaryFileName"></param>
        </member>
        <member name="M:Shove.WordSplit.Dictionary.OpenDictionary">
            <summary>
            OpenDictionary
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.WordSplit.Dictionary.FindWordsList(System.String)">
            <summary>
            FindWordsList
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.WordSplit.Dictionary.GetWordsListAll(System.Boolean,System.Boolean)">
            <summary>
            GetWordsListAll
            </summary>
            <param name="WithFlag"></param>
            <param name="ReSort"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.WordSplit.Dictionary.AddWord(System.String)">
            <summary>
            AddWord
            </summary>
            <param name="Word"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.WordSplit.Dictionary.DeleteWord(System.String)">
            <summary>
            DeleteWord
            </summary>
            <param name="Word"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.WordSplit.Dictionary.WordSort">
            <summary>
            WordSort
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.WordSplit.Dictionary.WordSort(System.Int32)">
            <summary>
            WordSort
            </summary>
            <param name="Unicode"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.WordSplit.Dictionary.WordExist(System.String)">
            <summary>
            WordExist
            </summary>
            <param name="sWord"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.WordSplit.Dictionary.Save">
            <summary>
            Save
            </summary>
            <returns></returns>
        </member>
        <member name="M:Shove.WordSplit.Dictionary.Save(System.String)">
            <summary>
            Save
            </summary>
            <param name="chineseDictionaryFileName"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.WordSplit.Dictionary.SaveToTxtFile(System.String)">
            <summary>
            SaveToTxtFile
            </summary>
            <param name="TxtFileName"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.WordSplit.Dictionary.LoadFromTxtFile(System.String)">
            <summary>
            LoadFromTxtFile
            </summary>
            <param name="TxtFileName"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.WordSplit.Dictionary.GetWordAtDictionary(System.String)">
            <summary>
            找与 sWord 串的前面最长的词(找这个字开头的最长的词)
            </summary>
            <param name="sWord"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.WordSplit.Dictionary.GetWordType(System.Char)">
            <summary>
            GetWordType
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.WordSplit.Dictionary.CalcWordMaxLen">
            <summary>
            CalcWordMaxLen
            </summary>
        </member>
        <member name="T:Shove.WordSplit.ShoveWordSplit">
            <summary>
            中文分词
            </summary>
        </member>
        <member name="F:Shove.WordSplit.ShoveWordSplit.m_Dict">
            <summary>
            词典库
            </summary>
        </member>
        <member name="M:Shove.WordSplit.ShoveWordSplit.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Shove.WordSplit.ShoveWordSplit.#ctor(System.String)">
            <summary>
            构造、装载词库
            </summary>
            <param name="chineseDictionaryFileName">绝对路径文件名</param>
        </member>
        <member name="M:Shove.WordSplit.ShoveWordSplit.GetSlpitWords(System.String)">
            <summary>
            分词
            </summary>
            <param name="sSource"></param>
            <returns></returns>
        </member>
        <member name="M:Shove.WordSplit.ShoveWordSplit.ReBuildWords(System.String[])">
            <summary>
            
            </summary>
            <param name="sWordsList"></param>
            <returns></returns>
        </member>
        <member name="T:Shove._Xml">
            <summary>
            Xml 相关
            </summary>
        </member>
        <member name="M:Shove._Xml.XmlToJson(System.String)">
            <summary>
            将 Xml 转换为 Json 格式
            </summary>
            <param name="XmlInput">输入的 xml 字符串</param>
            <returns></returns>
        </member>
        <member name="T:Shove._Byte">
            <summary>
            字符串相关。
            </summary>
        </member>
        <member name="M:Shove._Byte.ByteCompare(System.Byte[],System.Byte[])">
            <summary>
            二个 Byte[] 进行完全比较
            </summary>
            <param name="input1"></param>
            <param name="input2"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Byte.ByteCopy(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            将 Source 数组的部分元素 CopyTo Destination 数组的制定开始位置
            </summary>
            <param name="Source"></param>
            <param name="StartIndex"></param>
            <param name="Count"></param>
            <param name="Destination"></param>
            <param name="DestinationStartIndex"></param>
        </member>
        <member name="M:Shove._Byte.ExtractBytesFromBuffer(System.Byte[],System.Int32,System.Int32)">
            <summary>
            从 Buffer 中指定的位置提取一个新的子数组
            </summary>
            <param name="Buffer"></param>
            <param name="Index"></param>
            <param name="Count"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Byte.ExtractStringFromBuffer(System.Byte[],System.Int32,System.Int32)">
            <summary>
            从 Buffer 中指定的位置提取一个字符串
            </summary>
            <param name="Buffer"></param>
            <param name="Index"></param>
            <param name="Count"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Byte.ExtractIntFromBuffer(System.Byte[],System.Int32,System.Int32)">
            <summary>
            从 Buffer 中指定的位置提取一个 int
            </summary>
            <param name="Buffer"></param>
            <param name="Index"></param>
            <param name="Count"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Byte.ExtractLongFromBuffer(System.Byte[],System.Int32,System.Int32)">
            <summary>
            从 Buffer 中指定的位置提取一个 lonog
            </summary>
            <param name="Buffer"></param>
            <param name="Index"></param>
            <param name="Count"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Byte.ExtractFloatFromBuffer(System.Byte[],System.Int32,System.Int32)">
            <summary>
            从 Buffer 中指定的位置提取一个 float
            </summary>
            <param name="Buffer"></param>
            <param name="Index"></param>
            <param name="Count"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Byte.ExtractDoubleFromBuffer(System.Byte[],System.Int32,System.Int32)">
            <summary>
            从 Buffer 中指定的位置提取一个 double
            </summary>
            <param name="Buffer"></param>
            <param name="Index"></param>
            <param name="Count"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Byte.BytesToHexString(System.Byte[])">
            <summary>
            Byte[] 转换成16进制字符串，不带 0x 前缀。 _String 中有此方法，但结果带有 0x 前缀
            </summary>
            <param name="Input">input bytes[]</param>
            <returns>16进制字符串：0x......</returns>
        </member>
        <member name="M:Shove._Byte.HexToString(System.String)">
            <summary>
            16进制数字串转为普通字符串
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Byte.HexToBytes(System.String)">
            <summary>
            16进制数字串转为 Byte 数组
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Shove._Byte.StringToHex(System.String)">
            <summary>
            字符串转为 Byte[]
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
    </members>
</doc>
